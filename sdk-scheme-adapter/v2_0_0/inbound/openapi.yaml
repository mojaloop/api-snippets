openapi: 3.0.1
info:
  title: Mojaloop SDK Inbound Scheme Adapter API
  description: >
    API specification for the Mojaloop SDK Inbound Scheme Adapter API â€“ to be implemented by the Digital Financial Service Provider's (DFSP) backend.


    **Note on terminology:** The term "Switch" is equal to the term "Hub", and the term "FSP" is equal to the term "DFSP".
  license:
    name: Apache License Version 2.0, January 2004
    url: http://www.apache.org/licenses/
  version: 1.1.0

paths:
  /bulkTransactions/{bulkTransactionId}:
    parameters:
      - $ref: ../components/parameters/bulkTransactionId.yaml
    put:
      description: The HTTP request `PUT /bulkTransactions/{bulkTransactionId}` is used to request information regarding a bulk transaction, i.e. when autoAcceptParty or autoAcceptQuote  is false then the payer need to provide confirmation to proceed with further processing of the request. The `{bulkTransactionId}` in the URI should contain the `bulkTransactionId` that was used for the creation of the bulk transfer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../components/schemas/bulkTransactionResponse.yaml
        description: An incoming notification for fulfiled transfer
      responses:
        '200':
          description: The notification was accepted
        '500':
          $ref: '#/components/responses/500'
      summary: Request is used for bulk transaction confirmations
      tags:
        - BulkTransactions
  /participants/{idType}/{idValue}:
    get:
      description: The HTTP request `GET /participants/{idType}/{idValue}` is used to find out in which FSP the requested party, defined by `{idType}` and `{idValue}`, is located.
      parameters:
        - $ref: '#/components/parameters/idType'
        - $ref: '#/components/parameters/idValue'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/participantsResponse'
          description: Response containing details of the requested party
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      summary: Asks for the identifier (fspId) of the scheme participant (FSP) that can handle transfers for the specified identifier type and value
      tags:
        - Participants
  /participants/{idType}/{idValue}/{idSubValue}:
    get:
      description: The HTTP request `GET /participants/{idType}/{idValue}/{idSubValue}` is used to find out in which FSP the requested party, defined by `{idType}`, `{idValue}` and `{idSubValue}` is located.
      parameters:
        - $ref: '#/components/parameters/idType'
        - $ref: '#/components/parameters/idValue'
        - $ref: '#/components/parameters/idSubValue'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/participantsResponse'
          description: Response containing details of the requested party
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      summary: Asks for the identifier (fspId) of the scheme participant (FSP) that can handle transfers for the specified identifier type and value
      tags:
        - Participants
  /parties/{idType}/{idValue}:
    get:
      description: The HTTP request `GET /parties/{idType}/{idValue}` is used to look up information regarding the requested transfer party, identified by `{idType}` and `{idValue}`.
      parameters:
        - $ref: '#/components/parameters/idType'
        - $ref: '#/components/parameters/idValue'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferParty'
          description: Response containing details of the requested party
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      summary: Requests information relating to a transfer party identified by the specified identifier type and value
      tags:
        - Parties
  /parties/{idType}/{idValue}/{idSubValue}:
    get:
      description: The HTTP request `GET /parties/{idType}/{idValue}/{idSubValue}` is used to look up information regarding the requested transfer party, identified by `{idType}`, `{idValue}` and `{idSubValue}`.
      parameters:
        - $ref: '#/components/parameters/idType'
        - $ref: '#/components/parameters/idValue'
        - $ref: '#/components/parameters/idSubValue'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferParty'
          description: Response containing details of the requested party
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      summary: Requests information relating to a transfer party identified by the specified identifier type and value
      tags:
        - Parties
  /quoterequests:
    post:
      description: The HTTP request `POST /quoterequests` is used to request the creation of a quote for the provided financial transaction.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quoteRequest'
        description: Request for a transfer quotation
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quoteResponse'
          description: A response to the transfer quotation request
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      summary: Requests a quote for the specified transfer
      tags:
        - Quotes
  /transfers:
    post:
      description: The HTTP request `POST /transfers` is used to request the creation of a transfer for the transfer party.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferRequest'
        description: An incoming transfer request
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferResponse'
          description: The transfer was accepted
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      summary: Transfers funds from an external account to an internal account
      tags:
        - Transfers
  /transfers/{transferId}:
    get:
      description: The HTTP request `GET /transfers/{transferId}` is used to get information regarding a transfer created or requested earlier. The `{transferId}` in the URI should contain the `transferId` that was used for the creation of the transfer.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferDetailsResponse'
          description: The transfer was accepted
        '500':
          $ref: '#/components/responses/500'
      summary: Retrieves information for a specific transfer
      tags:
        - Transfers
    parameters:
      - $ref: '#/components/parameters/transferId'
    put:
      description: The HTTP request `PUT /transfers/{transferId}` is used to receive notification for transfer being fulfiled when the FSP is a Payee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fulfilNotification'
        description: An incoming notification for fulfiled transfer
      responses:
        '200':
          description: The notification was accepted
        '500':
          $ref: '#/components/responses/500'
      summary: Receive notification for a specific transfer
      tags:
        - Transfers

components:
  parameters:
    idSubValue:
      description: Either a sub-identifier of a `{idValue}`, or a sub-type of the `{idType}`, normally a `{personalIdType}`
      in: path
      name: idSubValue
      required: true
      schema:
        maxLength: 128
        minLength: 1
        type: string
    idType:
      description: |
        Below are the allowed values for the enumeration.

        - MSISDN -  An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.

        - ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.
      in: path
      name: idType
      required: true
      schema:
        enum:
          - MSISDN
          - ACCOUNT_ID
        type: string
    idValue:
      description: Identifier of the party.
      in: path
      name: idValue
      required: true
      schema:
        maxLength: 128
        minLength: 1
        type: string
    transferId:
      in: path
      name: transferId
      required: true
      schema:
        type: string
  responses:
    '400':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: Malformed or missing required headers or parameters
    '404':
      description: The party specified by the provided identifier type and value is not known to the server
    '500':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: An error occurred processing the request
  schemas:
    amountCurrency:
      description: Object containing Amount and Currency of the transfer.
      properties:
        amount:
          $ref: '#/components/schemas/money'
        currency:
          $ref: '#/components/schemas/currency'
      required:
        - amount
        - currency
      type: object
    amountType:
      description: SEND for send amount, RECEIVE for receive amount.
      enum:
        - SEND
        - RECEIVE
      type: string
    currency:
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GGP
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - IMP
        - INR
        - IQD
        - IRR
        - ISK
        - JEP
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SPL
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TVD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XDR
        - XOF
        - XPF
        - XTS
        - XXX
        - YER
        - ZAR
        - ZMW
        - ZWD
      maxLength: 3
      minLength: 3
      type: string
    dateOfBirth:
      description: Date of birth in the form YYYY-MM-DD.
      pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
      type: string
    errorResponse:
      properties:
        message:
          description: Error message text.
          type: string
        statusCode:
          description: Error code as string.
          type: string
      required:
        - statusCode
      type: object
    extensionItem:
      properties:
        key:
          maxLength: 32
          minLength: 1
          type: string
        value:
          maxLength: 128
          minLength: 1
          type: string
      type: object
    extensionList:
      items:
        $ref: '#/components/schemas/extensionItem'
      maxItems: 16
      minItems: 0
      type: array
    extensionListComplex:
      description: Data model for the complex type ExtensionList
      properties:
        extension:
          description: Number of Extension elements
          items:
            $ref: '#/components/schemas/extensionItem'
          maxItems: 16
          minItems: 1
          type: array
      required:
        - extension
      type: object
    fspId:
      description: FSP identifier.
      maxLength: 32
      minLength: 1
      type: string
    fulfilNotification:
      description: PUT /transfers/{transferId} object
      properties:
        currentState:
          $ref: '#/components/schemas/transferStatus'
        direction:
          enum:
            - INBOUND
          type: string
        finalNotification:
          properties:
            completedTimestamp:
              $ref: '#/components/schemas/timestamp'
              description: Time and date when the transaction was completed.
              example: '2020-05-19T08:38:08.699-04:00'
            extensionList:
              $ref: '#/components/schemas/extensionList'
              description: Optional extension, specific to deployment.
            transferState:
              $ref: '#/components/schemas/transferState'
              description: State of the transfer.
              example: COMMITTED
          required:
            - completedTimestamp
            - transferState
          type: object
        fulfil:
          properties:
            body:
              type: object
            headers:
              type: object
          type: object
        initiatedTimestamp:
          $ref: '#/components/schemas/timestamp'
        lastError:
          $ref: ../components/schemas/transferError.yaml
        prepare:
          properties:
            body:
              type: object
            headers:
              type: object
          type: object
        quote:
          properties:
            fulfilment:
              type: string
            internalRequest:
              type: object
            mojaloopResponse:
              type: object
            request:
              type: object
            response:
              type: object
          type: object
        quoteRequest:
          properties:
            body:
              type: object
            headers:
              type: object
          type: object
        quoteResponse:
          properties:
            body:
              type: object
            headers:
              type: object
          type: object
        transferId:
          $ref: '#/components/schemas/transferId'
      title: TransfersIDPatchResponse
      type: object
    generalError:
      description: This object may represent a number of different error object types and so its properties may vary significantly.
      type: object
    geoCode:
      description: Indicates the geographic location from where the transaction was initiated.
      properties:
        latitude:
          $ref: '#/components/schemas/latitude'
        longitude:
          $ref: '#/components/schemas/longitude'
      required:
        - latitude
        - longitude
      type: object
    idSubValue:
      description: Either a sub-identifier of a `{idValue}`, or a sub-type of the `{idType}`, normally a `{personalIdType}`
      maxLength: 128
      minLength: 1
      type: string
    idType:
      description: |
        Below are the allowed values for the enumeration.

        - MSISDN -  An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.

        - ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.
      enum:
        - MSISDN
        - ACCOUNT_ID
      type: string
    idValue:
      description: Identifier of the party.
      maxLength: 128
      minLength: 1
      type: string
    ilpPacketData:
      description: Object containing transfer object.
      properties:
        amount:
          $ref: '#/components/schemas/amountCurrency'
          description: Amount and currency of the transaction
        payee:
          $ref: '#/components/schemas/transferParty'
          description: Information about the Payee in the proposed financial transaction.
        payer:
          $ref: '#/components/schemas/transferParty'
          description: Information about the Payer in the proposed financial transaction.
        quoteId:
          $ref: '#/components/schemas/quoteId'
        transactionId:
          $ref: '#/components/schemas/transactionId'
          description: Identifier for the transaction, decided by the Payer FSP during the creation of the quote.
        transactionType:
          $ref: '#/components/schemas/transactionTypeObject'
          description: Information about type of transaction and initiator.
      required:
        - quoteId
        - transactionId
        - payer
        - payee
        - amount
        - transactionType
      type: object
    initiator:
      description: Specifies if the initiator of the transfer is the Payer or Payee.
      enum:
        - PAYER
        - PAYEE
      type: string
    initiatorType:
      description: Specifies the type of the transaction initiator.
      enum:
        - CONSUMER
        - AGENT
        - BUSINESS
        - DEVICE
      type: string
    latitude:
      description: The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.
      pattern: ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
      type: string
    longitude:
      description: The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.
      pattern: ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
      type: string
    money:
      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
      type: string
    participantsResponse:
      properties:
        fspId:
          $ref: '#/components/schemas/fspId'
      type: object
    payerType:
      enum:
        - CONSUMER
        - AGENT
        - BUSINESS
        - DEVICE
      type: string
    personalIdType:
      description: |
        Below are the allowed values for the enumeration.

        - PASSPORT - Apassport number isused in reference to a party.

        - NATIONAL_REGISTRATION - Anational registration number isused in reference to a party.

        - DRIVING_LICENSE - Adriving license isused in reference to a party.

        - ALIEN_REGISTRATION - An alien registration number isused in reference to a party.

        - NATIONAL_ID_CARD - Anational ID card number isused in reference to a party.

        - EMPLOYER_ID - Atax identification number isused in reference to a party.

        - TAX_ID_NUMBER - Atax identification number isused in reference to a party.

        - SENIOR_CITIZENS_CARD - Asenior citizens card number isused in reference to a party.

        - MARRIAGE_CERTIFICATE - Amarriage certificate number isused in reference to a party.

        - HEALTH_CARD - Ahealth card number isused in reference to a party.

        - VOTERS_ID - Avoterâ€™s identification number isused in reference to a party.

        - UNITED_NATIONS - An UN (United Nations) number isused in reference to a party.

        - OTHER_ID - Any other type of identification type number isused in reference to a party.
      enum:
        - PASSPORT
        - NATIONAL_REGISTRATION
        - DRIVING_LICENSE
        - ALIEN_REGISTRATION
        - NATIONAL_ID_CARD
        - EMPLOYER_ID
        - TAX_ID_NUMBER
        - SENIOR_CITIZENS_CARD
        - MARRIAGE_CERTIFICATE
        - HEALTH_CARD
        - VOTERS_ID
        - UNITED_NATIONS
        - OTHER_ID
      type: string
    quoteId:
      description: A Mojaloop API quote identifier (UUID).
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
    quoteRequest:
      description: A request for a quote for transfer from the DFSP backend.
      properties:
        amount:
          $ref: '#/components/schemas/money'
          description: Depending on `amountType`. If SEND - The amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. The amount is updated by each participating entity in the transaction. If RECEIVE - The amount the Payee should receive, that is, the amount that should be sent to the receiver exclusive any fees. The amount is not updated by any of the participating entities.
        amountType:
          $ref: '#/components/schemas/amountType'
          description: SEND for send amount, RECEIVE for receive amount.
        currency:
          $ref: '#/components/schemas/currency'
        expiration:
          $ref: '#/components/schemas/timestamp'
          description: An optional deadline for responding to the quote request.
        extensionList:
          $ref: '#/components/schemas/extensionList'
        feesAmount:
          $ref: '#/components/schemas/money'
          description: The fees in the transaction. The fees element should be empty if fees should be non-disclosed. The fees element should be non-empty if fees should be disclosed.
        feesCurrency:
          $ref: '#/components/schemas/currency'
        from:
          $ref: '#/components/schemas/transferParty'
          description: Information about the Payer in the proposed financial transaction.
        geoCode:
          $ref: '#/components/schemas/geoCode'
          description: Longitude and Latitude of the initiating party. Can be used to detect fraud.
        initiator:
          $ref: '#/components/schemas/initiator'
          description: Specifies if the initiator of the transfer is the Payer or Payee.
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
          description: Specifies the type of the transaction initiator.
        note:
          description: An optional note associated with the requested transfer.
          maxLength: 128
          minLength: 1
          type: string
        quoteId:
          $ref: '#/components/schemas/quoteId'
        to:
          $ref: '#/components/schemas/transferParty'
          description: Information about the Payee in the proposed financial transaction.
        transactionId:
          $ref: '#/components/schemas/transactionId'
          description: Identifier for the transaction, decided by the Payer FSP during the creation of the quote.
        transactionType:
          $ref: '#/components/schemas/transactionType'
          description: Type of transaction for which the quote is requested.
      required:
        - quoteId
        - transactionId
        - to
        - from
        - amountType
        - amount
        - currency
        - transactionType
        - initiator
        - initiatorType
      type: object
    quoteResponse:
      description: A response to a request for a quote.
      properties:
        expiration:
          $ref: '#/components/schemas/timestamp'
          description: Timestamp specifying the validity period of the quotation.
        extensionList:
          $ref: '#/components/schemas/extensionList'
        geoCode:
          $ref: '#/components/schemas/geoCode'
          description: Longitude and Latitude of the Payee. Can be used to detect fraud.
        payeeFspCommissionAmount:
          $ref: '#/components/schemas/money'
          description: Transaction commission from the Payee FSP.
        payeeFspCommissionAmountCurrency:
          $ref: '#/components/schemas/currency'
          description: Currency of the `payeeFspCommissionAmount`.
        payeeFspFeeAmount:
          $ref: '#/components/schemas/money'
          description: Payee FSPâ€™s part of the transaction fee.
        payeeFspFeeAmountCurrency:
          $ref: '#/components/schemas/currency'
          description: The currency of the `payeeFspFeeAmount`.
        payeeReceiveAmount:
          $ref: '#/components/schemas/money'
          description: The amount that the Payee should receive in the end-to-end transaction. Optional as the Payee FSP might not want to disclose any optional Payee fees.
        payeeReceiveAmountCurrency:
          $ref: '#/components/schemas/currency'
          description: The currency of the `payeeReceiveAmount`.
        quoteId:
          $ref: '#/components/schemas/quoteId'
          description: ID of the quote that this response relates to.
        transactionId:
          $ref: '#/components/schemas/transactionId'
          description: Identifier for the transaction, decided by the Payer FSP during the creation of the quote.
        transferAmount:
          $ref: '#/components/schemas/money'
          description: The amount of money that the Payer FSP should transfer to the Payee FSP.
        transferAmountCurrency:
          $ref: '#/components/schemas/currency'
          description: The currency of the `transferAmount`.
      required:
        - quoteId
        - transactionId
        - transferAmount
        - transferAmountCurrency
      type: object
    scenario:
      enum:
        - TRANSFER
      type: string
    timestamp:
      description: An ISO-8601 formatted timestamp.
      pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      type: string
    transactionId:
      description: ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote.
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
    transactionType:
      enum:
        - TRANSFER
      type: string
    transactionTypeObject:
      description: Object containing transfer object.
      properties:
        initiator:
          $ref: '#/components/schemas/initiator'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
          description: Specifies the type of the transaction initiator.
        scenario:
          $ref: '#/components/schemas/scenario'
      required:
        - scenario
        - initiator
        - initiatorType
      type: object
    transferDetailsResponse:
      properties:
        amount:
          $ref: '#/components/schemas/money'
        amountType:
          $ref: '#/components/schemas/amountType'
        currency:
          $ref: '#/components/schemas/currency'
        extensions:
          $ref: '#/components/schemas/extensionList'
        from:
          $ref: '#/components/schemas/transferParty'
        homeTransactionId:
          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.
          type: string
        note:
          maxLength: 128
          type: string
        timestamp:
          $ref: '#/components/schemas/timestamp'
        to:
          $ref: '#/components/schemas/transferParty'
        transactionType:
          $ref: '#/components/schemas/transactionType'
        transferState:
          $ref: '#/components/schemas/transferState'
      required:
        - homeTransactionId
        - from
        - to
        - amountType
        - currency
        - amount
        - transferState
        - transactionType
        - timestamp
      type: object
    transferId:
      description: A Mojaloop API transfer identifier (UUID).
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
    transferParty:
      properties:
        dateOfBirth:
          $ref: '#/components/schemas/dateOfBirth'
        displayName:
          description: Display name of the sender, if known.
          type: string
        extensionList:
          $ref: '#/components/schemas/extensionList'
        firstName:
          description: Party first name.
          type: string
        fspId:
          description: Mojaloop scheme FSPID of the DFSP which owns the party account.
          type: string
        idSubValue:
          $ref: '#/components/schemas/idSubValue'
        idType:
          $ref: '#/components/schemas/idType'
        idValue:
          description: The identifier string used to identify the sender.
          type: string
        lastName:
          description: Party last name.
          type: string
        merchantClassificationCode:
          description: Up to 4 digits specifying the sender's merchant classification, if known and applicable.
          type: string
        middleName:
          description: Party middle name.
          type: string
        type:
          $ref: '#/components/schemas/payerType'
      required:
        - idType
        - idValue
      type: object
    transferRequest:
      properties:
        amount:
          $ref: '#/components/schemas/money'
        amountType:
          $ref: '#/components/schemas/amountType'
        currency:
          $ref: '#/components/schemas/currency'
        from:
          $ref: '#/components/schemas/transferParty'
        ilpPacket:
          properties:
            data:
              $ref: '#/components/schemas/ilpPacketData'
          required:
            - data
          type: object
        note:
          maxLength: 128
          type: string
        quote:
          $ref: '#/components/schemas/quoteResponse'
        quoteRequestExtensions:
          $ref: '#/components/schemas/extensionList'
        to:
          $ref: '#/components/schemas/transferParty'
        transactionType:
          $ref: '#/components/schemas/transactionType'
        transferId:
          $ref: '#/components/schemas/transferId'
      required:
        - transferId
        - quote
        - from
        - to
        - amountType
        - currency
        - amount
        - transactionType
        - ilpPacket
      type: object
    transferResponse:
      properties:
        completedTimestamp:
          $ref: '#/components/schemas/timestamp'
          description: Completed timestamp from the DFSP backend, used for testing purposes to inject a given completed timestamp via a rule.
          example: '2020-05-19T08:38:08.699-04:00'
        fulfilment:
          $ref: ../components/schemas/IlpFulfilment.yaml
          description: Fulfilment from the DFSP backend, used for testing purposes to inject an invalid fulfilment via a rule.
        homeTransactionId:
          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.
          type: string
        transferState:
          $ref: '#/components/schemas/transferState'
          description: Transfer state from the DFSP backend, used for testing purposes to inject an desired transfer state via a rule.
          example: ABORTED
      required:
        - homeTransactionId
      type: object
    transferState:
      description: |
        Below are the allowed values for the enumeration - RECEIVED DFSP has received the transfer. - RESERVED DFSP has reserved the transfer. - COMMITTED DFSP has successfully performed the transfer. - ABORTED DFSP has aborted the transfer due a rejection or failure to perform the transfer.
      enum:
        - RECEIVED
        - RESERVED
        - COMMITTED
        - ABORTED
      type: string
    transferStatus:
      enum:
        - ERROR_OCCURRED
        - WAITING_FOR_PARTY_ACCEPTANCE
        - WAITING_FOR_QUOTE_ACCEPTANCE
        - COMPLETED
      type: string
