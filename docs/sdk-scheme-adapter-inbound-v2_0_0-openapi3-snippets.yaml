openapi: 3.0.1
info:
  title: Mojaloop SDK Inbound Scheme Adapter API
  description: >
    API specification for the Mojaloop SDK Inbound Scheme Adapter API â€“ to be
    implemented by the Digital Financial Service Provider's (DFSP) backend.


    **Note on terminology:** The term "Switch" is equal to the term "Hub", and
    the term "FSP" is equal to the term "DFSP".
  license:
    name: Apache License Version 2.0, January 2004
    url: http://www.apache.org/licenses/
  version: 1.1.0
paths:
  /participants/{idType}/{idValue}:
    get:
      summary: >-
        Asks for the identifier (fspId) of the scheme participant (FSP) that can
        handle transfers for the specified identifier type and value
      description: >-
        The HTTP request `GET /participants/{idType}/{idValue}` is used to find
        out in which FSP the requested party, defined by `{idType}` and
        `{idValue}`, is located.
      tags:
        - Participants
      parameters:
        - name: idType
          in: path
          required: true
          schema: &ref_2
            type: string
            enum:
              - MSISDN
              - ACCOUNT_ID
          description: >
            Below are the allowed values for the enumeration.


            - MSISDN -  An MSISDN (Mobile Station International Subscriber
            Directory Number, that is, the phone number) is used as reference to
            a participant. The MSISDN identifier should be in international
            format according to the [ITU-T E.164
            standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the
            MSISDN may be prefixed by a single plus sign, indicating the
            international prefix.


            - ACCOUNT_ID - A bank account number or FSP account ID should be
            used as reference to a participant. The ACCOUNT_ID identifier can be
            in any format, as formats can greatly differ depending on country
            and FSP.
        - name: idValue
          in: path
          required: true
          schema: &ref_3
            type: string
            minLength: 1
            maxLength: 128
          description: Identifier of the party.
      responses:
        '200':
          description: Response containing details of the requested party
          content:
            application/json:
              schema:
                type: object
                properties: &ref_4
                  fspId:
                    type: string
                    minLength: 1
                    maxLength: 32
                    description: FSP identifier.
        '400':
          description: Malformed or missing required headers or parameters
          content: &ref_5
            application/json:
              schema:
                type: object
                required: &ref_0
                  - statusCode
                properties: &ref_1
                  statusCode:
                    type: string
                    description: Error code as string.
                  message:
                    type: string
                    description: Error message text.
        '404':
          description: >-
            The party specified by the provided identifier type and value is not
            known to the server
        '500':
          description: An error occurred processing the request
          content: &ref_6
            application/json:
              schema:
                type: object
                required: *ref_0
                properties: *ref_1
  /participants/{idType}/{idValue}/{idSubValue}:
    get:
      summary: >-
        Asks for the identifier (fspId) of the scheme participant (FSP) that can
        handle transfers for the specified identifier type and value
      description: >-
        The HTTP request `GET /participants/{idType}/{idValue}/{idSubValue}` is
        used to find out in which FSP the requested party, defined by
        `{idType}`, `{idValue}` and `{idSubValue}` is located.
      tags:
        - Participants
      parameters:
        - name: idType
          in: path
          required: true
          schema: *ref_2
          description: >
            Below are the allowed values for the enumeration.


            - MSISDN -  An MSISDN (Mobile Station International Subscriber
            Directory Number, that is, the phone number) is used as reference to
            a participant. The MSISDN identifier should be in international
            format according to the [ITU-T E.164
            standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the
            MSISDN may be prefixed by a single plus sign, indicating the
            international prefix.


            - ACCOUNT_ID - A bank account number or FSP account ID should be
            used as reference to a participant. The ACCOUNT_ID identifier can be
            in any format, as formats can greatly differ depending on country
            and FSP.
        - name: idValue
          in: path
          required: true
          schema: *ref_3
          description: Identifier of the party.
        - name: idSubValue
          in: path
          required: true
          schema: &ref_7
            type: string
            minLength: 1
            maxLength: 128
          description: >-
            Either a sub-identifier of a `{idValue}`, or a sub-type of the
            `{idType}`, normally a `{personalIdType}`
      responses:
        '200':
          description: Response containing details of the requested party
          content:
            application/json:
              schema:
                type: object
                properties: *ref_4
        '400':
          description: Malformed or missing required headers or parameters
          content: *ref_5
        '404':
          description: >-
            The party specified by the provided identifier type and value is not
            known to the server
        '500':
          description: An error occurred processing the request
          content: *ref_6
  /parties/{idType}/{idValue}:
    get:
      summary: >-
        Requests information relating to a transfer party identified by the
        specified identifier type and value
      description: >-
        The HTTP request `GET /parties/{idType}/{idValue}` is used to look up
        information regarding the requested transfer party, identified by
        `{idType}` and `{idValue}`.
      tags:
        - Parties
      parameters:
        - name: idType
          in: path
          required: true
          schema: *ref_2
          description: >
            Below are the allowed values for the enumeration.


            - MSISDN -  An MSISDN (Mobile Station International Subscriber
            Directory Number, that is, the phone number) is used as reference to
            a participant. The MSISDN identifier should be in international
            format according to the [ITU-T E.164
            standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the
            MSISDN may be prefixed by a single plus sign, indicating the
            international prefix.


            - ACCOUNT_ID - A bank account number or FSP account ID should be
            used as reference to a participant. The ACCOUNT_ID identifier can be
            in any format, as formats can greatly differ depending on country
            and FSP.
        - name: idValue
          in: path
          required: true
          schema: *ref_3
          description: Identifier of the party.
      responses:
        '200':
          description: Response containing details of the requested party
          content:
            application/json:
              schema:
                type: object
                required: &ref_8
                  - idType
                  - idValue
                properties: &ref_9
                  type:
                    type: string
                    enum: &ref_29
                      - CONSUMER
                      - AGENT
                      - BUSINESS
                      - DEVICE
                  idType:
                    type: string
                    enum: &ref_27
                      - MSISDN
                      - ACCOUNT_ID
                    description: >
                      Below are the allowed values for the enumeration.


                      - MSISDN -  An MSISDN (Mobile Station International
                      Subscriber Directory Number, that is, the phone number) is
                      used as reference to a participant. The MSISDN identifier
                      should be in international format according to the [ITU-T
                      E.164 standard](https://www.itu.int/rec/T-REC-E.164/en).
                      Optionally, the MSISDN may be prefixed by a single plus
                      sign, indicating the international prefix.


                      - ACCOUNT_ID - A bank account number or FSP account ID
                      should be used as reference to a participant. The
                      ACCOUNT_ID identifier can be in any format, as formats can
                      greatly differ depending on country and FSP.
                  idValue:
                    type: string
                    description: The identifier string used to identify the sender.
                  idSubValue:
                    type: string
                    minLength: 1
                    maxLength: 128
                    description: >-
                      Either a sub-identifier of a `{idValue}`, or a sub-type of
                      the `{idType}`, normally a `{personalIdType}`
                  displayName:
                    type: string
                    description: Display name of the sender, if known.
                  firstName:
                    type: string
                    description: Party first name.
                  middleName:
                    type: string
                    description: Party middle name.
                  lastName:
                    type: string
                    description: Party last name.
                  dateOfBirth:
                    type: string
                    pattern: >-
                      ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
                    description: Date of birth in the form YYYY-MM-DD.
                  merchantClassificationCode:
                    type: string
                    description: >-
                      Up to 4 digits specifying the sender's merchant
                      classification, if known and applicable.
                  fspId:
                    type: string
                    description: >-
                      Mojaloop scheme FSPID of the DFSP which owns the party
                      account.
                  extensionList:
                    type: array
                    items: &ref_11
                      type: object
                      properties: &ref_28
                        key:
                          type: string
                          minLength: 1
                          maxLength: 32
                        value:
                          type: string
                          minLength: 1
                          maxLength: 128
                    minItems: 0
                    maxItems: 16
        '400':
          description: Malformed or missing required headers or parameters
          content: *ref_5
        '404':
          description: >-
            The party specified by the provided identifier type and value is not
            known to the server
        '500':
          description: An error occurred processing the request
          content: *ref_6
  /parties/{idType}/{idValue}/{idSubValue}:
    get:
      summary: >-
        Requests information relating to a transfer party identified by the
        specified identifier type and value
      description: >-
        The HTTP request `GET /parties/{idType}/{idValue}/{idSubValue}` is used
        to look up information regarding the requested transfer party,
        identified by `{idType}`, `{idValue}` and `{idSubValue}`.
      tags:
        - Parties
      parameters:
        - name: idType
          in: path
          required: true
          schema: *ref_2
          description: >
            Below are the allowed values for the enumeration.


            - MSISDN -  An MSISDN (Mobile Station International Subscriber
            Directory Number, that is, the phone number) is used as reference to
            a participant. The MSISDN identifier should be in international
            format according to the [ITU-T E.164
            standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the
            MSISDN may be prefixed by a single plus sign, indicating the
            international prefix.


            - ACCOUNT_ID - A bank account number or FSP account ID should be
            used as reference to a participant. The ACCOUNT_ID identifier can be
            in any format, as formats can greatly differ depending on country
            and FSP.
        - name: idValue
          in: path
          required: true
          schema: *ref_3
          description: Identifier of the party.
        - name: idSubValue
          in: path
          required: true
          schema: *ref_7
          description: >-
            Either a sub-identifier of a `{idValue}`, or a sub-type of the
            `{idType}`, normally a `{personalIdType}`
      responses:
        '200':
          description: Response containing details of the requested party
          content:
            application/json:
              schema:
                type: object
                required: *ref_8
                properties: *ref_9
        '400':
          description: Malformed or missing required headers or parameters
          content: *ref_5
        '404':
          description: >-
            The party specified by the provided identifier type and value is not
            known to the server
        '500':
          description: An error occurred processing the request
          content: *ref_6
  /quoterequests:
    post:
      summary: Requests a quote for the specified transfer
      description: >-
        The HTTP request `POST /quoterequests` is used to request the creation
        of a quote for the provided financial transaction.
      tags:
        - Quotes
      requestBody:
        description: Request for a transfer quotation
        content:
          application/json:
            schema:
              type: object
              description: A request for a quote for transfer from the DFSP backend.
              required: &ref_30
                - quoteId
                - transactionId
                - to
                - from
                - amountType
                - amount
                - currency
                - transactionType
                - initiator
                - initiatorType
              properties: &ref_31
                quoteId:
                  pattern: >-
                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  type: string
                  description: A Mojaloop API quote identifier (UUID).
                transactionId:
                  description: >-
                    ID of the transaction, the ID is decided by the Payer FSP
                    during the creation of the quote.
                  pattern: >-
                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  type: string
                to:
                  description: >-
                    Information about the Payee in the proposed financial
                    transaction.
                  type: object
                  required: *ref_8
                  properties: *ref_9
                from:
                  description: >-
                    Information about the Payer in the proposed financial
                    transaction.
                  type: object
                  required: *ref_8
                  properties: *ref_9
                amountType:
                  description: SEND for send amount, RECEIVE for receive amount.
                  type: string
                  enum: &ref_16
                    - SEND
                    - RECEIVE
                amount:
                  description: >-
                    Depending on `amountType`. If SEND - The amount the Payer
                    would like to send, that is, the amount that should be
                    withdrawn from the Payer account including any fees. The
                    amount is updated by each participating entity in the
                    transaction. If RECEIVE - The amount the Payee should
                    receive, that is, the amount that should be sent to the
                    receiver exclusive any fees. The amount is not updated by
                    any of the participating entities.
                  pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                  type: string
                currency:
                  maxLength: 3
                  minLength: 3
                  type: string
                  enum: &ref_10
                    - AED
                    - AFN
                    - ALL
                    - AMD
                    - ANG
                    - AOA
                    - ARS
                    - AUD
                    - AWG
                    - AZN
                    - BAM
                    - BBD
                    - BDT
                    - BGN
                    - BHD
                    - BIF
                    - BMD
                    - BND
                    - BOB
                    - BRL
                    - BSD
                    - BTN
                    - BWP
                    - BYN
                    - BZD
                    - CAD
                    - CDF
                    - CHF
                    - CLP
                    - CNY
                    - COP
                    - CRC
                    - CUC
                    - CUP
                    - CVE
                    - CZK
                    - DJF
                    - DKK
                    - DOP
                    - DZD
                    - EGP
                    - ERN
                    - ETB
                    - EUR
                    - FJD
                    - FKP
                    - GBP
                    - GEL
                    - GGP
                    - GHS
                    - GIP
                    - GMD
                    - GNF
                    - GTQ
                    - GYD
                    - HKD
                    - HNL
                    - HRK
                    - HTG
                    - HUF
                    - IDR
                    - ILS
                    - IMP
                    - INR
                    - IQD
                    - IRR
                    - ISK
                    - JEP
                    - JMD
                    - JOD
                    - JPY
                    - KES
                    - KGS
                    - KHR
                    - KMF
                    - KPW
                    - KRW
                    - KWD
                    - KYD
                    - KZT
                    - LAK
                    - LBP
                    - LKR
                    - LRD
                    - LSL
                    - LYD
                    - MAD
                    - MDL
                    - MGA
                    - MKD
                    - MMK
                    - MNT
                    - MOP
                    - MRO
                    - MUR
                    - MVR
                    - MWK
                    - MXN
                    - MYR
                    - MZN
                    - NAD
                    - NGN
                    - NIO
                    - NOK
                    - NPR
                    - NZD
                    - OMR
                    - PAB
                    - PEN
                    - PGK
                    - PHP
                    - PKR
                    - PLN
                    - PYG
                    - QAR
                    - RON
                    - RSD
                    - RUB
                    - RWF
                    - SAR
                    - SBD
                    - SCR
                    - SDG
                    - SEK
                    - SGD
                    - SHP
                    - SLL
                    - SOS
                    - SPL
                    - SRD
                    - STD
                    - SVC
                    - SYP
                    - SZL
                    - THB
                    - TJS
                    - TMT
                    - TND
                    - TOP
                    - TRY
                    - TTD
                    - TVD
                    - TWD
                    - TZS
                    - UAH
                    - UGX
                    - USD
                    - UYU
                    - UZS
                    - VEF
                    - VND
                    - VUV
                    - WST
                    - XAF
                    - XCD
                    - XDR
                    - XOF
                    - XPF
                    - XTS
                    - XXX
                    - YER
                    - ZAR
                    - ZMW
                    - ZWD
                feesAmount:
                  description: >-
                    The fees in the transaction. The fees element should be
                    empty if fees should be non-disclosed. The fees element
                    should be non-empty if fees should be disclosed.
                  pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                  type: string
                feesCurrency:
                  maxLength: 3
                  minLength: 3
                  type: string
                  enum: *ref_10
                transactionType:
                  description: Type of transaction for which the quote is requested.
                  type: string
                  enum: &ref_17
                    - TRANSFER
                initiator:
                  description: >-
                    Specifies if the initiator of the transfer is the Payer or
                    Payee.
                  type: string
                  enum: &ref_18
                    - PAYER
                    - PAYEE
                initiatorType:
                  description: Specifies the type of the transaction initiator.
                  type: string
                  enum: &ref_19
                    - CONSUMER
                    - AGENT
                    - BUSINESS
                    - DEVICE
                geoCode:
                  description: >-
                    Indicates the geographic location from where the transaction
                    was initiated.
                  type: object
                  properties: &ref_12
                    latitude:
                      type: string
                      pattern: >-
                        ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
                      description: >-
                        The API data type Latitude is a JSON String in a lexical
                        format that is restricted by a regular expression for
                        interoperability reasons.
                    longitude:
                      type: string
                      pattern: >-
                        ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
                      description: >-
                        The API data type Longitude is a JSON String in a
                        lexical format that is restricted by a regular
                        expression for interoperability reasons.
                  required: &ref_13
                    - latitude
                    - longitude
                note:
                  type: string
                  minLength: 1
                  maxLength: 128
                  description: An optional note associated with the requested transfer.
                expiration:
                  description: An ISO-8601 formatted timestamp.
                  type: string
                  pattern: >-
                    ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                extensionList:
                  type: array
                  items: *ref_11
                  minItems: 0
                  maxItems: 16
      responses:
        '200':
          description: A response to the transfer quotation request
          content:
            application/json:
              schema:
                type: object
                description: A response to a request for a quote.
                required: &ref_14
                  - quoteId
                  - transactionId
                  - transferAmount
                  - transferAmountCurrency
                properties: &ref_15
                  quoteId:
                    description: A Mojaloop API quote identifier (UUID).
                    pattern: >-
                      ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                    type: string
                  transactionId:
                    description: >-
                      ID of the transaction, the ID is decided by the Payer FSP
                      during the creation of the quote.
                    pattern: >-
                      ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                    type: string
                  transferAmount:
                    description: >-
                      The amount of money that the Payer FSP should transfer to
                      the Payee FSP.
                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                    type: string
                  transferAmountCurrency:
                    description: The currency of the `transferAmount`.
                    maxLength: 3
                    minLength: 3
                    type: string
                    enum: *ref_10
                  payeeReceiveAmount:
                    description: >-
                      The amount that the Payee should receive in the end-to-end
                      transaction. Optional as the Payee FSP might not want to
                      disclose any optional Payee fees.
                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                    type: string
                  payeeReceiveAmountCurrency:
                    description: The currency of the `payeeReceiveAmount`.
                    maxLength: 3
                    minLength: 3
                    type: string
                    enum: *ref_10
                  payeeFspFeeAmount:
                    description: Payee FSPâ€™s part of the transaction fee.
                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                    type: string
                  payeeFspFeeAmountCurrency:
                    description: The currency of the `payeeFspFeeAmount`.
                    maxLength: 3
                    minLength: 3
                    type: string
                    enum: *ref_10
                  payeeFspCommissionAmount:
                    description: Transaction commission from the Payee FSP.
                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                    type: string
                  payeeFspCommissionAmountCurrency:
                    description: Currency of the `payeeFspCommissionAmount`.
                    maxLength: 3
                    minLength: 3
                    type: string
                    enum: *ref_10
                  expiration:
                    description: An ISO-8601 formatted timestamp.
                    type: string
                    pattern: >-
                      ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                  geoCode:
                    description: >-
                      Indicates the geographic location from where the
                      transaction was initiated.
                    type: object
                    properties: *ref_12
                    required: *ref_13
                  extensionList:
                    type: array
                    items: *ref_11
                    minItems: 0
                    maxItems: 16
        '400':
          description: Malformed or missing required headers or parameters
          content: *ref_5
        '500':
          description: An error occurred processing the request
          content: *ref_6
  /transfers:
    post:
      summary: Transfers funds from an external account to an internal account
      description: >-
        The HTTP request `POST /transfers` is used to request the creation of a
        transfer for the transfer party.
      tags:
        - Transfers
      requestBody:
        description: An incoming transfer request
        content:
          application/json:
            schema:
              type: object
              required: &ref_39
                - transferId
                - quote
                - from
                - to
                - amountType
                - currency
                - amount
                - transactionType
                - ilpPacket
              properties: &ref_40
                transferId:
                  pattern: >-
                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  type: string
                  description: A Mojaloop API transfer identifier (UUID).
                quote:
                  type: object
                  description: A response to a request for a quote.
                  required: *ref_14
                  properties: *ref_15
                quoteRequestExtensions:
                  type: array
                  items: *ref_11
                  minItems: 0
                  maxItems: 16
                from:
                  type: object
                  required: *ref_8
                  properties: *ref_9
                to:
                  type: object
                  required: *ref_8
                  properties: *ref_9
                amountType:
                  type: string
                  enum: *ref_16
                  description: SEND for send amount, RECEIVE for receive amount.
                currency:
                  maxLength: 3
                  minLength: 3
                  type: string
                  enum: *ref_10
                amount:
                  pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                  type: string
                transactionType:
                  type: string
                  enum: *ref_17
                ilpPacket:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      description: Object containing transfer object.
                      required: &ref_37
                        - quoteId
                        - transactionId
                        - payer
                        - payee
                        - amount
                        - transactionType
                      properties: &ref_38
                        quoteId:
                          pattern: >-
                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                          type: string
                          description: A Mojaloop API quote identifier (UUID).
                        transactionId:
                          description: >-
                            ID of the transaction, the ID is decided by the
                            Payer FSP during the creation of the quote.
                          pattern: >-
                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                          type: string
                        payer:
                          description: >-
                            Information about the Payer in the proposed
                            financial transaction.
                          type: object
                          required: *ref_8
                          properties: *ref_9
                        payee:
                          description: >-
                            Information about the Payee in the proposed
                            financial transaction.
                          type: object
                          required: *ref_8
                          properties: *ref_9
                        amount:
                          description: >-
                            Object containing Amount and Currency of the
                            transfer.
                          type: object
                          required: &ref_33
                            - amount
                            - currency
                          properties: &ref_34
                            amount:
                              pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                              type: string
                            currency:
                              maxLength: 3
                              minLength: 3
                              type: string
                              enum: *ref_10
                        transactionType:
                          description: Object containing transfer object.
                          type: object
                          required: &ref_35
                            - scenario
                            - initiator
                            - initiatorType
                          properties: &ref_36
                            scenario:
                              type: string
                              enum: &ref_32
                                - TRANSFER
                            initiator:
                              type: string
                              enum: *ref_18
                              description: >-
                                Specifies if the initiator of the transfer is
                                the Payer or Payee.
                            initiatorType:
                              description: Specifies the type of the transaction initiator.
                              type: string
                              enum: *ref_19
                note:
                  maxLength: 128
                  type: string
      responses:
        '200':
          description: The transfer was accepted
          content:
            application/json:
              schema:
                type: object
                required: &ref_41
                  - homeTransactionId
                properties: &ref_42
                  homeTransactionId:
                    type: string
                    description: >-
                      Transaction ID from the DFSP backend, used to reconcile
                      transactions between the Switch and DFSP backend systems.
                  fulfilment:
                    description: >-
                      Fulfilment that must be attached to the transfer by the
                      Payee.
                    title: IlpFulfilment
                    type: string
                    pattern: ^[A-Za-z0-9-_]{43}$
                    maxLength: 48
                    example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8
                  transferState:
                    description: >
                      Below are the allowed values for the enumeration -
                      RECEIVED DFSP has received the transfer. - RESERVED DFSP
                      has reserved the transfer. - COMMITTED DFSP has
                      successfully performed the transfer. - ABORTED DFSP has
                      aborted the transfer due a rejection or failure to perform
                      the transfer.
                    example: ABORTED
                    type: string
                    enum: &ref_20
                      - RECEIVED
                      - RESERVED
                      - COMMITTED
                      - ABORTED
                  completedTimestamp:
                    description: An ISO-8601 formatted timestamp.
                    example: '2020-05-19T08:38:08.699-04:00'
                    type: string
                    pattern: >-
                      ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
        '400':
          description: Malformed or missing required headers or parameters
          content: *ref_5
        '500':
          description: An error occurred processing the request
          content: *ref_6
  /transfers/{transferId}:
    parameters:
      - name: transferId
        in: path
        required: true
        schema: &ref_80
          type: string
    get:
      summary: Retrieves information for a specific transfer
      description: >-
        The HTTP request `GET /transfers/{transferId}` is used to get
        information regarding a transfer created or requested earlier. The
        `{transferId}` in the URI should contain the `transferId` that was used
        for the creation of the transfer.
      tags:
        - Transfers
      responses:
        '200':
          description: The transfer was accepted
          content:
            application/json:
              schema:
                type: object
                required: &ref_43
                  - homeTransactionId
                  - from
                  - to
                  - amountType
                  - currency
                  - amount
                  - transferState
                  - transactionType
                  - timestamp
                properties: &ref_44
                  homeTransactionId:
                    type: string
                    description: >-
                      Transaction ID from the DFSP backend, used to reconcile
                      transactions between the Switch and DFSP backend systems.
                  from:
                    type: object
                    required: *ref_8
                    properties: *ref_9
                  to:
                    type: object
                    required: *ref_8
                    properties: *ref_9
                  amountType:
                    type: string
                    enum: *ref_16
                    description: SEND for send amount, RECEIVE for receive amount.
                  currency:
                    maxLength: 3
                    minLength: 3
                    type: string
                    enum: *ref_10
                  amount:
                    pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                    type: string
                  transferState:
                    type: string
                    enum: *ref_20
                    description: >
                      Below are the allowed values for the enumeration -
                      RECEIVED DFSP has received the transfer. - RESERVED DFSP
                      has reserved the transfer. - COMMITTED DFSP has
                      successfully performed the transfer. - ABORTED DFSP has
                      aborted the transfer due a rejection or failure to perform
                      the transfer.
                  timestamp:
                    type: string
                    pattern: >-
                      ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                    description: An ISO-8601 formatted timestamp.
                  transactionType:
                    type: string
                    enum: *ref_17
                  note:
                    maxLength: 128
                    type: string
                  extensions:
                    type: array
                    items: *ref_11
                    minItems: 0
                    maxItems: 16
        '500':
          description: An error occurred processing the request
          content: *ref_6
    put:
      summary: Receive notification for a specific transfer
      description: >-
        The HTTP request `PUT /transfers/{transferId}` is used to receive
        notification for transfer being fulfiled when the FSP is a Payee
      tags:
        - Transfers
      requestBody:
        description: An incoming notification for fulfiled transfer
        content:
          application/json:
            schema:
              title: TransfersIDPatchResponse
              type: object
              description: PUT /transfers/{transferId} object
              properties: &ref_46
                transferId:
                  pattern: >-
                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  type: string
                  description: A Mojaloop API transfer identifier (UUID).
                direction:
                  type: string
                  enum:
                    - INBOUND
                quoteRequest:
                  type: object
                  properties:
                    headers:
                      type: object
                    body:
                      type: object
                quoteResponse:
                  type: object
                  properties:
                    headers:
                      type: object
                    body:
                      type: object
                prepare:
                  type: object
                  properties:
                    headers:
                      type: object
                    body:
                      type: object
                fulfil:
                  type: object
                  properties:
                    headers:
                      type: object
                    body:
                      type: object
                quote:
                  type: object
                  properties:
                    request:
                      type: object
                    internalRequest:
                      type: object
                    response:
                      type: object
                    mojaloopResponse:
                      type: object
                    fulfilment:
                      type: string
                currentState:
                  type: string
                  enum: &ref_45
                    - ERROR_OCCURRED
                    - WAITING_FOR_PARTY_ACCEPTANCE
                    - WAITING_FOR_QUOTE_ACCEPTANCE
                    - COMPLETED
                lastError:
                  type: object
                  description: >-
                    This object represents a Mojaloop API error received at any
                    time during the transfer process
                  properties: &ref_26
                    httpStatusCode:
                      type: integer
                      description: >-
                        The HTTP status code returned to the caller. This is the
                        same as the actual HTTP status code returned with the
                        response.
                    mojaloopError:
                      description: >-
                        If a transfer process results in an error callback
                        during the asynchronous Mojaloop API exchange, this
                        property will contain the underlying Mojaloop API error
                        object.
                      type: object
                      properties: &ref_51
                        errorInformation:
                          title: ErrorInformation
                          type: object
                          description: Data model for the complex type ErrorInformation.
                          properties: &ref_49
                            errorCode:
                              title: ErrorCode
                              type: string
                              pattern: ^[1-9]\d{3}$
                              description: >-
                                The API data type ErrorCode is a JSON String of
                                four characters, consisting of digits only.
                                Negative numbers are not allowed. A leading zero
                                is not allowed. Each error code in the API is a
                                four-digit number, for example, 1234, where the
                                first number (1 in the example) represents the
                                high-level error category, the second number (2
                                in the example) represents the low-level error
                                category, and the last two numbers (34 in the
                                example) represent the specific error.
                              example: '5100'
                            errorDescription:
                              title: ErrorDescription
                              type: string
                              minLength: 1
                              maxLength: 128
                              description: Error description string.
                            extensionList:
                              title: ExtensionList
                              type: object
                              description: >-
                                Data model for the complex type ExtensionList.
                                An optional list of extensions, specific to
                                deployment.
                              properties: &ref_21
                                extension:
                                  type: array
                                  items:
                                    title: Extension
                                    type: object
                                    description: Data model for the complex type Extension.
                                    properties: &ref_47
                                      key:
                                        title: ExtensionKey
                                        type: string
                                        minLength: 1
                                        maxLength: 32
                                        description: Extension key.
                                      value:
                                        title: ExtensionValue
                                        type: string
                                        minLength: 1
                                        maxLength: 128
                                        description: Extension value.
                                    required: &ref_48
                                      - key
                                      - value
                                  minItems: 1
                                  maxItems: 16
                                  description: Number of Extension elements.
                              required: &ref_22
                                - extension
                          required: &ref_50
                            - errorCode
                            - errorDescription
                initiatedTimestamp:
                  type: string
                  pattern: >-
                    ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                  description: An ISO-8601 formatted timestamp.
                finalNotification:
                  type: object
                  properties:
                    completedTimestamp:
                      description: An ISO-8601 formatted timestamp.
                      example: '2020-05-19T08:38:08.699-04:00'
                      type: string
                      pattern: >-
                        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                    transferState:
                      description: >
                        Below are the allowed values for the enumeration -
                        RECEIVED DFSP has received the transfer. - RESERVED DFSP
                        has reserved the transfer. - COMMITTED DFSP has
                        successfully performed the transfer. - ABORTED DFSP has
                        aborted the transfer due a rejection or failure to
                        perform the transfer.
                      example: COMMITTED
                      type: string
                      enum: *ref_20
                    extensionList:
                      description: Optional extension, specific to deployment.
                      type: array
                      items: *ref_11
                      minItems: 0
                      maxItems: 16
                  required:
                    - completedTimestamp
                    - transferState
      responses:
        '200':
          description: The notification was accepted
        '500':
          description: An error occurred processing the request
          content: *ref_6
  /bulkTransactions/{bulkTransactionId}:
    parameters:
      - name: bulkTransactionId
        in: path
        required: true
        schema: &ref_81
          title: CorrelationId
          type: string
          pattern: >-
            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          description: >-
            Identifier that correlates all messages of the same sequence. The
            API data type UUID (Universally Unique Identifier) is a JSON String
            in canonical format, conforming to [RFC
            4122](https://tools.ietf.org/html/rfc4122), that is restricted by a
            regular expression for interoperability reasons. A UUID is always 36
            characters long, 32 hexadecimal symbols and 4 dashes (â€˜-â€˜).
          example: b51ec534-ee48-4575-b6a9-ead2955b8069
        description: >-
          Identifier of the bulk transaction to continue as returned in the
          response to a `POST /bulkTransaction` request.
    put:
      summary: Request is used for bulk transaction confirmations
      description: >-
        The HTTP request `PUT /bulkTransactions/{bulkTransactionId}` is used to
        request information regarding a bulk transaction, i.e. when
        autoAcceptParty or autoAcceptQuote  is false then the payer need to
        provide confirmation to proceed with further processing of the request.
        The `{bulkTransactionId}` in the URI should contain the
        `bulkTransactionId` that was used for the creation of the bulk transfer.
      tags:
        - BulkTransactions
      requestBody:
        description: An incoming notification for fulfiled transfer
        content:
          application/json:
            schema:
              title: BulkTransactionResponse
              type: object
              required: &ref_78
                - bulkHomeTransactionID
                - bulkTransactionId
                - currentState
                - individualTransferResults
              properties: &ref_79
                bulkHomeTransactionID:
                  type: string
                  description: >-
                    Transaction ID from the DFSP backend, used to reconcile
                    transactions between the Switch and DFSP backend systems.
                bulkTransactionId:
                  title: CorrelationId
                  type: string
                  pattern: >-
                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                  description: >-
                    Identifier that correlates all messages of the same
                    sequence. The API data type UUID (Universally Unique
                    Identifier) is a JSON String in canonical format, conforming
                    to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is
                    restricted by a regular expression for interoperability
                    reasons. A UUID is always 36 characters long, 32 hexadecimal
                    symbols and 4 dashes (â€˜-â€˜).
                  example: b51ec534-ee48-4575-b6a9-ead2955b8069
                currentState:
                  type: string
                  enum: &ref_52
                    - ERROR_OCCURRED
                    - WAITING_FOR_PARTY_ACCEPTANCE
                    - WAITING_FOR_QUOTE_ACCEPTANCE
                    - COMPLETED
                options:
                  type: object
                  required: &ref_59
                    - autoAcceptParty
                    - autoAcceptQuote
                    - bulkExpiration
                  properties: &ref_60
                    onlyValidateParty:
                      description: >-
                        Set to true if only party validation is required.  This
                        means the quotes and transfers will not run. This is
                        useful for only party resolution.
                      type: boolean
                    autoAcceptParty:
                      type: object
                      required: &ref_53
                        - enabled
                      properties: &ref_54
                        enabled:
                          type: boolean
                          enum:
                            - false
                            - true
                    autoAcceptQuote:
                      description: >-
                        Set to true if the quote response is accepted without
                        confirmation from the payer. The fees applied by the
                        payee will be acceptable to the payer abiding by the
                        limits set by optional 'perTransferFeeLimits' array.
                      type: object
                      oneOf:
                        - type: object
                          required: &ref_57
                            - enabled
                          properties: &ref_58
                            enabled:
                              type: boolean
                              enum:
                                - true
                                - false
                            perTransferFeeLimits:
                              type: array
                              minItems: 0
                              items:
                                type: object
                                required: &ref_55
                                  - currency
                                  - amount
                                properties: &ref_56
                                  currency:
                                    title: Currency
                                    description: >-
                                      The currency codes defined in [ISO
                                      4217](https://www.iso.org/iso-4217-currency-codes.html)
                                      as three-letter alphabetic codes are used
                                      as the standard naming representation for
                                      currencies.
                                    type: string
                                    minLength: 3
                                    maxLength: 3
                                    enum: &ref_23
                                      - AED
                                      - AFN
                                      - ALL
                                      - AMD
                                      - ANG
                                      - AOA
                                      - ARS
                                      - AUD
                                      - AWG
                                      - AZN
                                      - BAM
                                      - BBD
                                      - BDT
                                      - BGN
                                      - BHD
                                      - BIF
                                      - BMD
                                      - BND
                                      - BOB
                                      - BRL
                                      - BSD
                                      - BTN
                                      - BWP
                                      - BYN
                                      - BZD
                                      - CAD
                                      - CDF
                                      - CHF
                                      - CLP
                                      - CNY
                                      - COP
                                      - CRC
                                      - CUC
                                      - CUP
                                      - CVE
                                      - CZK
                                      - DJF
                                      - DKK
                                      - DOP
                                      - DZD
                                      - EGP
                                      - ERN
                                      - ETB
                                      - EUR
                                      - FJD
                                      - FKP
                                      - GBP
                                      - GEL
                                      - GGP
                                      - GHS
                                      - GIP
                                      - GMD
                                      - GNF
                                      - GTQ
                                      - GYD
                                      - HKD
                                      - HNL
                                      - HRK
                                      - HTG
                                      - HUF
                                      - IDR
                                      - ILS
                                      - IMP
                                      - INR
                                      - IQD
                                      - IRR
                                      - ISK
                                      - JEP
                                      - JMD
                                      - JOD
                                      - JPY
                                      - KES
                                      - KGS
                                      - KHR
                                      - KMF
                                      - KPW
                                      - KRW
                                      - KWD
                                      - KYD
                                      - KZT
                                      - LAK
                                      - LBP
                                      - LKR
                                      - LRD
                                      - LSL
                                      - LYD
                                      - MAD
                                      - MDL
                                      - MGA
                                      - MKD
                                      - MMK
                                      - MNT
                                      - MOP
                                      - MRO
                                      - MUR
                                      - MVR
                                      - MWK
                                      - MXN
                                      - MYR
                                      - MZN
                                      - NAD
                                      - NGN
                                      - NIO
                                      - NOK
                                      - NPR
                                      - NZD
                                      - OMR
                                      - PAB
                                      - PEN
                                      - PGK
                                      - PHP
                                      - PKR
                                      - PLN
                                      - PYG
                                      - QAR
                                      - RON
                                      - RSD
                                      - RUB
                                      - RWF
                                      - SAR
                                      - SBD
                                      - SCR
                                      - SDG
                                      - SEK
                                      - SGD
                                      - SHP
                                      - SLL
                                      - SOS
                                      - SPL
                                      - SRD
                                      - STD
                                      - SVC
                                      - SYP
                                      - SZL
                                      - THB
                                      - TJS
                                      - TMT
                                      - TND
                                      - TOP
                                      - TRY
                                      - TTD
                                      - TVD
                                      - TWD
                                      - TZS
                                      - UAH
                                      - UGX
                                      - USD
                                      - UYU
                                      - UZS
                                      - VEF
                                      - VND
                                      - VUV
                                      - WST
                                      - XAF
                                      - XCD
                                      - XDR
                                      - XOF
                                      - XPF
                                      - XTS
                                      - XXX
                                      - YER
                                      - ZAR
                                      - ZMW
                                      - ZWD
                                  amount:
                                    title: Amount
                                    type: string
                                    pattern: >-
                                      ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                                    description: >-
                                      The API data type Amount is a JSON String
                                      in a canonical format that is restricted
                                      by a regular expression for
                                      interoperability reasons. This pattern
                                      does not allow any trailing zeroes at all,
                                      but allows an amount without a minor
                                      currency unit. It also only allows four
                                      digits in the minor currency unit; a
                                      negative value is not allowed. Using more
                                      than 18 digits in the major currency unit
                                      is not allowed.
                                    example: '123.45'
                    skipPartyLookup:
                      description: >-
                        Set to true if supplying an FSPID for the payee party
                        and no party resolution is needed. This may be useful if
                        a previous party resolution has been performed.
                      type: boolean
                    synchronous:
                      description: >-
                        Set to true if the bulkTransfer requests need be handled
                        synchronous. Otherwise the requests will be handled
                        asynchronously, meaning there will  be callbacks
                        whenever the processing is done
                      type: boolean
                    bulkExpiration:
                      title: DateTime
                      type: string
                      pattern: >-
                        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                      description: >-
                        The API data type DateTime is a JSON String in a lexical
                        format that is restricted by a regular expression for
                        interoperability reasons. The format is according to
                        [ISO
                        8601](https://www.iso.org/iso-8601-date-and-time-format.html),
                        expressed in a combined date, time and time zone format.
                        A more readable version of the format is
                        yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are
                        "2016-05-24T08:38:08.699-04:00",
                        "2016-05-24T08:38:08.699Z" (where Z indicates Zulu time
                        zone, same as UTC).
                      example: '2016-05-24T08:38:08.699-04:00'
                individualTransferResults:
                  description: >-
                    List of individual transfer result in a bulk transfer
                    response.
                  type: array
                  minItems: 1
                  maxItems: 1000
                  items:
                    type: object
                    required: &ref_76
                      - homeTransactionId
                      - to
                      - amountType
                      - currency
                      - amount
                    properties: &ref_77
                      transferId:
                        title: CorrelationId
                        type: string
                        pattern: >-
                          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                        description: >-
                          Identifier that correlates all messages of the same
                          sequence. The API data type UUID (Universally Unique
                          Identifier) is a JSON String in canonical format,
                          conforming to [RFC
                          4122](https://tools.ietf.org/html/rfc4122), that is
                          restricted by a regular expression for
                          interoperability reasons. A UUID is always 36
                          characters long, 32 hexadecimal symbols and 4 dashes
                          (â€˜-â€˜).
                        example: b51ec534-ee48-4575-b6a9-ead2955b8069
                      homeTransactionId:
                        type: string
                        description: >-
                          Transaction ID from the DFSP backend, used to
                          reconcile transactions between the Switch and DFSP
                          backend systems.
                      transactionId:
                        title: CorrelationId
                        type: string
                        pattern: >-
                          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                        description: >-
                          Identifier that correlates all messages of the same
                          sequence. The API data type UUID (Universally Unique
                          Identifier) is a JSON String in canonical format,
                          conforming to [RFC
                          4122](https://tools.ietf.org/html/rfc4122), that is
                          restricted by a regular expression for
                          interoperability reasons. A UUID is always 36
                          characters long, 32 hexadecimal symbols and 4 dashes
                          (â€˜-â€˜).
                        example: b51ec534-ee48-4575-b6a9-ead2955b8069
                      to:
                        title: Party
                        type: object
                        description: Data model for the complex type Party.
                        properties: &ref_66
                          partyIdInfo:
                            title: PartyIdInfo
                            type: object
                            description: >-
                              Data model for the complex type PartyIdInfo. An
                              ExtensionList element has been added to this
                              reqeust in version v1.1
                            properties: &ref_62
                              partyIdType:
                                title: PartyIdType
                                type: string
                                enum: &ref_61
                                  - MSISDN
                                  - EMAIL
                                  - PERSONAL_ID
                                  - BUSINESS
                                  - DEVICE
                                  - ACCOUNT_ID
                                  - IBAN
                                  - ALIAS
                                description: >-
                                  Below are the allowed values for the
                                  enumeration.

                                  - MSISDN - An MSISDN (Mobile Station
                                  International Subscriber Directory Number,
                                  that is, the phone number) is used as
                                  reference to a participant. The MSISDN
                                  identifier should be in international format
                                  according to the [ITU-T E.164
                                  standard](https://www.itu.int/rec/T-REC-E.164/en).
                                  Optionally, the MSISDN may be prefixed by a
                                  single plus sign, indicating the international
                                  prefix.

                                  - EMAIL - An email is used as reference to a
                                  participant. The format of the email should be
                                  according to the informational [RFC
                                  3696](https://tools.ietf.org/html/rfc3696).

                                  - PERSONAL_ID - A personal identifier is used
                                  as reference to a participant. Examples of
                                  personal identification are passport number,
                                  birth certificate number, and national
                                  registration number. The identifier number is
                                  added in the PartyIdentifier element. The
                                  personal identifier type is added in the
                                  PartySubIdOrType element.

                                  - BUSINESS - A specific Business (for example,
                                  an organization or a company) is used as
                                  reference to a participant. The BUSINESS
                                  identifier can be in any format. To make a
                                  transaction connected to a specific username
                                  or bill number in a Business, the
                                  PartySubIdOrType element should be used.

                                  - DEVICE - A specific device (for example, a
                                  POS or ATM) ID connected to a specific
                                  business or organization is used as reference
                                  to a Party. For referencing a specific device
                                  under a specific business or organization, use
                                  the PartySubIdOrType element.

                                  - ACCOUNT_ID - A bank account number or FSP
                                  account ID should be used as reference to a
                                  participant. The ACCOUNT_ID identifier can be
                                  in any format, as formats can greatly differ
                                  depending on country and FSP.

                                  - IBAN - A bank account number or FSP account
                                  ID is used as reference to a participant. The
                                  IBAN identifier can consist of up to 34
                                  alphanumeric characters and should be entered
                                  without whitespace.

                                  - ALIAS An alias is used as reference to a
                                  participant. The alias should be created in
                                  the FSP as an alternative reference to an
                                  account owner. Another example of an alias is
                                  a username in the FSP system. The ALIAS
                                  identifier can be in any format. It is also
                                  possible to use the PartySubIdOrType element
                                  for identifying an account under an Alias
                                  defined by the PartyIdentifier.
                              partyIdentifier:
                                title: PartyIdentifier
                                type: string
                                minLength: 1
                                maxLength: 128
                                description: Identifier of the Party.
                                example: '16135551212'
                              partySubIdOrType:
                                title: PartySubIdOrType
                                type: string
                                minLength: 1
                                maxLength: 128
                                description: >-
                                  Either a sub-identifier of a PartyIdentifier,
                                  or a sub-type of the PartyIdType, normally a
                                  PersonalIdentifierType.
                              fspId:
                                title: FspId
                                type: string
                                minLength: 1
                                maxLength: 32
                                description: FSP identifier.
                              extensionList:
                                title: ExtensionList
                                type: object
                                description: >-
                                  Data model for the complex type ExtensionList.
                                  An optional list of extensions, specific to
                                  deployment.
                                properties: *ref_21
                                required: *ref_22
                            required: &ref_63
                              - partyIdType
                              - partyIdentifier
                          merchantClassificationCode:
                            title: MerchantClassificationCode
                            type: string
                            pattern: ^[\d]{1,4}$
                            description: >-
                              A limited set of pre-defined numbers. This list
                              would be a limited set of numbers identifying a
                              set of popular merchant types like School Fees,
                              Pubs and Restaurants, Groceries, etc.
                          name:
                            title: PartyName
                            type: string
                            minLength: 1
                            maxLength: 128
                            description: >-
                              Name of the Party. Could be a real name or a
                              nickname.
                          personalInfo:
                            title: PartyPersonalInfo
                            type: object
                            description: Data model for the complex type PartyPersonalInfo.
                            properties: &ref_65
                              complexName:
                                title: PartyComplexName
                                type: object
                                description: >-
                                  Data model for the complex type
                                  PartyComplexName.
                                properties: &ref_64
                                  firstName:
                                    title: FirstName
                                    type: string
                                    minLength: 1
                                    maxLength: 128
                                    pattern: >-
                                      ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
                                      .,''-]{1,128}$
                                    description: First name of the Party (Name Type).
                                    example: Henrik
                                  middleName:
                                    title: MiddleName
                                    type: string
                                    minLength: 1
                                    maxLength: 128
                                    pattern: >-
                                      ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
                                      .,''-]{1,128}$
                                    description: Middle name of the Party (Name Type).
                                    example: Johannes
                                  lastName:
                                    title: LastName
                                    type: string
                                    minLength: 1
                                    maxLength: 128
                                    pattern: >-
                                      ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
                                      .,''-]{1,128}$
                                    description: Last name of the Party (Name Type).
                                    example: Karlsson
                              dateOfBirth:
                                title: DateofBirth (type Date)
                                type: string
                                pattern: >-
                                  ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
                                description: Date of Birth of the Party.
                                example: '1966-06-16'
                        required: &ref_67
                          - partyIdInfo
                      reference:
                        description: Payer Loan reference
                        type: string
                      amountType:
                        title: AmountType
                        type: string
                        enum: &ref_68
                          - SEND
                          - RECEIVE
                        description: >-
                          Below are the allowed values for the enumeration
                          AmountType.

                          - SEND - Amount the Payer would like to send, that is,
                          the amount that should be withdrawn from the Payer
                          account including any fees.

                          - RECEIVE - Amount the Payer would like the Payee to
                          receive, that is, the amount that should be sent to
                          the receiver exclusive of any fees.
                        example: RECEIVE
                      currency:
                        title: Currency
                        description: >-
                          The currency codes defined in [ISO
                          4217](https://www.iso.org/iso-4217-currency-codes.html)
                          as three-letter alphabetic codes are used as the
                          standard naming representation for currencies.
                        type: string
                        minLength: 3
                        maxLength: 3
                        enum: *ref_23
                      amount:
                        title: Amount
                        type: string
                        pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                        description: >-
                          The API data type Amount is a JSON String in a
                          canonical format that is restricted by a regular
                          expression for interoperability reasons. This pattern
                          does not allow any trailing zeroes at all, but allows
                          an amount without a minor currency unit. It also only
                          allows four digits in the minor currency unit; a
                          negative value is not allowed. Using more than 18
                          digits in the major currency unit is not allowed.
                        example: '123.45'
                      note:
                        title: Note
                        type: string
                        minLength: 1
                        maxLength: 128
                        description: Memo assigned to transaction.
                        example: Note sent to Payee.
                      quoteId:
                        title: CorrelationId
                        type: string
                        pattern: >-
                          ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
                        description: >-
                          Identifier that correlates all messages of the same
                          sequence. The API data type UUID (Universally Unique
                          Identifier) is a JSON String in canonical format,
                          conforming to [RFC
                          4122](https://tools.ietf.org/html/rfc4122), that is
                          restricted by a regular expression for
                          interoperability reasons. A UUID is always 36
                          characters long, 32 hexadecimal symbols and 4 dashes
                          (â€˜-â€˜).
                        example: b51ec534-ee48-4575-b6a9-ead2955b8069
                      quoteResponse:
                        title: QuotesIDPutResponse
                        type: object
                        description: The object sent in the PUT /quotes/{ID} callback.
                        properties: &ref_71
                          transferAmount:
                            title: Money
                            type: object
                            description: Data model for the complex type Money.
                            properties: &ref_24
                              currency:
                                title: Currency
                                description: >-
                                  The currency codes defined in [ISO
                                  4217](https://www.iso.org/iso-4217-currency-codes.html)
                                  as three-letter alphabetic codes are used as
                                  the standard naming representation for
                                  currencies.
                                type: string
                                minLength: 3
                                maxLength: 3
                                enum: *ref_23
                              amount:
                                title: Amount
                                type: string
                                pattern: >-
                                  ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
                                description: >-
                                  The API data type Amount is a JSON String in a
                                  canonical format that is restricted by a
                                  regular expression for interoperability
                                  reasons. This pattern does not allow any
                                  trailing zeroes at all, but allows an amount
                                  without a minor currency unit. It also only
                                  allows four digits in the minor currency unit;
                                  a negative value is not allowed. Using more
                                  than 18 digits in the major currency unit is
                                  not allowed.
                                example: '123.45'
                            required: &ref_25
                              - currency
                              - amount
                          payeeReceiveAmount:
                            title: Money
                            type: object
                            description: Data model for the complex type Money.
                            properties: *ref_24
                            required: *ref_25
                          payeeFspFee:
                            title: Money
                            type: object
                            description: Data model for the complex type Money.
                            properties: *ref_24
                            required: *ref_25
                          payeeFspCommission:
                            title: Money
                            type: object
                            description: Data model for the complex type Money.
                            properties: *ref_24
                            required: *ref_25
                          expiration:
                            title: DateTime
                            type: string
                            pattern: >-
                              ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                            description: >-
                              The API data type DateTime is a JSON String in a
                              lexical format that is restricted by a regular
                              expression for interoperability reasons. The
                              format is according to [ISO
                              8601](https://www.iso.org/iso-8601-date-and-time-format.html),
                              expressed in a combined date, time and time zone
                              format. A more readable version of the format is
                              yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are
                              "2016-05-24T08:38:08.699-04:00",
                              "2016-05-24T08:38:08.699Z" (where Z indicates Zulu
                              time zone, same as UTC).
                            example: '2016-05-24T08:38:08.699-04:00'
                          geoCode:
                            title: GeoCode
                            type: object
                            description: >-
                              Data model for the complex type GeoCode. Indicates
                              the geographic location from where the transaction
                              was initiated.
                            properties: &ref_69
                              latitude:
                                title: Latitude
                                type: string
                                pattern: >-
                                  ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
                                description: >-
                                  The API data type Latitude is a JSON String in
                                  a lexical format that is restricted by a
                                  regular expression for interoperability
                                  reasons.
                                example: '+45.4215'
                              longitude:
                                title: Longitude
                                type: string
                                pattern: >-
                                  ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
                                description: >-
                                  The API data type Longitude is a JSON String
                                  in a lexical format that is restricted by a
                                  regular expression for interoperability
                                  reasons.
                                example: '+75.6972'
                            required: &ref_70
                              - latitude
                              - longitude
                          ilpPacket:
                            title: IlpPacket
                            type: string
                            pattern: ^[A-Za-z0-9-_]+[=]{0,2}$
                            minLength: 1
                            maxLength: 32768
                            description: >-
                              Information for recipient (transport layer
                              information).
                            example: >-
                              AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA
                          condition:
                            title: IlpCondition
                            type: string
                            pattern: ^[A-Za-z0-9-_]{43}$
                            maxLength: 48
                            description: >-
                              Condition that must be attached to the transfer by
                              the Payer.
                          extensionList:
                            title: ExtensionList
                            type: object
                            description: >-
                              Data model for the complex type ExtensionList. An
                              optional list of extensions, specific to
                              deployment.
                            properties: *ref_21
                            required: *ref_22
                        required: &ref_72
                          - transferAmount
                          - expiration
                          - ilpPacket
                          - condition
                      fulfil:
                        title: TransfersIDPutResponse
                        type: object
                        description: The object sent in the PUT /transfers/{ID} callback.
                        properties: &ref_74
                          fulfilment:
                            title: IlpFulfilment
                            type: string
                            pattern: ^[A-Za-z0-9-_]{43}$
                            maxLength: 48
                            description: >-
                              Fulfilment that must be attached to the transfer
                              by the Payee.
                            example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8
                          completedTimestamp:
                            title: DateTime
                            type: string
                            pattern: >-
                              ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
                            description: >-
                              The API data type DateTime is a JSON String in a
                              lexical format that is restricted by a regular
                              expression for interoperability reasons. The
                              format is according to [ISO
                              8601](https://www.iso.org/iso-8601-date-and-time-format.html),
                              expressed in a combined date, time and time zone
                              format. A more readable version of the format is
                              yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are
                              "2016-05-24T08:38:08.699-04:00",
                              "2016-05-24T08:38:08.699Z" (where Z indicates Zulu
                              time zone, same as UTC).
                            example: '2016-05-24T08:38:08.699-04:00'
                          transferState:
                            title: TransferState
                            type: string
                            enum: &ref_73
                              - RECEIVED
                              - RESERVED
                              - COMMITTED
                              - ABORTED
                            description: >-
                              Below are the allowed values for the enumeration.

                              - RECEIVED - Next ledger has received the
                              transfer.

                              - RESERVED - Next ledger has reserved the
                              transfer.

                              - COMMITTED - Next ledger has successfully
                              performed the transfer.

                              - ABORTED - Next ledger has aborted the transfer
                              due to a rejection or failure to perform the
                              transfer.
                            example: RESERVED
                          extensionList:
                            title: ExtensionList
                            type: object
                            description: >-
                              Data model for the complex type ExtensionList. An
                              optional list of extensions, specific to
                              deployment.
                            properties: *ref_21
                            required: *ref_22
                        required: &ref_75
                          - transferState
                      quoteExtensions:
                        title: ExtensionList
                        type: object
                        description: >-
                          Data model for the complex type ExtensionList. An
                          optional list of extensions, specific to deployment.
                        properties: *ref_21
                        required: *ref_22
                      transferExtensions:
                        title: ExtensionList
                        type: object
                        description: >-
                          Data model for the complex type ExtensionList. An
                          optional list of extensions, specific to deployment.
                        properties: *ref_21
                        required: *ref_22
                      lastError:
                        type: object
                        description: >-
                          This object represents a Mojaloop API error received
                          at any time during the transfer process
                        properties: *ref_26
                extensions:
                  title: ExtensionList
                  type: object
                  description: >-
                    Data model for the complex type ExtensionList. An optional
                    list of extensions, specific to deployment.
                  properties: *ref_21
                  required: *ref_22
      responses:
        '200':
          description: The notification was accepted
        '500':
          description: An error occurred processing the request
          content: *ref_6
components:
  schemas:
    amountType:
      type: string
      enum: *ref_16
      description: SEND for send amount, RECEIVE for receive amount.
    currency:
      maxLength: 3
      minLength: 3
      type: string
      enum: *ref_10
    dateOfBirth:
      type: string
      pattern: >-
        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
      description: Date of birth in the form YYYY-MM-DD.
    errorResponse:
      type: object
      required: *ref_0
      properties: *ref_1
    fspId:
      type: string
      minLength: 1
      maxLength: 32
      description: FSP identifier.
    extensionList:
      type: array
      items: *ref_11
      minItems: 0
      maxItems: 16
    geoCode:
      type: object
      description: >-
        Indicates the geographic location from where the transaction was
        initiated.
      properties: *ref_12
      required: *ref_13
    idType:
      type: string
      enum: *ref_27
      description: >
        Below are the allowed values for the enumeration.


        - MSISDN -  An MSISDN (Mobile Station International Subscriber Directory
        Number, that is, the phone number) is used as reference to a
        participant. The MSISDN identifier should be in international format
        according to the [ITU-T E.164
        standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the
        MSISDN may be prefixed by a single plus sign, indicating the
        international prefix.


        - ACCOUNT_ID - A bank account number or FSP account ID should be used as
        reference to a participant. The ACCOUNT_ID identifier can be in any
        format, as formats can greatly differ depending on country and FSP.
    personalIdType:
      type: string
      enum:
        - PASSPORT
        - NATIONAL_REGISTRATION
        - DRIVING_LICENSE
        - ALIEN_REGISTRATION
        - NATIONAL_ID_CARD
        - EMPLOYER_ID
        - TAX_ID_NUMBER
        - SENIOR_CITIZENS_CARD
        - MARRIAGE_CERTIFICATE
        - HEALTH_CARD
        - VOTERS_ID
        - UNITED_NATIONS
        - OTHER_ID
      description: >
        Below are the allowed values for the enumeration.


        - PASSPORT - Apassport number isused in reference to a party.


        - NATIONAL_REGISTRATION - Anational registration number isused in
        reference to a party.


        - DRIVING_LICENSE - Adriving license isused in reference to a party.


        - ALIEN_REGISTRATION - An alien registration number isused in reference
        to a party.


        - NATIONAL_ID_CARD - Anational ID card number isused in reference to a
        party.


        - EMPLOYER_ID - Atax identification number isused in reference to a
        party.


        - TAX_ID_NUMBER - Atax identification number isused in reference to a
        party.


        - SENIOR_CITIZENS_CARD - Asenior citizens card number isused in
        reference to a party.


        - MARRIAGE_CERTIFICATE - Amarriage certificate number isused in
        reference to a party.


        - HEALTH_CARD - Ahealth card number isused in reference to a party.


        - VOTERS_ID - Avoterâ€™s identification number isused in reference to a
        party.


        - UNITED_NATIONS - An UN (United Nations) number isused in reference to
        a party.


        - OTHER_ID - Any other type of identification type number isused in
        reference to a party.
    idValue:
      type: string
      minLength: 1
      maxLength: 128
      description: Identifier of the party.
    idSubValue:
      type: string
      minLength: 1
      maxLength: 128
      description: >-
        Either a sub-identifier of a `{idValue}`, or a sub-type of the
        `{idType}`, normally a `{personalIdType}`
    initiator:
      type: string
      enum: *ref_18
      description: Specifies if the initiator of the transfer is the Payer or Payee.
    extensionItem:
      type: object
      properties: *ref_28
    initiatorType:
      type: string
      enum: *ref_19
      description: Specifies the type of the transaction initiator.
    latitude:
      type: string
      pattern: >-
        ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
      description: >-
        The API data type Latitude is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons.
    longitude:
      type: string
      pattern: >-
        ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
      description: >-
        The API data type Longitude is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons.
    money:
      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
      type: string
    participantsResponse:
      type: object
      properties: *ref_4
    payerType:
      type: string
      enum: *ref_29
    quoteId:
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
      description: A Mojaloop API quote identifier (UUID).
    quoteRequest:
      type: object
      description: A request for a quote for transfer from the DFSP backend.
      required: *ref_30
      properties: *ref_31
    quoteResponse:
      type: object
      description: A response to a request for a quote.
      required: *ref_14
      properties: *ref_15
    timestamp:
      type: string
      pattern: >-
        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      description: An ISO-8601 formatted timestamp.
    transactionId:
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
      description: >-
        ID of the transaction, the ID is decided by the Payer FSP during the
        creation of the quote.
    transactionType:
      type: string
      enum: *ref_17
    scenario:
      type: string
      enum: *ref_32
    amountCurrency:
      type: object
      description: Object containing Amount and Currency of the transfer.
      required: *ref_33
      properties: *ref_34
    transactionTypeObject:
      type: object
      description: Object containing transfer object.
      required: *ref_35
      properties: *ref_36
    ilpPacketData:
      type: object
      description: Object containing transfer object.
      required: *ref_37
      properties: *ref_38
    transferId:
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
      description: A Mojaloop API transfer identifier (UUID).
    transferParty:
      type: object
      required: *ref_8
      properties: *ref_9
    transferState:
      type: string
      enum: *ref_20
      description: >
        Below are the allowed values for the enumeration - RECEIVED DFSP has
        received the transfer. - RESERVED DFSP has reserved the transfer. -
        COMMITTED DFSP has successfully performed the transfer. - ABORTED DFSP
        has aborted the transfer due a rejection or failure to perform the
        transfer.
    transferRequest:
      type: object
      required: *ref_39
      properties: *ref_40
    transferResponse:
      type: object
      required: *ref_41
      properties: *ref_42
    transferDetailsResponse:
      type: object
      required: *ref_43
      properties: *ref_44
    transferStatus:
      type: string
      enum: *ref_45
    fulfilNotification:
      title: TransfersIDPatchResponse
      type: object
      description: PUT /transfers/{transferId} object
      properties: *ref_46
    extensionListComplex:
      type: object
      description: Data model for the complex type ExtensionList
      properties:
        extension:
          type: array
          items:
            type: object
            properties: *ref_28
          minItems: 1
          maxItems: 16
          description: Number of Extension elements
      required:
        - extension
    generalError:
      type: object
      description: >-
        This object may represent a number of different error object types and
        so its properties may vary significantly.
    IlpFulfilment:
      title: IlpFulfilment
      type: string
      pattern: ^[A-Za-z0-9-_]{43}$
      maxLength: 48
      description: Fulfilment that must be attached to the transfer by the Payee.
      example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8
    ErrorCode:
      title: ErrorCode
      type: string
      pattern: ^[1-9]\d{3}$
      description: >-
        The API data type ErrorCode is a JSON String of four characters,
        consisting of digits only. Negative numbers are not allowed. A leading
        zero is not allowed. Each error code in the API is a four-digit number,
        for example, 1234, where the first number (1 in the example) represents
        the high-level error category, the second number (2 in the example)
        represents the low-level error category, and the last two numbers (34 in
        the example) represent the specific error.
      example: '5100'
    ErrorDescription:
      title: ErrorDescription
      type: string
      minLength: 1
      maxLength: 128
      description: Error description string.
    ExtensionKey:
      title: ExtensionKey
      type: string
      minLength: 1
      maxLength: 32
      description: Extension key.
    ExtensionValue:
      title: ExtensionValue
      type: string
      minLength: 1
      maxLength: 128
      description: Extension value.
    Extension:
      title: Extension
      type: object
      description: Data model for the complex type Extension.
      properties: *ref_47
      required: *ref_48
    ExtensionList:
      title: ExtensionList
      type: object
      description: >-
        Data model for the complex type ExtensionList. An optional list of
        extensions, specific to deployment.
      properties: *ref_21
      required: *ref_22
    ErrorInformation:
      title: ErrorInformation
      type: object
      description: Data model for the complex type ErrorInformation.
      properties: *ref_49
      required: *ref_50
    mojaloopError:
      type: object
      properties: *ref_51
    transferError:
      type: object
      description: >-
        This object represents a Mojaloop API error received at any time during
        the transfer process
      properties: *ref_26
    CorrelationId:
      title: CorrelationId
      type: string
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      description: >-
        Identifier that correlates all messages of the same sequence. The API
        data type UUID (Universally Unique Identifier) is a JSON String in
        canonical format, conforming to [RFC
        4122](https://tools.ietf.org/html/rfc4122), that is restricted by a
        regular expression for interoperability reasons. A UUID is always 36
        characters long, 32 hexadecimal symbols and 4 dashes (â€˜-â€˜).
      example: b51ec534-ee48-4575-b6a9-ead2955b8069
    bulkTransactionStatus:
      type: string
      enum: *ref_52
    autoAcceptPartyOption:
      type: object
      required: *ref_53
      properties: *ref_54
    Currency:
      title: Currency
      description: >-
        The currency codes defined in [ISO
        4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter
        alphabetic codes are used as the standard naming representation for
        currencies.
      type: string
      minLength: 3
      maxLength: 3
      enum: *ref_23
    Amount:
      title: Amount
      type: string
      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
      description: >-
        The API data type Amount is a JSON String in a canonical format that is
        restricted by a regular expression for interoperability reasons. This
        pattern does not allow any trailing zeroes at all, but allows an amount
        without a minor currency unit. It also only allows four digits in the
        minor currency unit; a negative value is not allowed. Using more than 18
        digits in the major currency unit is not allowed.
      example: '123.45'
    bulkPerTransferFeeLimit:
      type: object
      required: *ref_55
      properties: *ref_56
    autoAcceptQuote:
      type: object
      required: *ref_57
      properties: *ref_58
    DateTime:
      title: DateTime
      type: string
      pattern: >-
        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      description: >-
        The API data type DateTime is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons. The
        format is according to [ISO
        8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed
        in a combined date, time and time zone format. A more readable version
        of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are
        "2016-05-24T08:38:08.699-04:00", "2016-05-24T08:38:08.699Z" (where Z
        indicates Zulu time zone, same as UTC).
      example: '2016-05-24T08:38:08.699-04:00'
    bulkTransactionOptions:
      type: object
      required: *ref_59
      properties: *ref_60
    PartyIdType:
      title: PartyIdType
      type: string
      enum: *ref_61
      description: >-
        Below are the allowed values for the enumeration.

        - MSISDN - An MSISDN (Mobile Station International Subscriber Directory
        Number, that is, the phone number) is used as reference to a
        participant. The MSISDN identifier should be in international format
        according to the [ITU-T E.164
        standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the
        MSISDN may be prefixed by a single plus sign, indicating the
        international prefix.

        - EMAIL - An email is used as reference to a participant. The format of
        the email should be according to the informational [RFC
        3696](https://tools.ietf.org/html/rfc3696).

        - PERSONAL_ID - A personal identifier is used as reference to a
        participant. Examples of personal identification are passport number,
        birth certificate number, and national registration number. The
        identifier number is added in the PartyIdentifier element. The personal
        identifier type is added in the PartySubIdOrType element.

        - BUSINESS - A specific Business (for example, an organization or a
        company) is used as reference to a participant. The BUSINESS identifier
        can be in any format. To make a transaction connected to a specific
        username or bill number in a Business, the PartySubIdOrType element
        should be used.

        - DEVICE - A specific device (for example, a POS or ATM) ID connected to
        a specific business or organization is used as reference to a Party. For
        referencing a specific device under a specific business or organization,
        use the PartySubIdOrType element.

        - ACCOUNT_ID - A bank account number or FSP account ID should be used as
        reference to a participant. The ACCOUNT_ID identifier can be in any
        format, as formats can greatly differ depending on country and FSP.

        - IBAN - A bank account number or FSP account ID is used as reference to
        a participant. The IBAN identifier can consist of up to 34 alphanumeric
        characters and should be entered without whitespace.

        - ALIAS An alias is used as reference to a participant. The alias should
        be created in the FSP as an alternative reference to an account owner.
        Another example of an alias is a username in the FSP system. The ALIAS
        identifier can be in any format. It is also possible to use the
        PartySubIdOrType element for identifying an account under an Alias
        defined by the PartyIdentifier.
    PartyIdentifier:
      title: PartyIdentifier
      type: string
      minLength: 1
      maxLength: 128
      description: Identifier of the Party.
      example: '16135551212'
    PartySubIdOrType:
      title: PartySubIdOrType
      type: string
      minLength: 1
      maxLength: 128
      description: >-
        Either a sub-identifier of a PartyIdentifier, or a sub-type of the
        PartyIdType, normally a PersonalIdentifierType.
    FspId:
      title: FspId
      type: string
      minLength: 1
      maxLength: 32
      description: FSP identifier.
    PartyIdInfo:
      title: PartyIdInfo
      type: object
      description: >-
        Data model for the complex type PartyIdInfo. An ExtensionList element
        has been added to this reqeust in version v1.1
      properties: *ref_62
      required: *ref_63
    MerchantClassificationCode:
      title: MerchantClassificationCode
      type: string
      pattern: ^[\d]{1,4}$
      description: >-
        A limited set of pre-defined numbers. This list would be a limited set
        of numbers identifying a set of popular merchant types like School Fees,
        Pubs and Restaurants, Groceries, etc.
    PartyName:
      title: PartyName
      type: string
      minLength: 1
      maxLength: 128
      description: Name of the Party. Could be a real name or a nickname.
    FirstName:
      title: FirstName
      type: string
      minLength: 1
      maxLength: 128
      pattern: >-
        ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
        .,''-]{1,128}$
      description: First name of the Party (Name Type).
      example: Henrik
    MiddleName:
      title: MiddleName
      type: string
      minLength: 1
      maxLength: 128
      pattern: >-
        ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
        .,''-]{1,128}$
      description: Middle name of the Party (Name Type).
      example: Johannes
    LastName:
      title: LastName
      type: string
      minLength: 1
      maxLength: 128
      pattern: >-
        ^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control}
        .,''-]{1,128}$
      description: Last name of the Party (Name Type).
      example: Karlsson
    PartyComplexName:
      title: PartyComplexName
      type: object
      description: Data model for the complex type PartyComplexName.
      properties: *ref_64
    DateOfBirth:
      title: DateofBirth (type Date)
      type: string
      pattern: >-
        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
      description: Date of Birth of the Party.
      example: '1966-06-16'
    PartyPersonalInfo:
      title: PartyPersonalInfo
      type: object
      description: Data model for the complex type PartyPersonalInfo.
      properties: *ref_65
    Party:
      title: Party
      type: object
      description: Data model for the complex type Party.
      properties: *ref_66
      required: *ref_67
    AmountType:
      title: AmountType
      type: string
      enum: *ref_68
      description: >-
        Below are the allowed values for the enumeration AmountType.

        - SEND - Amount the Payer would like to send, that is, the amount that
        should be withdrawn from the Payer account including any fees.

        - RECEIVE - Amount the Payer would like the Payee to receive, that is,
        the amount that should be sent to the receiver exclusive of any fees.
      example: RECEIVE
    Note:
      title: Note
      type: string
      minLength: 1
      maxLength: 128
      description: Memo assigned to transaction.
      example: Note sent to Payee.
    Money:
      title: Money
      type: object
      description: Data model for the complex type Money.
      properties: *ref_24
      required: *ref_25
    Latitude:
      title: Latitude
      type: string
      pattern: >-
        ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
      description: >-
        The API data type Latitude is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons.
      example: '+45.4215'
    Longitude:
      title: Longitude
      type: string
      pattern: >-
        ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
      description: >-
        The API data type Longitude is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons.
      example: '+75.6972'
    GeoCode:
      title: GeoCode
      type: object
      description: >-
        Data model for the complex type GeoCode. Indicates the geographic
        location from where the transaction was initiated.
      properties: *ref_69
      required: *ref_70
    IlpPacket:
      title: IlpPacket
      type: string
      pattern: ^[A-Za-z0-9-_]+[=]{0,2}$
      minLength: 1
      maxLength: 32768
      description: Information for recipient (transport layer information).
      example: >-
        AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA
    IlpCondition:
      title: IlpCondition
      type: string
      pattern: ^[A-Za-z0-9-_]{43}$
      maxLength: 48
      description: Condition that must be attached to the transfer by the Payer.
    QuotesIDPutResponse:
      title: QuotesIDPutResponse
      type: object
      description: The object sent in the PUT /quotes/{ID} callback.
      properties: *ref_71
      required: *ref_72
    TransferState:
      title: TransferState
      type: string
      enum: *ref_73
      description: >-
        Below are the allowed values for the enumeration.

        - RECEIVED - Next ledger has received the transfer.

        - RESERVED - Next ledger has reserved the transfer.

        - COMMITTED - Next ledger has successfully performed the transfer.

        - ABORTED - Next ledger has aborted the transfer due to a rejection or
        failure to perform the transfer.
      example: RESERVED
    TransfersIDPutResponse:
      title: TransfersIDPutResponse
      type: object
      description: The object sent in the PUT /transfers/{ID} callback.
      properties: *ref_74
      required: *ref_75
    bulkTransactionIndividualTransferResult:
      type: object
      required: *ref_76
      properties: *ref_77
    bulkTransactionResponse:
      title: BulkTransactionResponse
      type: object
      required: *ref_78
      properties: *ref_79
  responses:
    '400':
      description: Malformed or missing required headers or parameters
      content: *ref_5
    '404':
      description: >-
        The party specified by the provided identifier type and value is not
        known to the server
    '500':
      description: An error occurred processing the request
      content: *ref_6
  parameters:
    transferId:
      name: transferId
      in: path
      required: true
      schema: *ref_80
    idType:
      name: idType
      in: path
      required: true
      schema: *ref_2
      description: >
        Below are the allowed values for the enumeration.


        - MSISDN -  An MSISDN (Mobile Station International Subscriber Directory
        Number, that is, the phone number) is used as reference to a
        participant. The MSISDN identifier should be in international format
        according to the [ITU-T E.164
        standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the
        MSISDN may be prefixed by a single plus sign, indicating the
        international prefix.


        - ACCOUNT_ID - A bank account number or FSP account ID should be used as
        reference to a participant. The ACCOUNT_ID identifier can be in any
        format, as formats can greatly differ depending on country and FSP.
    idValue:
      name: idValue
      in: path
      required: true
      schema: *ref_3
      description: Identifier of the party.
    idSubValue:
      name: idSubValue
      in: path
      required: true
      schema: *ref_7
      description: >-
        Either a sub-identifier of a `{idValue}`, or a sub-type of the
        `{idType}`, normally a `{personalIdType}`
    bulkTransactionId:
      name: bulkTransactionId
      in: path
      required: true
      schema: *ref_81
      description: >-
        Identifier of the bulk transaction to continue as returned in the
        response to a `POST /bulkTransaction` request.
