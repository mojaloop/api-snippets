{
  "Amount": {
    "title": "Amount",
    "type": "string",
    "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
    "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
    "example": "123.45"
  },
  "AmountType": {
    "title": "AmountType",
    "type": "string",
    "enum": [
      "SEND",
      "RECEIVE"
    ],
    "description": "Below are the allowed values for the enumeration AmountType.\n- SEND - Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees.\n- RECEIVE - Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive of any fees.",
    "example": "RECEIVE"
  },
  "AuthenticationInfo": {
    "title": "AuthenticationInfo",
    "type": "object",
    "description": "Data model for the complex type AuthenticationInfo.",
    "properties": {
      "authentication": {
        "title": "AuthenticationType",
        "type": "string",
        "enum": [
          "OTP",
          "QRCODE",
          "U2F"
        ],
        "description": "Below are the allowed values for the enumeration AuthenticationType.\n- OTP - One-time password generated by the Payer FSP.\n- QRCODE - QR code used as One Time Password.\n- U2F - U2F is a new addition isolated to Thirdparty stream.",
        "example": "OTP"
      },
      "authenticationValue": {
        "title": "AuthenticationValue",
        "anyOf": [
          {
            "title": "OtpValue",
            "type": "string",
            "pattern": "^\\d{3,10}$",
            "description": "The API data type OtpValue is a JSON String of 3 to 10 characters, consisting of digits only. Negative numbers are not allowed. One or more leading zeros are allowed."
          },
          {
            "title": "QRCODE",
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "description": "QR code used as a One Time Password."
          },
          {
            "title": "U2FPinValue",
            "type": "object",
            "description": "U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.\n",
            "properties": {
              "pinValue": {
                "allOf": [
                  {
                    "title": "U2FPIN",
                    "type": "string",
                    "pattern": "^\\S{1,64}$",
                    "minLength": 1,
                    "maxLength": 64,
                    "description": "U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.\n"
                  }
                ],
                "description": "U2F challenge-response."
              },
              "counter": {
                "allOf": [
                  {
                    "title": "Integer",
                    "type": "string",
                    "pattern": "^[1-9]\\d*$",
                    "description": "The API data type Integer is a JSON String consisting of digits only. Negative numbers and leading zeroes are not allowed. The data type is always limited to a specific number of digits."
                  }
                ],
                "description": "Sequential counter used for cloning detection. Present only for U2F authentication."
              }
            },
            "required": [
              "pinValue",
              "counter"
            ]
          }
        ],
        "pattern": "^\\d{3,10}$|^\\S{1,64}$",
        "description": "Contains the authentication value. The format depends on the authentication type used in the AuthenticationInfo complex type."
      }
    },
    "required": [
      "authentication",
      "authenticationValue"
    ]
  },
  "AuthenticationType": {
    "title": "AuthenticationType",
    "type": "string",
    "enum": [
      "OTP",
      "QRCODE",
      "U2F"
    ],
    "description": "Below are the allowed values for the enumeration AuthenticationType.\n- OTP - One-time password generated by the Payer FSP.\n- QRCODE - QR code used as One Time Password.\n- U2F - U2F is a new addition isolated to Thirdparty stream.",
    "example": "OTP"
  },
  "AuthenticationValue": {
    "title": "AuthenticationValue",
    "anyOf": [
      {
        "title": "OtpValue",
        "type": "string",
        "pattern": "^\\d{3,10}$",
        "description": "The API data type OtpValue is a JSON String of 3 to 10 characters, consisting of digits only. Negative numbers are not allowed. One or more leading zeros are allowed."
      },
      {
        "title": "QRCODE",
        "type": "string",
        "minLength": 1,
        "maxLength": 64,
        "description": "QR code used as a One Time Password."
      },
      {
        "title": "U2FPinValue",
        "type": "object",
        "description": "U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.\n",
        "properties": {
          "pinValue": {
            "allOf": [
              {
                "title": "U2FPIN",
                "type": "string",
                "pattern": "^\\S{1,64}$",
                "minLength": 1,
                "maxLength": 64,
                "description": "U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.\n"
              }
            ],
            "description": "U2F challenge-response."
          },
          "counter": {
            "allOf": [
              {
                "title": "Integer",
                "type": "string",
                "pattern": "^[1-9]\\d*$",
                "description": "The API data type Integer is a JSON String consisting of digits only. Negative numbers and leading zeroes are not allowed. The data type is always limited to a specific number of digits."
              }
            ],
            "description": "Sequential counter used for cloning detection. Present only for U2F authentication."
          }
        },
        "required": [
          "pinValue",
          "counter"
        ]
      }
    ],
    "pattern": "^\\d{3,10}$|^\\S{1,64}$",
    "description": "Contains the authentication value. The format depends on the authentication type used in the AuthenticationInfo complex type."
  },
  "AuthorizationResponse": {
    "title": "AuthorizationResponse",
    "type": "string",
    "enum": [
      "ENTERED",
      "REJECTED",
      "RESEND"
    ],
    "description": "Below are the allowed values for the enumeration.\n- ENTERED - Consumer entered the authentication value.\n- REJECTED - Consumer rejected the transaction.\n- RESEND - Consumer requested to resend the authentication value.",
    "example": "ENTERED"
  },
  "AuthorizationsIDPutResponse": {
    "title": "AuthorizationsIDPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /authorizations/{ID} callback.",
    "properties": {
      "authenticationInfo": {
        "title": "AuthenticationInfo",
        "type": "object",
        "description": "Data model for the complex type AuthenticationInfo.",
        "properties": {
          "authentication": {
            "title": "AuthenticationType",
            "type": "string",
            "enum": [
              "OTP",
              "QRCODE",
              "U2F"
            ],
            "description": "Below are the allowed values for the enumeration AuthenticationType.\n- OTP - One-time password generated by the Payer FSP.\n- QRCODE - QR code used as One Time Password.\n- U2F - U2F is a new addition isolated to Thirdparty stream.",
            "example": "OTP"
          },
          "authenticationValue": {
            "title": "AuthenticationValue",
            "anyOf": [
              {
                "title": "OtpValue",
                "type": "string",
                "pattern": "^\\d{3,10}$",
                "description": "The API data type OtpValue is a JSON String of 3 to 10 characters, consisting of digits only. Negative numbers are not allowed. One or more leading zeros are allowed."
              },
              {
                "title": "QRCODE",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "description": "QR code used as a One Time Password."
              },
              {
                "title": "U2FPinValue",
                "type": "object",
                "description": "U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.\n",
                "properties": {
                  "pinValue": {
                    "allOf": [
                      {
                        "title": "U2FPIN",
                        "type": "string",
                        "pattern": "^\\S{1,64}$",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.\n"
                      }
                    ],
                    "description": "U2F challenge-response."
                  },
                  "counter": {
                    "allOf": [
                      {
                        "title": "Integer",
                        "type": "string",
                        "pattern": "^[1-9]\\d*$",
                        "description": "The API data type Integer is a JSON String consisting of digits only. Negative numbers and leading zeroes are not allowed. The data type is always limited to a specific number of digits."
                      }
                    ],
                    "description": "Sequential counter used for cloning detection. Present only for U2F authentication."
                  }
                },
                "required": [
                  "pinValue",
                  "counter"
                ]
              }
            ],
            "pattern": "^\\d{3,10}$|^\\S{1,64}$",
            "description": "Contains the authentication value. The format depends on the authentication type used in the AuthenticationInfo complex type."
          }
        },
        "required": [
          "authentication",
          "authenticationValue"
        ]
      },
      "responseType": {
        "title": "AuthorizationResponse",
        "type": "string",
        "enum": [
          "ENTERED",
          "REJECTED",
          "RESEND"
        ],
        "description": "Below are the allowed values for the enumeration.\n- ENTERED - Consumer entered the authentication value.\n- REJECTED - Consumer rejected the transaction.\n- RESEND - Consumer requested to resend the authentication value.",
        "example": "ENTERED"
      }
    },
    "required": [
      "responseType"
    ]
  },
  "BalanceOfPayments": {
    "title": "BalanceOfPayments",
    "type": "string",
    "pattern": "^[1-9]\\d{2}$",
    "description": "(BopCode) The API data type [BopCode](https://www.imf.org/external/np/sta/bopcode/) is a JSON String of 3 characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed.",
    "example": "123"
  },
  "BinaryString": {
    "type": "string",
    "pattern": "^[A-Za-z0-9-_]+[=]{0,2}$",
    "description": "The API data type BinaryString is a JSON String. The string is a base64url  encoding of a string of raw bytes, where padding (character ‘=’) is added at the end of the data if needed to ensure that the string is a multiple of 4 characters. The length restriction indicates the allowed number of characters."
  },
  "BinaryString32": {
    "type": "string",
    "pattern": "^[A-Za-z0-9-_]{43}$",
    "description": "The API data type BinaryString32 is a fixed size version of the API data type BinaryString, where the raw underlying data is always of 32 bytes. The data type BinaryString32 should not use a padding character as the size of the underlying data is fixed."
  },
  "BulkQuotesIDPutResponse": {
    "title": "BulkQuotesIDPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /bulkQuotes/{ID} callback.",
    "properties": {
      "individualQuoteResults": {
        "type": "array",
        "maxItems": 1000,
        "items": {
          "title": "IndividualQuoteResult",
          "type": "object",
          "description": "Data model for the complex type IndividualQuoteResult.",
          "properties": {
            "quoteId": {
              "title": "CorrelationId",
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
              "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
            },
            "payee": {
              "title": "Party",
              "type": "object",
              "description": "Data model for the complex type Party.",
              "properties": {
                "partyIdInfo": {
                  "title": "PartyIdInfo",
                  "type": "object",
                  "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
                  "properties": {
                    "partyIdType": {
                      "title": "PartyIdType",
                      "type": "string",
                      "enum": [
                        "MSISDN",
                        "EMAIL",
                        "PERSONAL_ID",
                        "BUSINESS",
                        "DEVICE",
                        "ACCOUNT_ID",
                        "IBAN",
                        "ALIAS"
                      ],
                      "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
                    },
                    "partyIdentifier": {
                      "title": "PartyIdentifier",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Identifier of the Party.",
                      "example": "16135551212"
                    },
                    "partySubIdOrType": {
                      "title": "PartySubIdOrType",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
                    },
                    "fspId": {
                      "title": "FspId",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "FSP identifier."
                    },
                    "extensionList": {
                      "title": "ExtensionList",
                      "type": "object",
                      "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                      "properties": {
                        "extension": {
                          "type": "array",
                          "items": {
                            "title": "Extension",
                            "type": "object",
                            "description": "Data model for the complex type Extension.",
                            "properties": {
                              "key": {
                                "title": "ExtensionKey",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "description": "Extension key."
                              },
                              "value": {
                                "title": "ExtensionValue",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 128,
                                "description": "Extension value."
                              }
                            },
                            "required": [
                              "key",
                              "value"
                            ]
                          },
                          "minItems": 1,
                          "maxItems": 16,
                          "description": "Number of Extension elements."
                        }
                      },
                      "required": [
                        "extension"
                      ]
                    }
                  },
                  "required": [
                    "partyIdType",
                    "partyIdentifier"
                  ]
                },
                "merchantClassificationCode": {
                  "title": "MerchantClassificationCode",
                  "type": "string",
                  "pattern": "^[\\d]{1,4}$",
                  "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
                },
                "name": {
                  "title": "PartyName",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Name of the Party. Could be a real name or a nickname."
                },
                "personalInfo": {
                  "title": "PartyPersonalInfo",
                  "type": "object",
                  "description": "Data model for the complex type PartyPersonalInfo.",
                  "properties": {
                    "complexName": {
                      "title": "PartyComplexName",
                      "type": "object",
                      "description": "Data model for the complex type PartyComplexName.",
                      "properties": {
                        "firstName": {
                          "title": "FirstName",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                          "description": "First name of the Party (Name Type).",
                          "example": "Henrik"
                        },
                        "middleName": {
                          "title": "MiddleName",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                          "description": "Middle name of the Party (Name Type).",
                          "example": "Johannes"
                        },
                        "lastName": {
                          "title": "LastName",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                          "description": "Last name of the Party (Name Type).",
                          "example": "Karlsson"
                        }
                      }
                    },
                    "dateOfBirth": {
                      "title": "DateofBirth (type Date)",
                      "type": "string",
                      "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                      "description": "Date of Birth of the Party.",
                      "example": "1966-06-16"
                    },
                    "kycInformation": {
                      "title": "KYCInformation",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 2048,
                      "description": "KYC information for the party in a form mandated by an individual scheme.",
                      "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
                    }
                  }
                },
                "supportedCurrencies": {
                  "type": "array",
                  "description": "Currencies in which the party can receive funds.",
                  "items": {
                    "title": "Currency",
                    "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3,
                    "enum": [
                      "AED",
                      "AFN",
                      "ALL",
                      "AMD",
                      "ANG",
                      "AOA",
                      "ARS",
                      "AUD",
                      "AWG",
                      "AZN",
                      "BAM",
                      "BBD",
                      "BDT",
                      "BGN",
                      "BHD",
                      "BIF",
                      "BMD",
                      "BND",
                      "BOB",
                      "BRL",
                      "BSD",
                      "BTN",
                      "BWP",
                      "BYN",
                      "BZD",
                      "CAD",
                      "CDF",
                      "CHF",
                      "CLP",
                      "CNY",
                      "COP",
                      "CRC",
                      "CUC",
                      "CUP",
                      "CVE",
                      "CZK",
                      "DJF",
                      "DKK",
                      "DOP",
                      "DZD",
                      "EGP",
                      "ERN",
                      "ETB",
                      "EUR",
                      "FJD",
                      "FKP",
                      "GBP",
                      "GEL",
                      "GGP",
                      "GHS",
                      "GIP",
                      "GMD",
                      "GNF",
                      "GTQ",
                      "GYD",
                      "HKD",
                      "HNL",
                      "HRK",
                      "HTG",
                      "HUF",
                      "IDR",
                      "ILS",
                      "IMP",
                      "INR",
                      "IQD",
                      "IRR",
                      "ISK",
                      "JEP",
                      "JMD",
                      "JOD",
                      "JPY",
                      "KES",
                      "KGS",
                      "KHR",
                      "KMF",
                      "KPW",
                      "KRW",
                      "KWD",
                      "KYD",
                      "KZT",
                      "LAK",
                      "LBP",
                      "LKR",
                      "LRD",
                      "LSL",
                      "LYD",
                      "MAD",
                      "MDL",
                      "MGA",
                      "MKD",
                      "MMK",
                      "MNT",
                      "MOP",
                      "MRO",
                      "MUR",
                      "MVR",
                      "MWK",
                      "MXN",
                      "MYR",
                      "MZN",
                      "NAD",
                      "NGN",
                      "NIO",
                      "NOK",
                      "NPR",
                      "NZD",
                      "OMR",
                      "PAB",
                      "PEN",
                      "PGK",
                      "PHP",
                      "PKR",
                      "PLN",
                      "PYG",
                      "QAR",
                      "RON",
                      "RSD",
                      "RUB",
                      "RWF",
                      "SAR",
                      "SBD",
                      "SCR",
                      "SDG",
                      "SEK",
                      "SGD",
                      "SHP",
                      "SLL",
                      "SOS",
                      "SPL",
                      "SRD",
                      "STD",
                      "SVC",
                      "SYP",
                      "SZL",
                      "THB",
                      "TJS",
                      "TMT",
                      "TND",
                      "TOP",
                      "TRY",
                      "TTD",
                      "TVD",
                      "TWD",
                      "TZS",
                      "UAH",
                      "UGX",
                      "USD",
                      "UYU",
                      "UZS",
                      "VEF",
                      "VND",
                      "VUV",
                      "WST",
                      "XAF",
                      "XCD",
                      "XDR",
                      "XOF",
                      "XPF",
                      "XTS",
                      "XXX",
                      "YER",
                      "ZAR",
                      "ZMW",
                      "ZWD"
                    ]
                  },
                  "minItems": 0,
                  "maxItems": 16
                }
              },
              "required": [
                "partyIdInfo"
              ]
            },
            "transferAmount": {
              "title": "Money",
              "type": "object",
              "description": "Data model for the complex type Money.",
              "properties": {
                "currency": {
                  "title": "Currency",
                  "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 3,
                  "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GGP",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "IMP",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JEP",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SPL",
                    "SRD",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TVD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPF",
                    "XTS",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWD"
                  ]
                },
                "amount": {
                  "title": "Amount",
                  "type": "string",
                  "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                  "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                  "example": "123.45"
                }
              },
              "required": [
                "currency",
                "amount"
              ]
            },
            "payeeReceiveAmount": {
              "title": "Money",
              "type": "object",
              "description": "Data model for the complex type Money.",
              "properties": {
                "currency": {
                  "title": "Currency",
                  "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 3,
                  "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GGP",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "IMP",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JEP",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SPL",
                    "SRD",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TVD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPF",
                    "XTS",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWD"
                  ]
                },
                "amount": {
                  "title": "Amount",
                  "type": "string",
                  "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                  "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                  "example": "123.45"
                }
              },
              "required": [
                "currency",
                "amount"
              ]
            },
            "payeeFspFee": {
              "title": "Money",
              "type": "object",
              "description": "Data model for the complex type Money.",
              "properties": {
                "currency": {
                  "title": "Currency",
                  "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 3,
                  "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GGP",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "IMP",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JEP",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SPL",
                    "SRD",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TVD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPF",
                    "XTS",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWD"
                  ]
                },
                "amount": {
                  "title": "Amount",
                  "type": "string",
                  "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                  "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                  "example": "123.45"
                }
              },
              "required": [
                "currency",
                "amount"
              ]
            },
            "payeeFspCommission": {
              "title": "Money",
              "type": "object",
              "description": "Data model for the complex type Money.",
              "properties": {
                "currency": {
                  "title": "Currency",
                  "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 3,
                  "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GGP",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "IMP",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JEP",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SPL",
                    "SRD",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TVD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPF",
                    "XTS",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWD"
                  ]
                },
                "amount": {
                  "title": "Amount",
                  "type": "string",
                  "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                  "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                  "example": "123.45"
                }
              },
              "required": [
                "currency",
                "amount"
              ]
            },
            "ilpPacket": {
              "title": "IlpPacket",
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]+[=]{0,2}$",
              "minLength": 1,
              "maxLength": 32768,
              "description": "Information for recipient (transport layer information).",
              "example": "AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"
            },
            "condition": {
              "title": "IlpCondition",
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]{43}$",
              "maxLength": 48,
              "description": "Condition that must be attached to the transfer by the Payer."
            },
            "errorInformation": {
              "title": "ErrorInformation",
              "type": "object",
              "description": "Data model for the complex type ErrorInformation.",
              "properties": {
                "errorCode": {
                  "title": "ErrorCode",
                  "type": "string",
                  "pattern": "^[1-9]\\d{3}$",
                  "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                  "example": "5100"
                },
                "errorDescription": {
                  "title": "ErrorDescription",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Error description string."
                },
                "extensionList": {
                  "title": "ExtensionList",
                  "type": "object",
                  "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                  "properties": {
                    "extension": {
                      "type": "array",
                      "items": {
                        "title": "Extension",
                        "type": "object",
                        "description": "Data model for the complex type Extension.",
                        "properties": {
                          "key": {
                            "title": "ExtensionKey",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32,
                            "description": "Extension key."
                          },
                          "value": {
                            "title": "ExtensionValue",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128,
                            "description": "Extension value."
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "minItems": 1,
                      "maxItems": 16,
                      "description": "Number of Extension elements."
                    }
                  },
                  "required": [
                    "extension"
                  ]
                }
              },
              "required": [
                "errorCode",
                "errorDescription"
              ]
            },
            "extensionList": {
              "title": "ExtensionList",
              "type": "object",
              "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
              "properties": {
                "extension": {
                  "type": "array",
                  "items": {
                    "title": "Extension",
                    "type": "object",
                    "description": "Data model for the complex type Extension.",
                    "properties": {
                      "key": {
                        "title": "ExtensionKey",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Extension key."
                      },
                      "value": {
                        "title": "ExtensionValue",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128,
                        "description": "Extension value."
                      }
                    },
                    "required": [
                      "key",
                      "value"
                    ]
                  },
                  "minItems": 1,
                  "maxItems": 16,
                  "description": "Number of Extension elements."
                }
              },
              "required": [
                "extension"
              ]
            }
          },
          "required": [
            "quoteId"
          ]
        },
        "description": "Fees for each individual transaction, if any of them are charged per transaction."
      },
      "expiration": {
        "title": "DateTime",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
        "example": "2016-05-24T08:38:08.699-04:00"
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "expiration"
    ]
  },
  "BulkQuotesPostRequest": {
    "title": "BulkQuotesPostRequest",
    "type": "object",
    "description": "The object sent in the POST /bulkQuotes request.",
    "properties": {
      "bulkQuoteId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "payer": {
        "title": "Party",
        "type": "object",
        "description": "Data model for the complex type Party.",
        "properties": {
          "partyIdInfo": {
            "title": "PartyIdInfo",
            "type": "object",
            "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
            "properties": {
              "partyIdType": {
                "title": "PartyIdType",
                "type": "string",
                "enum": [
                  "MSISDN",
                  "EMAIL",
                  "PERSONAL_ID",
                  "BUSINESS",
                  "DEVICE",
                  "ACCOUNT_ID",
                  "IBAN",
                  "ALIAS"
                ],
                "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
              },
              "partyIdentifier": {
                "title": "PartyIdentifier",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Identifier of the Party.",
                "example": "16135551212"
              },
              "partySubIdOrType": {
                "title": "PartySubIdOrType",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
              },
              "fspId": {
                "title": "FspId",
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "FSP identifier."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "partyIdType",
              "partyIdentifier"
            ]
          },
          "merchantClassificationCode": {
            "title": "MerchantClassificationCode",
            "type": "string",
            "pattern": "^[\\d]{1,4}$",
            "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
          },
          "name": {
            "title": "PartyName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Name of the Party. Could be a real name or a nickname."
          },
          "personalInfo": {
            "title": "PartyPersonalInfo",
            "type": "object",
            "description": "Data model for the complex type PartyPersonalInfo.",
            "properties": {
              "complexName": {
                "title": "PartyComplexName",
                "type": "object",
                "description": "Data model for the complex type PartyComplexName.",
                "properties": {
                  "firstName": {
                    "title": "FirstName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "First name of the Party (Name Type).",
                    "example": "Henrik"
                  },
                  "middleName": {
                    "title": "MiddleName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Middle name of the Party (Name Type).",
                    "example": "Johannes"
                  },
                  "lastName": {
                    "title": "LastName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Last name of the Party (Name Type).",
                    "example": "Karlsson"
                  }
                }
              },
              "dateOfBirth": {
                "title": "DateofBirth (type Date)",
                "type": "string",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                "description": "Date of Birth of the Party.",
                "example": "1966-06-16"
              },
              "kycInformation": {
                "title": "KYCInformation",
                "type": "string",
                "minLength": 1,
                "maxLength": 2048,
                "description": "KYC information for the party in a form mandated by an individual scheme.",
                "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
              }
            }
          },
          "supportedCurrencies": {
            "type": "array",
            "description": "Currencies in which the party can receive funds.",
            "items": {
              "title": "Currency",
              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ]
            },
            "minItems": 0,
            "maxItems": 16
          }
        },
        "required": [
          "partyIdInfo"
        ]
      },
      "geoCode": {
        "title": "GeoCode",
        "type": "object",
        "description": "Data model for the complex type GeoCode. Indicates the geographic location from where the transaction was initiated.",
        "properties": {
          "latitude": {
            "title": "Latitude",
            "type": "string",
            "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "example": "+45.4215"
          },
          "longitude": {
            "title": "Longitude",
            "type": "string",
            "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "example": "+75.6972"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "expiration": {
        "title": "DateTime",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
        "example": "2016-05-24T08:38:08.699-04:00"
      },
      "individualQuotes": {
        "type": "array",
        "minItems": 1,
        "maxItems": 1000,
        "items": {
          "title": "IndividualQuote",
          "type": "object",
          "description": "Data model for the complex type IndividualQuote.",
          "properties": {
            "quoteId": {
              "title": "CorrelationId",
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
              "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
            },
            "transactionId": {
              "title": "CorrelationId",
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
              "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
            },
            "payee": {
              "title": "Party",
              "type": "object",
              "description": "Data model for the complex type Party.",
              "properties": {
                "partyIdInfo": {
                  "title": "PartyIdInfo",
                  "type": "object",
                  "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
                  "properties": {
                    "partyIdType": {
                      "title": "PartyIdType",
                      "type": "string",
                      "enum": [
                        "MSISDN",
                        "EMAIL",
                        "PERSONAL_ID",
                        "BUSINESS",
                        "DEVICE",
                        "ACCOUNT_ID",
                        "IBAN",
                        "ALIAS"
                      ],
                      "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
                    },
                    "partyIdentifier": {
                      "title": "PartyIdentifier",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Identifier of the Party.",
                      "example": "16135551212"
                    },
                    "partySubIdOrType": {
                      "title": "PartySubIdOrType",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
                    },
                    "fspId": {
                      "title": "FspId",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "FSP identifier."
                    },
                    "extensionList": {
                      "title": "ExtensionList",
                      "type": "object",
                      "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                      "properties": {
                        "extension": {
                          "type": "array",
                          "items": {
                            "title": "Extension",
                            "type": "object",
                            "description": "Data model for the complex type Extension.",
                            "properties": {
                              "key": {
                                "title": "ExtensionKey",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "description": "Extension key."
                              },
                              "value": {
                                "title": "ExtensionValue",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 128,
                                "description": "Extension value."
                              }
                            },
                            "required": [
                              "key",
                              "value"
                            ]
                          },
                          "minItems": 1,
                          "maxItems": 16,
                          "description": "Number of Extension elements."
                        }
                      },
                      "required": [
                        "extension"
                      ]
                    }
                  },
                  "required": [
                    "partyIdType",
                    "partyIdentifier"
                  ]
                },
                "merchantClassificationCode": {
                  "title": "MerchantClassificationCode",
                  "type": "string",
                  "pattern": "^[\\d]{1,4}$",
                  "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
                },
                "name": {
                  "title": "PartyName",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Name of the Party. Could be a real name or a nickname."
                },
                "personalInfo": {
                  "title": "PartyPersonalInfo",
                  "type": "object",
                  "description": "Data model for the complex type PartyPersonalInfo.",
                  "properties": {
                    "complexName": {
                      "title": "PartyComplexName",
                      "type": "object",
                      "description": "Data model for the complex type PartyComplexName.",
                      "properties": {
                        "firstName": {
                          "title": "FirstName",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                          "description": "First name of the Party (Name Type).",
                          "example": "Henrik"
                        },
                        "middleName": {
                          "title": "MiddleName",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                          "description": "Middle name of the Party (Name Type).",
                          "example": "Johannes"
                        },
                        "lastName": {
                          "title": "LastName",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                          "description": "Last name of the Party (Name Type).",
                          "example": "Karlsson"
                        }
                      }
                    },
                    "dateOfBirth": {
                      "title": "DateofBirth (type Date)",
                      "type": "string",
                      "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                      "description": "Date of Birth of the Party.",
                      "example": "1966-06-16"
                    },
                    "kycInformation": {
                      "title": "KYCInformation",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 2048,
                      "description": "KYC information for the party in a form mandated by an individual scheme.",
                      "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
                    }
                  }
                },
                "supportedCurrencies": {
                  "type": "array",
                  "description": "Currencies in which the party can receive funds.",
                  "items": {
                    "title": "Currency",
                    "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3,
                    "enum": [
                      "AED",
                      "AFN",
                      "ALL",
                      "AMD",
                      "ANG",
                      "AOA",
                      "ARS",
                      "AUD",
                      "AWG",
                      "AZN",
                      "BAM",
                      "BBD",
                      "BDT",
                      "BGN",
                      "BHD",
                      "BIF",
                      "BMD",
                      "BND",
                      "BOB",
                      "BRL",
                      "BSD",
                      "BTN",
                      "BWP",
                      "BYN",
                      "BZD",
                      "CAD",
                      "CDF",
                      "CHF",
                      "CLP",
                      "CNY",
                      "COP",
                      "CRC",
                      "CUC",
                      "CUP",
                      "CVE",
                      "CZK",
                      "DJF",
                      "DKK",
                      "DOP",
                      "DZD",
                      "EGP",
                      "ERN",
                      "ETB",
                      "EUR",
                      "FJD",
                      "FKP",
                      "GBP",
                      "GEL",
                      "GGP",
                      "GHS",
                      "GIP",
                      "GMD",
                      "GNF",
                      "GTQ",
                      "GYD",
                      "HKD",
                      "HNL",
                      "HRK",
                      "HTG",
                      "HUF",
                      "IDR",
                      "ILS",
                      "IMP",
                      "INR",
                      "IQD",
                      "IRR",
                      "ISK",
                      "JEP",
                      "JMD",
                      "JOD",
                      "JPY",
                      "KES",
                      "KGS",
                      "KHR",
                      "KMF",
                      "KPW",
                      "KRW",
                      "KWD",
                      "KYD",
                      "KZT",
                      "LAK",
                      "LBP",
                      "LKR",
                      "LRD",
                      "LSL",
                      "LYD",
                      "MAD",
                      "MDL",
                      "MGA",
                      "MKD",
                      "MMK",
                      "MNT",
                      "MOP",
                      "MRO",
                      "MUR",
                      "MVR",
                      "MWK",
                      "MXN",
                      "MYR",
                      "MZN",
                      "NAD",
                      "NGN",
                      "NIO",
                      "NOK",
                      "NPR",
                      "NZD",
                      "OMR",
                      "PAB",
                      "PEN",
                      "PGK",
                      "PHP",
                      "PKR",
                      "PLN",
                      "PYG",
                      "QAR",
                      "RON",
                      "RSD",
                      "RUB",
                      "RWF",
                      "SAR",
                      "SBD",
                      "SCR",
                      "SDG",
                      "SEK",
                      "SGD",
                      "SHP",
                      "SLL",
                      "SOS",
                      "SPL",
                      "SRD",
                      "STD",
                      "SVC",
                      "SYP",
                      "SZL",
                      "THB",
                      "TJS",
                      "TMT",
                      "TND",
                      "TOP",
                      "TRY",
                      "TTD",
                      "TVD",
                      "TWD",
                      "TZS",
                      "UAH",
                      "UGX",
                      "USD",
                      "UYU",
                      "UZS",
                      "VEF",
                      "VND",
                      "VUV",
                      "WST",
                      "XAF",
                      "XCD",
                      "XDR",
                      "XOF",
                      "XPF",
                      "XTS",
                      "XXX",
                      "YER",
                      "ZAR",
                      "ZMW",
                      "ZWD"
                    ]
                  },
                  "minItems": 0,
                  "maxItems": 16
                }
              },
              "required": [
                "partyIdInfo"
              ]
            },
            "amountType": {
              "title": "AmountType",
              "type": "string",
              "enum": [
                "SEND",
                "RECEIVE"
              ],
              "description": "Below are the allowed values for the enumeration AmountType.\n- SEND - Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees.\n- RECEIVE - Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive of any fees.",
              "example": "RECEIVE"
            },
            "amount": {
              "title": "Money",
              "type": "object",
              "description": "Data model for the complex type Money.",
              "properties": {
                "currency": {
                  "title": "Currency",
                  "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 3,
                  "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GGP",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "IMP",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JEP",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SPL",
                    "SRD",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TVD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPF",
                    "XTS",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWD"
                  ]
                },
                "amount": {
                  "title": "Amount",
                  "type": "string",
                  "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                  "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                  "example": "123.45"
                }
              },
              "required": [
                "currency",
                "amount"
              ]
            },
            "fees": {
              "title": "Money",
              "type": "object",
              "description": "Data model for the complex type Money.",
              "properties": {
                "currency": {
                  "title": "Currency",
                  "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 3,
                  "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GGP",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "IMP",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JEP",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SPL",
                    "SRD",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TVD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPF",
                    "XTS",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWD"
                  ]
                },
                "amount": {
                  "title": "Amount",
                  "type": "string",
                  "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                  "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                  "example": "123.45"
                }
              },
              "required": [
                "currency",
                "amount"
              ]
            },
            "transactionType": {
              "title": "TransactionType",
              "type": "object",
              "description": "Data model for the complex type TransactionType.",
              "properties": {
                "scenario": {
                  "title": "TransactionScenario",
                  "type": "string",
                  "enum": [
                    "DEPOSIT",
                    "WITHDRAWAL",
                    "TRANSFER",
                    "PAYMENT",
                    "REFUND"
                  ],
                  "description": "Below are the allowed values for the enumeration.\n- DEPOSIT - Used for performing a Cash-In (deposit) transaction. In a normal scenario, electronic funds are transferred from a Business account to a Consumer account, and physical cash is given from the Consumer to the Business User.\n- WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction. In a normal scenario, electronic funds are transferred from a Consumer’s account to a Business account, and physical cash is given from the Business User to the Consumer.\n- TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to Consumer) transaction.\n- PAYMENT - Usually used for performing a transaction from a Consumer to a Merchant or Organization, but could also be for a B2B (Business to Business) payment. The transaction could be online for a purchase in an Internet store, in a physical store where both the Consumer and Business User are present, a bill payment, a donation, and so on.\n- REFUND - Used for performing a refund of transaction.",
                  "example": "DEPOSIT"
                },
                "subScenario": {
                  "title": "TransactionSubScenario",
                  "type": "string",
                  "pattern": "^[A-Z_]{1,32}$",
                  "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
                  "example": "LOCALLY_DEFINED_SUBSCENARIO"
                },
                "initiator": {
                  "title": "TransactionInitiator",
                  "type": "string",
                  "enum": [
                    "PAYER",
                    "PAYEE"
                  ],
                  "description": "Below are the allowed values for the enumeration.\n- PAYER - Sender of funds is initiating the transaction. The account to send from is either owned by the Payer or is connected to the Payer in some way.\n- PAYEE - Recipient of the funds is initiating the transaction by sending a transaction request. The Payer must approve the transaction, either automatically by a pre-generated OTP or by pre-approval of the Payee, or by manually approving in his or her own Device.",
                  "example": "PAYEE"
                },
                "initiatorType": {
                  "title": "TransactionInitiatorType",
                  "type": "string",
                  "enum": [
                    "CONSUMER",
                    "AGENT",
                    "BUSINESS",
                    "DEVICE"
                  ],
                  "description": "Below are the allowed values for the enumeration.\n- CONSUMER - Consumer is the initiator of the transaction.\n- AGENT - Agent is the initiator of the transaction.\n- BUSINESS - Business is the initiator of the transaction.\n- DEVICE - Device is the initiator of the transaction.",
                  "example": "CONSUMER"
                },
                "refundInfo": {
                  "title": "Refund",
                  "type": "object",
                  "description": "Data model for the complex type Refund.",
                  "properties": {
                    "originalTransactionId": {
                      "title": "CorrelationId",
                      "type": "string",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
                      "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
                    },
                    "refundReason": {
                      "title": "RefundReason",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Reason for the refund.",
                      "example": "Free text indicating reason for the refund."
                    }
                  },
                  "required": [
                    "originalTransactionId"
                  ]
                },
                "balanceOfPayments": {
                  "title": "BalanceOfPayments",
                  "type": "string",
                  "pattern": "^[1-9]\\d{2}$",
                  "description": "(BopCode) The API data type [BopCode](https://www.imf.org/external/np/sta/bopcode/) is a JSON String of 3 characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed.",
                  "example": "123"
                }
              },
              "required": [
                "scenario",
                "initiator",
                "initiatorType"
              ]
            },
            "note": {
              "title": "Note",
              "type": "string",
              "minLength": 1,
              "maxLength": 128,
              "description": "Memo assigned to transaction.",
              "example": "Note sent to Payee."
            },
            "extensionList": {
              "title": "ExtensionList",
              "type": "object",
              "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
              "properties": {
                "extension": {
                  "type": "array",
                  "items": {
                    "title": "Extension",
                    "type": "object",
                    "description": "Data model for the complex type Extension.",
                    "properties": {
                      "key": {
                        "title": "ExtensionKey",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Extension key."
                      },
                      "value": {
                        "title": "ExtensionValue",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128,
                        "description": "Extension value."
                      }
                    },
                    "required": [
                      "key",
                      "value"
                    ]
                  },
                  "minItems": 1,
                  "maxItems": 16,
                  "description": "Number of Extension elements."
                }
              },
              "required": [
                "extension"
              ]
            }
          },
          "required": [
            "quoteId",
            "transactionId",
            "payee",
            "amountType",
            "amount",
            "transactionType"
          ]
        },
        "description": "List of quotes elements."
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "bulkQuoteId",
      "payer",
      "individualQuotes"
    ]
  },
  "BulkTransferState": {
    "title": "BulkTransactionState",
    "type": "string",
    "enum": [
      "RECEIVED",
      "PENDING",
      "ACCEPTED",
      "PROCESSING",
      "COMPLETED",
      "REJECTED"
    ],
    "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Payee FSP has received the bulk transfer from the Payer FSP.\n- PENDING - Payee FSP has validated the bulk transfer.\n- ACCEPTED - Payee FSP has accepted to process the bulk transfer.\n- PROCESSING - Payee FSP has started to transfer fund to the Payees.\n- COMPLETED - Payee FSP has completed transfer of funds to the Payees.\n- REJECTED - Payee FSP has rejected to process the bulk transfer.",
    "example": "RECEIVED"
  },
  "BulkTransfersIDPutResponse": {
    "title": "BulkTransfersIDPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /bulkTransfers/{ID} callback.",
    "properties": {
      "completedTimestamp": {
        "title": "DateTime",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
        "example": "2016-05-24T08:38:08.699-04:00"
      },
      "individualTransferResults": {
        "type": "array",
        "maxItems": 1000,
        "items": {
          "title": "IndividualTransferResult",
          "type": "object",
          "description": "Data model for the complex type IndividualTransferResult.",
          "properties": {
            "transferId": {
              "title": "CorrelationId",
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
              "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
            },
            "fulfilment": {
              "title": "IlpFulfilment",
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]{43}$",
              "maxLength": 48,
              "description": "Fulfilment that must be attached to the transfer by the Payee.",
              "example": "WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8"
            },
            "errorInformation": {
              "title": "ErrorInformation",
              "type": "object",
              "description": "Data model for the complex type ErrorInformation.",
              "properties": {
                "errorCode": {
                  "title": "ErrorCode",
                  "type": "string",
                  "pattern": "^[1-9]\\d{3}$",
                  "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                  "example": "5100"
                },
                "errorDescription": {
                  "title": "ErrorDescription",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Error description string."
                },
                "extensionList": {
                  "title": "ExtensionList",
                  "type": "object",
                  "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                  "properties": {
                    "extension": {
                      "type": "array",
                      "items": {
                        "title": "Extension",
                        "type": "object",
                        "description": "Data model for the complex type Extension.",
                        "properties": {
                          "key": {
                            "title": "ExtensionKey",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32,
                            "description": "Extension key."
                          },
                          "value": {
                            "title": "ExtensionValue",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128,
                            "description": "Extension value."
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "minItems": 1,
                      "maxItems": 16,
                      "description": "Number of Extension elements."
                    }
                  },
                  "required": [
                    "extension"
                  ]
                }
              },
              "required": [
                "errorCode",
                "errorDescription"
              ]
            },
            "extensionList": {
              "title": "ExtensionList",
              "type": "object",
              "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
              "properties": {
                "extension": {
                  "type": "array",
                  "items": {
                    "title": "Extension",
                    "type": "object",
                    "description": "Data model for the complex type Extension.",
                    "properties": {
                      "key": {
                        "title": "ExtensionKey",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Extension key."
                      },
                      "value": {
                        "title": "ExtensionValue",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128,
                        "description": "Extension value."
                      }
                    },
                    "required": [
                      "key",
                      "value"
                    ]
                  },
                  "minItems": 1,
                  "maxItems": 16,
                  "description": "Number of Extension elements."
                }
              },
              "required": [
                "extension"
              ]
            }
          },
          "required": [
            "transferId"
          ]
        },
        "description": "List of IndividualTransferResult elements."
      },
      "bulkTransferState": {
        "title": "BulkTransactionState",
        "type": "string",
        "enum": [
          "RECEIVED",
          "PENDING",
          "ACCEPTED",
          "PROCESSING",
          "COMPLETED",
          "REJECTED"
        ],
        "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Payee FSP has received the bulk transfer from the Payer FSP.\n- PENDING - Payee FSP has validated the bulk transfer.\n- ACCEPTED - Payee FSP has accepted to process the bulk transfer.\n- PROCESSING - Payee FSP has started to transfer fund to the Payees.\n- COMPLETED - Payee FSP has completed transfer of funds to the Payees.\n- REJECTED - Payee FSP has rejected to process the bulk transfer.",
        "example": "RECEIVED"
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "bulkTransferState"
    ]
  },
  "BulkTransfersPostRequest": {
    "title": "BulkTransfersPostRequest",
    "type": "object",
    "description": "The object sent in the POST /bulkTransfers request.",
    "properties": {
      "bulkTransferId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "bulkQuoteId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "payerFsp": {
        "title": "FspId",
        "type": "string",
        "minLength": 1,
        "maxLength": 32,
        "description": "FSP identifier."
      },
      "payeeFsp": {
        "title": "FspId",
        "type": "string",
        "minLength": 1,
        "maxLength": 32,
        "description": "FSP identifier."
      },
      "individualTransfers": {
        "type": "array",
        "minItems": 1,
        "maxItems": 1000,
        "items": {
          "title": "IndividualTransfer",
          "type": "object",
          "description": "Data model for the complex type IndividualTransfer.",
          "properties": {
            "transferId": {
              "title": "CorrelationId",
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
              "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
            },
            "transferAmount": {
              "title": "Money",
              "type": "object",
              "description": "Data model for the complex type Money.",
              "properties": {
                "currency": {
                  "title": "Currency",
                  "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 3,
                  "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GGP",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "IMP",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JEP",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SPL",
                    "SRD",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TVD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPF",
                    "XTS",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWD"
                  ]
                },
                "amount": {
                  "title": "Amount",
                  "type": "string",
                  "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                  "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                  "example": "123.45"
                }
              },
              "required": [
                "currency",
                "amount"
              ]
            },
            "ilpPacket": {
              "title": "IlpPacket",
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]+[=]{0,2}$",
              "minLength": 1,
              "maxLength": 32768,
              "description": "Information for recipient (transport layer information).",
              "example": "AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"
            },
            "condition": {
              "title": "IlpCondition",
              "type": "string",
              "pattern": "^[A-Za-z0-9-_]{43}$",
              "maxLength": 48,
              "description": "Condition that must be attached to the transfer by the Payer."
            },
            "extensionList": {
              "title": "ExtensionList",
              "type": "object",
              "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
              "properties": {
                "extension": {
                  "type": "array",
                  "items": {
                    "title": "Extension",
                    "type": "object",
                    "description": "Data model for the complex type Extension.",
                    "properties": {
                      "key": {
                        "title": "ExtensionKey",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Extension key."
                      },
                      "value": {
                        "title": "ExtensionValue",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128,
                        "description": "Extension value."
                      }
                    },
                    "required": [
                      "key",
                      "value"
                    ]
                  },
                  "minItems": 1,
                  "maxItems": 16,
                  "description": "Number of Extension elements."
                }
              },
              "required": [
                "extension"
              ]
            }
          },
          "required": [
            "transferId",
            "transferAmount",
            "ilpPacket",
            "condition"
          ]
        },
        "description": "List of IndividualTransfer elements."
      },
      "expiration": {
        "title": "DateTime",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
        "example": "2016-05-24T08:38:08.699-04:00"
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "bulkTransferId",
      "bulkQuoteId",
      "payerFsp",
      "payeeFsp",
      "individualTransfers",
      "expiration"
    ]
  },
  "Code": {
    "title": "Code",
    "type": "string",
    "pattern": "^[0-9a-zA-Z]{4,32}$",
    "description": "Any code/token returned by the Payee FSP (TokenCode Type).",
    "example": "Test-Code"
  },
  "CorrelationId": {
    "title": "CorrelationId",
    "type": "string",
    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
    "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
    "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
  },
  "Currency": {
    "title": "Currency",
    "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
    "type": "string",
    "minLength": 3,
    "maxLength": 3,
    "enum": [
      "AED",
      "AFN",
      "ALL",
      "AMD",
      "ANG",
      "AOA",
      "ARS",
      "AUD",
      "AWG",
      "AZN",
      "BAM",
      "BBD",
      "BDT",
      "BGN",
      "BHD",
      "BIF",
      "BMD",
      "BND",
      "BOB",
      "BRL",
      "BSD",
      "BTN",
      "BWP",
      "BYN",
      "BZD",
      "CAD",
      "CDF",
      "CHF",
      "CLP",
      "CNY",
      "COP",
      "CRC",
      "CUC",
      "CUP",
      "CVE",
      "CZK",
      "DJF",
      "DKK",
      "DOP",
      "DZD",
      "EGP",
      "ERN",
      "ETB",
      "EUR",
      "FJD",
      "FKP",
      "GBP",
      "GEL",
      "GGP",
      "GHS",
      "GIP",
      "GMD",
      "GNF",
      "GTQ",
      "GYD",
      "HKD",
      "HNL",
      "HRK",
      "HTG",
      "HUF",
      "IDR",
      "ILS",
      "IMP",
      "INR",
      "IQD",
      "IRR",
      "ISK",
      "JEP",
      "JMD",
      "JOD",
      "JPY",
      "KES",
      "KGS",
      "KHR",
      "KMF",
      "KPW",
      "KRW",
      "KWD",
      "KYD",
      "KZT",
      "LAK",
      "LBP",
      "LKR",
      "LRD",
      "LSL",
      "LYD",
      "MAD",
      "MDL",
      "MGA",
      "MKD",
      "MMK",
      "MNT",
      "MOP",
      "MRO",
      "MUR",
      "MVR",
      "MWK",
      "MXN",
      "MYR",
      "MZN",
      "NAD",
      "NGN",
      "NIO",
      "NOK",
      "NPR",
      "NZD",
      "OMR",
      "PAB",
      "PEN",
      "PGK",
      "PHP",
      "PKR",
      "PLN",
      "PYG",
      "QAR",
      "RON",
      "RSD",
      "RUB",
      "RWF",
      "SAR",
      "SBD",
      "SCR",
      "SDG",
      "SEK",
      "SGD",
      "SHP",
      "SLL",
      "SOS",
      "SPL",
      "SRD",
      "STD",
      "SVC",
      "SYP",
      "SZL",
      "THB",
      "TJS",
      "TMT",
      "TND",
      "TOP",
      "TRY",
      "TTD",
      "TVD",
      "TWD",
      "TZS",
      "UAH",
      "UGX",
      "USD",
      "UYU",
      "UZS",
      "VEF",
      "VND",
      "VUV",
      "WST",
      "XAF",
      "XCD",
      "XDR",
      "XOF",
      "XPF",
      "XTS",
      "XXX",
      "YER",
      "ZAR",
      "ZMW",
      "ZWD"
    ]
  },
  "CurrencyConverter": {
    "title": "CurrencyConverter",
    "type": "string",
    "enum": [
      "PAYER",
      "PAYEE"
    ],
    "description": "Below are the allowed values for the enumeration CurrencyConverter. - PAYER - Currency conversion should be performed by the payer. - PAYEE - Currency conversion should be performed by the payee."
  },
  "Date": {
    "title": "Date",
    "type": "string",
    "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
    "description": "The API data type Date is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. This format, as specified in ISO 8601, contains a date only. A more readable version of the format is yyyy-MM-dd. Examples are \"1982-05-23\", \"1987-08-05”."
  },
  "DateOfBirth": {
    "title": "DateofBirth (type Date)",
    "type": "string",
    "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
    "description": "Date of Birth of the Party.",
    "example": "1966-06-16"
  },
  "DateTime": {
    "title": "DateTime",
    "type": "string",
    "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
    "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
    "example": "2016-05-24T08:38:08.699-04:00"
  },
  "ErrorCode": {
    "title": "ErrorCode",
    "type": "string",
    "pattern": "^[1-9]\\d{3}$",
    "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
    "example": "5100"
  },
  "ErrorDescription": {
    "title": "ErrorDescription",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "Error description string."
  },
  "ErrorInformation": {
    "title": "ErrorInformation",
    "type": "object",
    "description": "Data model for the complex type ErrorInformation.",
    "properties": {
      "errorCode": {
        "title": "ErrorCode",
        "type": "string",
        "pattern": "^[1-9]\\d{3}$",
        "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
        "example": "5100"
      },
      "errorDescription": {
        "title": "ErrorDescription",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Error description string."
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "errorCode",
      "errorDescription"
    ]
  },
  "ErrorInformationObject": {
    "title": "ErrorInformationObject",
    "type": "object",
    "description": "Data model for the complex type object that contains ErrorInformation.",
    "properties": {
      "errorInformation": {
        "title": "ErrorInformation",
        "type": "object",
        "description": "Data model for the complex type ErrorInformation.",
        "properties": {
          "errorCode": {
            "title": "ErrorCode",
            "type": "string",
            "pattern": "^[1-9]\\d{3}$",
            "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
            "example": "5100"
          },
          "errorDescription": {
            "title": "ErrorDescription",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Error description string."
          },
          "extensionList": {
            "title": "ExtensionList",
            "type": "object",
            "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
            "properties": {
              "extension": {
                "type": "array",
                "items": {
                  "title": "Extension",
                  "type": "object",
                  "description": "Data model for the complex type Extension.",
                  "properties": {
                    "key": {
                      "title": "ExtensionKey",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "Extension key."
                    },
                    "value": {
                      "title": "ExtensionValue",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Extension value."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 16,
                "description": "Number of Extension elements."
              }
            },
            "required": [
              "extension"
            ]
          }
        },
        "required": [
          "errorCode",
          "errorDescription"
        ]
      }
    },
    "required": [
      "errorInformation"
    ]
  },
  "ErrorInformationResponse": {
    "title": "ErrorInformationResponse",
    "type": "object",
    "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.",
    "properties": {
      "errorInformation": {
        "title": "ErrorInformation",
        "type": "object",
        "description": "Data model for the complex type ErrorInformation.",
        "properties": {
          "errorCode": {
            "title": "ErrorCode",
            "type": "string",
            "pattern": "^[1-9]\\d{3}$",
            "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
            "example": "5100"
          },
          "errorDescription": {
            "title": "ErrorDescription",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Error description string."
          },
          "extensionList": {
            "title": "ExtensionList",
            "type": "object",
            "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
            "properties": {
              "extension": {
                "type": "array",
                "items": {
                  "title": "Extension",
                  "type": "object",
                  "description": "Data model for the complex type Extension.",
                  "properties": {
                    "key": {
                      "title": "ExtensionKey",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "Extension key."
                    },
                    "value": {
                      "title": "ExtensionValue",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Extension value."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 16,
                "description": "Number of Extension elements."
              }
            },
            "required": [
              "extension"
            ]
          }
        },
        "required": [
          "errorCode",
          "errorDescription"
        ]
      }
    }
  },
  "Extension": {
    "title": "Extension",
    "type": "object",
    "description": "Data model for the complex type Extension.",
    "properties": {
      "key": {
        "title": "ExtensionKey",
        "type": "string",
        "minLength": 1,
        "maxLength": 32,
        "description": "Extension key."
      },
      "value": {
        "title": "ExtensionValue",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Extension value."
      }
    },
    "required": [
      "key",
      "value"
    ]
  },
  "ExtensionKey": {
    "title": "ExtensionKey",
    "type": "string",
    "minLength": 1,
    "maxLength": 32,
    "description": "Extension key."
  },
  "ExtensionList": {
    "title": "ExtensionList",
    "type": "object",
    "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
    "properties": {
      "extension": {
        "type": "array",
        "items": {
          "title": "Extension",
          "type": "object",
          "description": "Data model for the complex type Extension.",
          "properties": {
            "key": {
              "title": "ExtensionKey",
              "type": "string",
              "minLength": 1,
              "maxLength": 32,
              "description": "Extension key."
            },
            "value": {
              "title": "ExtensionValue",
              "type": "string",
              "minLength": 1,
              "maxLength": 128,
              "description": "Extension value."
            }
          },
          "required": [
            "key",
            "value"
          ]
        },
        "minItems": 1,
        "maxItems": 16,
        "description": "Number of Extension elements."
      }
    },
    "required": [
      "extension"
    ]
  },
  "ExtensionValue": {
    "title": "ExtensionValue",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "Extension value."
  },
  "FirstName": {
    "title": "FirstName",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
    "description": "First name of the Party (Name Type).",
    "example": "Henrik"
  },
  "FspId": {
    "title": "FspId",
    "type": "string",
    "minLength": 1,
    "maxLength": 32,
    "description": "FSP identifier."
  },
  "FxCharge": {
    "title": "FxCharge",
    "type": "object",
    "description": "An FXP will be able to specify a charge which it proposes to levy on the currency conversion operation using a FxCharge object.",
    "properties": {
      "chargeType": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32,
        "description": "A description of the charge which is being levied."
      },
      "sourceAmount": {
        "allOf": [
          {
            "title": "Money",
            "type": "object",
            "description": "Data model for the complex type Money.",
            "properties": {
              "currency": {
                "title": "Currency",
                "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STD",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "XTS",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWD"
                ]
              },
              "amount": {
                "title": "Amount",
                "type": "string",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                "example": "123.45"
              }
            },
            "required": [
              "currency",
              "amount"
            ]
          },
          {
            "description": "The amount of the charge which is being levied, expressed in the source currency."
          }
        ]
      },
      "targetAmount": {
        "allOf": [
          {
            "title": "Money",
            "type": "object",
            "description": "Data model for the complex type Money.",
            "properties": {
              "currency": {
                "title": "Currency",
                "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STD",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "XTS",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWD"
                ]
              },
              "amount": {
                "title": "Amount",
                "type": "string",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                "example": "123.45"
              }
            },
            "required": [
              "currency",
              "amount"
            ]
          },
          {
            "description": "The amount of the charge which is being levied, expressed in the target currency."
          }
        ]
      }
    },
    "required": [
      "chargeType"
    ]
  },
  "FxConversion": {
    "title": "FxConversion",
    "type": "object",
    "description": "A DFSP will be able to request a currency conversion, and an FX provider will be able to describe its involvement in a proposed transfer, using a FxConversion object.",
    "properties": {
      "conversionId": {
        "allOf": [
          {
            "title": "CorrelationId",
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
            "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          {
            "description": "An end-to-end identifier for the conversion request."
          }
        ]
      },
      "determiningTransferId": {
        "allOf": [
          {
            "title": "CorrelationId",
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
            "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          {
            "description": "The transaction ID of the transfer on whose success this currency conversion depends."
          }
        ]
      },
      "initiatingFsp": {
        "allOf": [
          {
            "title": "FspId",
            "type": "string",
            "minLength": 1,
            "maxLength": 32,
            "description": "FSP identifier."
          },
          {
            "description": "The id of the participant who is requesting a currency conversion."
          }
        ]
      },
      "counterPartyFsp": {
        "allOf": [
          {
            "title": "FspId",
            "type": "string",
            "minLength": 1,
            "maxLength": 32,
            "description": "FSP identifier."
          },
          {
            "description": "The ID of the FXP performing the conversion."
          }
        ]
      },
      "amountType": {
        "allOf": [
          {
            "title": "AmountType",
            "type": "string",
            "enum": [
              "SEND",
              "RECEIVE"
            ],
            "description": "Below are the allowed values for the enumeration AmountType.\n- SEND - Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees.\n- RECEIVE - Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive of any fees.",
            "example": "RECEIVE"
          },
          {
            "description": "This is the AmountType for the base transaction - If SEND - then any charges levied by the FXP as part of the transaction will be deducted by the FXP from the amount shown for the target party in the conversion. If RECEIVE - then any charges levied by the FXP as part of the transaction will be added by the FXP to the amount shown for the source party in the conversion."
          }
        ]
      },
      "sourceAmount": {
        "allOf": [
          {
            "title": "FxMoney",
            "type": "object",
            "description": "Data model for the complex type FxMoney; This is based on the type Money but allows the amount to be optional to support FX quotations.",
            "properties": {
              "currency": {
                "title": "Currency",
                "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STD",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "XTS",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWD"
                ]
              },
              "amount": {
                "title": "Amount",
                "type": "string",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                "example": "123.45"
              }
            },
            "required": [
              "currency"
            ]
          },
          {
            "description": "The amount to be converted, expressed in the source currency."
          }
        ]
      },
      "targetAmount": {
        "allOf": [
          {
            "title": "FxMoney",
            "type": "object",
            "description": "Data model for the complex type FxMoney; This is based on the type Money but allows the amount to be optional to support FX quotations.",
            "properties": {
              "currency": {
                "title": "Currency",
                "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STD",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "XTS",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWD"
                ]
              },
              "amount": {
                "title": "Amount",
                "type": "string",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                "example": "123.45"
              }
            },
            "required": [
              "currency"
            ]
          },
          {
            "description": "The converted amount, expressed in the target currency."
          }
        ]
      },
      "expiration": {
        "allOf": [
          {
            "title": "DateTime",
            "type": "string",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
            "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
            "example": "2016-05-24T08:38:08.699-04:00"
          },
          {
            "description": "The end of the period for which the currency conversion is required to remain valid."
          }
        ]
      },
      "charges": {
        "type": "array",
        "description": "One or more charges which the FXP intends to levy as part of the currency conversion, or which the payee DFSP intends to add to the amount transferred.",
        "items": {
          "title": "FxCharge",
          "type": "object",
          "description": "An FXP will be able to specify a charge which it proposes to levy on the currency conversion operation using a FxCharge object.",
          "properties": {
            "chargeType": {
              "type": "string",
              "minLength": 1,
              "maxLength": 32,
              "description": "A description of the charge which is being levied."
            },
            "sourceAmount": {
              "allOf": [
                {
                  "title": "Money",
                  "type": "object",
                  "description": "Data model for the complex type Money.",
                  "properties": {
                    "currency": {
                      "title": "Currency",
                      "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "XTS",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWD"
                      ]
                    },
                    "amount": {
                      "title": "Amount",
                      "type": "string",
                      "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                      "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                      "example": "123.45"
                    }
                  },
                  "required": [
                    "currency",
                    "amount"
                  ]
                },
                {
                  "description": "The amount of the charge which is being levied, expressed in the source currency."
                }
              ]
            },
            "targetAmount": {
              "allOf": [
                {
                  "title": "Money",
                  "type": "object",
                  "description": "Data model for the complex type Money.",
                  "properties": {
                    "currency": {
                      "title": "Currency",
                      "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "XTS",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWD"
                      ]
                    },
                    "amount": {
                      "title": "Amount",
                      "type": "string",
                      "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                      "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                      "example": "123.45"
                    }
                  },
                  "required": [
                    "currency",
                    "amount"
                  ]
                },
                {
                  "description": "The amount of the charge which is being levied, expressed in the target currency."
                }
              ]
            }
          },
          "required": [
            "chargeType"
          ]
        },
        "minItems": 0,
        "maxItems": 16
      },
      "extensionList": {
        "allOf": [
          {
            "title": "ExtensionList",
            "type": "object",
            "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
            "properties": {
              "extension": {
                "type": "array",
                "items": {
                  "title": "Extension",
                  "type": "object",
                  "description": "Data model for the complex type Extension.",
                  "properties": {
                    "key": {
                      "title": "ExtensionKey",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "Extension key."
                    },
                    "value": {
                      "title": "ExtensionValue",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Extension value."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 16,
                "description": "Number of Extension elements."
              }
            },
            "required": [
              "extension"
            ]
          },
          {
            "description": "The extension list for the currency conversion request."
          }
        ]
      }
    },
    "required": [
      "conversionId",
      "initiatingFsp",
      "counterPartyFsp",
      "amountType",
      "sourceAmount",
      "targetAmount",
      "expiration"
    ]
  },
  "FxMoney": {
    "title": "FxMoney",
    "type": "object",
    "description": "Data model for the complex type FxMoney; This is based on the type Money but allows the amount to be optional to support FX quotations.",
    "properties": {
      "currency": {
        "title": "Currency",
        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
        "type": "string",
        "minLength": 3,
        "maxLength": 3,
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ]
      },
      "amount": {
        "title": "Amount",
        "type": "string",
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
        "example": "123.45"
      }
    },
    "required": [
      "currency"
    ]
  },
  "FxQuotesIDPutResponse": {
    "title": "FxQuotesIDPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /fxQuotes/{ID} callback.",
    "properties": {
      "condition": {
        "allOf": [
          {
            "title": "IlpCondition",
            "type": "string",
            "pattern": "^[A-Za-z0-9-_]{43}$",
            "maxLength": 48,
            "description": "Condition that must be attached to the transfer by the Payer."
          },
          {
            "description": "The ILP condition for the conversion."
          }
        ]
      },
      "conversionTerms": {
        "allOf": [
          {
            "title": "FxConversion",
            "type": "object",
            "description": "A DFSP will be able to request a currency conversion, and an FX provider will be able to describe its involvement in a proposed transfer, using a FxConversion object.",
            "properties": {
              "conversionId": {
                "allOf": [
                  {
                    "title": "CorrelationId",
                    "type": "string",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
                    "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
                  },
                  {
                    "description": "An end-to-end identifier for the conversion request."
                  }
                ]
              },
              "determiningTransferId": {
                "allOf": [
                  {
                    "title": "CorrelationId",
                    "type": "string",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
                    "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
                  },
                  {
                    "description": "The transaction ID of the transfer on whose success this currency conversion depends."
                  }
                ]
              },
              "initiatingFsp": {
                "allOf": [
                  {
                    "title": "FspId",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "description": "FSP identifier."
                  },
                  {
                    "description": "The id of the participant who is requesting a currency conversion."
                  }
                ]
              },
              "counterPartyFsp": {
                "allOf": [
                  {
                    "title": "FspId",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "description": "FSP identifier."
                  },
                  {
                    "description": "The ID of the FXP performing the conversion."
                  }
                ]
              },
              "amountType": {
                "allOf": [
                  {
                    "title": "AmountType",
                    "type": "string",
                    "enum": [
                      "SEND",
                      "RECEIVE"
                    ],
                    "description": "Below are the allowed values for the enumeration AmountType.\n- SEND - Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees.\n- RECEIVE - Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive of any fees.",
                    "example": "RECEIVE"
                  },
                  {
                    "description": "This is the AmountType for the base transaction - If SEND - then any charges levied by the FXP as part of the transaction will be deducted by the FXP from the amount shown for the target party in the conversion. If RECEIVE - then any charges levied by the FXP as part of the transaction will be added by the FXP to the amount shown for the source party in the conversion."
                  }
                ]
              },
              "sourceAmount": {
                "allOf": [
                  {
                    "title": "FxMoney",
                    "type": "object",
                    "description": "Data model for the complex type FxMoney; This is based on the type Money but allows the amount to be optional to support FX quotations.",
                    "properties": {
                      "currency": {
                        "title": "Currency",
                        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3,
                        "enum": [
                          "AED",
                          "AFN",
                          "ALL",
                          "AMD",
                          "ANG",
                          "AOA",
                          "ARS",
                          "AUD",
                          "AWG",
                          "AZN",
                          "BAM",
                          "BBD",
                          "BDT",
                          "BGN",
                          "BHD",
                          "BIF",
                          "BMD",
                          "BND",
                          "BOB",
                          "BRL",
                          "BSD",
                          "BTN",
                          "BWP",
                          "BYN",
                          "BZD",
                          "CAD",
                          "CDF",
                          "CHF",
                          "CLP",
                          "CNY",
                          "COP",
                          "CRC",
                          "CUC",
                          "CUP",
                          "CVE",
                          "CZK",
                          "DJF",
                          "DKK",
                          "DOP",
                          "DZD",
                          "EGP",
                          "ERN",
                          "ETB",
                          "EUR",
                          "FJD",
                          "FKP",
                          "GBP",
                          "GEL",
                          "GGP",
                          "GHS",
                          "GIP",
                          "GMD",
                          "GNF",
                          "GTQ",
                          "GYD",
                          "HKD",
                          "HNL",
                          "HRK",
                          "HTG",
                          "HUF",
                          "IDR",
                          "ILS",
                          "IMP",
                          "INR",
                          "IQD",
                          "IRR",
                          "ISK",
                          "JEP",
                          "JMD",
                          "JOD",
                          "JPY",
                          "KES",
                          "KGS",
                          "KHR",
                          "KMF",
                          "KPW",
                          "KRW",
                          "KWD",
                          "KYD",
                          "KZT",
                          "LAK",
                          "LBP",
                          "LKR",
                          "LRD",
                          "LSL",
                          "LYD",
                          "MAD",
                          "MDL",
                          "MGA",
                          "MKD",
                          "MMK",
                          "MNT",
                          "MOP",
                          "MRO",
                          "MUR",
                          "MVR",
                          "MWK",
                          "MXN",
                          "MYR",
                          "MZN",
                          "NAD",
                          "NGN",
                          "NIO",
                          "NOK",
                          "NPR",
                          "NZD",
                          "OMR",
                          "PAB",
                          "PEN",
                          "PGK",
                          "PHP",
                          "PKR",
                          "PLN",
                          "PYG",
                          "QAR",
                          "RON",
                          "RSD",
                          "RUB",
                          "RWF",
                          "SAR",
                          "SBD",
                          "SCR",
                          "SDG",
                          "SEK",
                          "SGD",
                          "SHP",
                          "SLL",
                          "SOS",
                          "SPL",
                          "SRD",
                          "STD",
                          "SVC",
                          "SYP",
                          "SZL",
                          "THB",
                          "TJS",
                          "TMT",
                          "TND",
                          "TOP",
                          "TRY",
                          "TTD",
                          "TVD",
                          "TWD",
                          "TZS",
                          "UAH",
                          "UGX",
                          "USD",
                          "UYU",
                          "UZS",
                          "VEF",
                          "VND",
                          "VUV",
                          "WST",
                          "XAF",
                          "XCD",
                          "XDR",
                          "XOF",
                          "XPF",
                          "XTS",
                          "XXX",
                          "YER",
                          "ZAR",
                          "ZMW",
                          "ZWD"
                        ]
                      },
                      "amount": {
                        "title": "Amount",
                        "type": "string",
                        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                        "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                        "example": "123.45"
                      }
                    },
                    "required": [
                      "currency"
                    ]
                  },
                  {
                    "description": "The amount to be converted, expressed in the source currency."
                  }
                ]
              },
              "targetAmount": {
                "allOf": [
                  {
                    "title": "FxMoney",
                    "type": "object",
                    "description": "Data model for the complex type FxMoney; This is based on the type Money but allows the amount to be optional to support FX quotations.",
                    "properties": {
                      "currency": {
                        "title": "Currency",
                        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3,
                        "enum": [
                          "AED",
                          "AFN",
                          "ALL",
                          "AMD",
                          "ANG",
                          "AOA",
                          "ARS",
                          "AUD",
                          "AWG",
                          "AZN",
                          "BAM",
                          "BBD",
                          "BDT",
                          "BGN",
                          "BHD",
                          "BIF",
                          "BMD",
                          "BND",
                          "BOB",
                          "BRL",
                          "BSD",
                          "BTN",
                          "BWP",
                          "BYN",
                          "BZD",
                          "CAD",
                          "CDF",
                          "CHF",
                          "CLP",
                          "CNY",
                          "COP",
                          "CRC",
                          "CUC",
                          "CUP",
                          "CVE",
                          "CZK",
                          "DJF",
                          "DKK",
                          "DOP",
                          "DZD",
                          "EGP",
                          "ERN",
                          "ETB",
                          "EUR",
                          "FJD",
                          "FKP",
                          "GBP",
                          "GEL",
                          "GGP",
                          "GHS",
                          "GIP",
                          "GMD",
                          "GNF",
                          "GTQ",
                          "GYD",
                          "HKD",
                          "HNL",
                          "HRK",
                          "HTG",
                          "HUF",
                          "IDR",
                          "ILS",
                          "IMP",
                          "INR",
                          "IQD",
                          "IRR",
                          "ISK",
                          "JEP",
                          "JMD",
                          "JOD",
                          "JPY",
                          "KES",
                          "KGS",
                          "KHR",
                          "KMF",
                          "KPW",
                          "KRW",
                          "KWD",
                          "KYD",
                          "KZT",
                          "LAK",
                          "LBP",
                          "LKR",
                          "LRD",
                          "LSL",
                          "LYD",
                          "MAD",
                          "MDL",
                          "MGA",
                          "MKD",
                          "MMK",
                          "MNT",
                          "MOP",
                          "MRO",
                          "MUR",
                          "MVR",
                          "MWK",
                          "MXN",
                          "MYR",
                          "MZN",
                          "NAD",
                          "NGN",
                          "NIO",
                          "NOK",
                          "NPR",
                          "NZD",
                          "OMR",
                          "PAB",
                          "PEN",
                          "PGK",
                          "PHP",
                          "PKR",
                          "PLN",
                          "PYG",
                          "QAR",
                          "RON",
                          "RSD",
                          "RUB",
                          "RWF",
                          "SAR",
                          "SBD",
                          "SCR",
                          "SDG",
                          "SEK",
                          "SGD",
                          "SHP",
                          "SLL",
                          "SOS",
                          "SPL",
                          "SRD",
                          "STD",
                          "SVC",
                          "SYP",
                          "SZL",
                          "THB",
                          "TJS",
                          "TMT",
                          "TND",
                          "TOP",
                          "TRY",
                          "TTD",
                          "TVD",
                          "TWD",
                          "TZS",
                          "UAH",
                          "UGX",
                          "USD",
                          "UYU",
                          "UZS",
                          "VEF",
                          "VND",
                          "VUV",
                          "WST",
                          "XAF",
                          "XCD",
                          "XDR",
                          "XOF",
                          "XPF",
                          "XTS",
                          "XXX",
                          "YER",
                          "ZAR",
                          "ZMW",
                          "ZWD"
                        ]
                      },
                      "amount": {
                        "title": "Amount",
                        "type": "string",
                        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                        "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                        "example": "123.45"
                      }
                    },
                    "required": [
                      "currency"
                    ]
                  },
                  {
                    "description": "The converted amount, expressed in the target currency."
                  }
                ]
              },
              "expiration": {
                "allOf": [
                  {
                    "title": "DateTime",
                    "type": "string",
                    "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
                    "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
                    "example": "2016-05-24T08:38:08.699-04:00"
                  },
                  {
                    "description": "The end of the period for which the currency conversion is required to remain valid."
                  }
                ]
              },
              "charges": {
                "type": "array",
                "description": "One or more charges which the FXP intends to levy as part of the currency conversion, or which the payee DFSP intends to add to the amount transferred.",
                "items": {
                  "title": "FxCharge",
                  "type": "object",
                  "description": "An FXP will be able to specify a charge which it proposes to levy on the currency conversion operation using a FxCharge object.",
                  "properties": {
                    "chargeType": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "A description of the charge which is being levied."
                    },
                    "sourceAmount": {
                      "allOf": [
                        {
                          "title": "Money",
                          "type": "object",
                          "description": "Data model for the complex type Money.",
                          "properties": {
                            "currency": {
                              "title": "Currency",
                              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 3,
                              "enum": [
                                "AED",
                                "AFN",
                                "ALL",
                                "AMD",
                                "ANG",
                                "AOA",
                                "ARS",
                                "AUD",
                                "AWG",
                                "AZN",
                                "BAM",
                                "BBD",
                                "BDT",
                                "BGN",
                                "BHD",
                                "BIF",
                                "BMD",
                                "BND",
                                "BOB",
                                "BRL",
                                "BSD",
                                "BTN",
                                "BWP",
                                "BYN",
                                "BZD",
                                "CAD",
                                "CDF",
                                "CHF",
                                "CLP",
                                "CNY",
                                "COP",
                                "CRC",
                                "CUC",
                                "CUP",
                                "CVE",
                                "CZK",
                                "DJF",
                                "DKK",
                                "DOP",
                                "DZD",
                                "EGP",
                                "ERN",
                                "ETB",
                                "EUR",
                                "FJD",
                                "FKP",
                                "GBP",
                                "GEL",
                                "GGP",
                                "GHS",
                                "GIP",
                                "GMD",
                                "GNF",
                                "GTQ",
                                "GYD",
                                "HKD",
                                "HNL",
                                "HRK",
                                "HTG",
                                "HUF",
                                "IDR",
                                "ILS",
                                "IMP",
                                "INR",
                                "IQD",
                                "IRR",
                                "ISK",
                                "JEP",
                                "JMD",
                                "JOD",
                                "JPY",
                                "KES",
                                "KGS",
                                "KHR",
                                "KMF",
                                "KPW",
                                "KRW",
                                "KWD",
                                "KYD",
                                "KZT",
                                "LAK",
                                "LBP",
                                "LKR",
                                "LRD",
                                "LSL",
                                "LYD",
                                "MAD",
                                "MDL",
                                "MGA",
                                "MKD",
                                "MMK",
                                "MNT",
                                "MOP",
                                "MRO",
                                "MUR",
                                "MVR",
                                "MWK",
                                "MXN",
                                "MYR",
                                "MZN",
                                "NAD",
                                "NGN",
                                "NIO",
                                "NOK",
                                "NPR",
                                "NZD",
                                "OMR",
                                "PAB",
                                "PEN",
                                "PGK",
                                "PHP",
                                "PKR",
                                "PLN",
                                "PYG",
                                "QAR",
                                "RON",
                                "RSD",
                                "RUB",
                                "RWF",
                                "SAR",
                                "SBD",
                                "SCR",
                                "SDG",
                                "SEK",
                                "SGD",
                                "SHP",
                                "SLL",
                                "SOS",
                                "SPL",
                                "SRD",
                                "STD",
                                "SVC",
                                "SYP",
                                "SZL",
                                "THB",
                                "TJS",
                                "TMT",
                                "TND",
                                "TOP",
                                "TRY",
                                "TTD",
                                "TVD",
                                "TWD",
                                "TZS",
                                "UAH",
                                "UGX",
                                "USD",
                                "UYU",
                                "UZS",
                                "VEF",
                                "VND",
                                "VUV",
                                "WST",
                                "XAF",
                                "XCD",
                                "XDR",
                                "XOF",
                                "XPF",
                                "XTS",
                                "XXX",
                                "YER",
                                "ZAR",
                                "ZMW",
                                "ZWD"
                              ]
                            },
                            "amount": {
                              "title": "Amount",
                              "type": "string",
                              "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                              "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                              "example": "123.45"
                            }
                          },
                          "required": [
                            "currency",
                            "amount"
                          ]
                        },
                        {
                          "description": "The amount of the charge which is being levied, expressed in the source currency."
                        }
                      ]
                    },
                    "targetAmount": {
                      "allOf": [
                        {
                          "title": "Money",
                          "type": "object",
                          "description": "Data model for the complex type Money.",
                          "properties": {
                            "currency": {
                              "title": "Currency",
                              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 3,
                              "enum": [
                                "AED",
                                "AFN",
                                "ALL",
                                "AMD",
                                "ANG",
                                "AOA",
                                "ARS",
                                "AUD",
                                "AWG",
                                "AZN",
                                "BAM",
                                "BBD",
                                "BDT",
                                "BGN",
                                "BHD",
                                "BIF",
                                "BMD",
                                "BND",
                                "BOB",
                                "BRL",
                                "BSD",
                                "BTN",
                                "BWP",
                                "BYN",
                                "BZD",
                                "CAD",
                                "CDF",
                                "CHF",
                                "CLP",
                                "CNY",
                                "COP",
                                "CRC",
                                "CUC",
                                "CUP",
                                "CVE",
                                "CZK",
                                "DJF",
                                "DKK",
                                "DOP",
                                "DZD",
                                "EGP",
                                "ERN",
                                "ETB",
                                "EUR",
                                "FJD",
                                "FKP",
                                "GBP",
                                "GEL",
                                "GGP",
                                "GHS",
                                "GIP",
                                "GMD",
                                "GNF",
                                "GTQ",
                                "GYD",
                                "HKD",
                                "HNL",
                                "HRK",
                                "HTG",
                                "HUF",
                                "IDR",
                                "ILS",
                                "IMP",
                                "INR",
                                "IQD",
                                "IRR",
                                "ISK",
                                "JEP",
                                "JMD",
                                "JOD",
                                "JPY",
                                "KES",
                                "KGS",
                                "KHR",
                                "KMF",
                                "KPW",
                                "KRW",
                                "KWD",
                                "KYD",
                                "KZT",
                                "LAK",
                                "LBP",
                                "LKR",
                                "LRD",
                                "LSL",
                                "LYD",
                                "MAD",
                                "MDL",
                                "MGA",
                                "MKD",
                                "MMK",
                                "MNT",
                                "MOP",
                                "MRO",
                                "MUR",
                                "MVR",
                                "MWK",
                                "MXN",
                                "MYR",
                                "MZN",
                                "NAD",
                                "NGN",
                                "NIO",
                                "NOK",
                                "NPR",
                                "NZD",
                                "OMR",
                                "PAB",
                                "PEN",
                                "PGK",
                                "PHP",
                                "PKR",
                                "PLN",
                                "PYG",
                                "QAR",
                                "RON",
                                "RSD",
                                "RUB",
                                "RWF",
                                "SAR",
                                "SBD",
                                "SCR",
                                "SDG",
                                "SEK",
                                "SGD",
                                "SHP",
                                "SLL",
                                "SOS",
                                "SPL",
                                "SRD",
                                "STD",
                                "SVC",
                                "SYP",
                                "SZL",
                                "THB",
                                "TJS",
                                "TMT",
                                "TND",
                                "TOP",
                                "TRY",
                                "TTD",
                                "TVD",
                                "TWD",
                                "TZS",
                                "UAH",
                                "UGX",
                                "USD",
                                "UYU",
                                "UZS",
                                "VEF",
                                "VND",
                                "VUV",
                                "WST",
                                "XAF",
                                "XCD",
                                "XDR",
                                "XOF",
                                "XPF",
                                "XTS",
                                "XXX",
                                "YER",
                                "ZAR",
                                "ZMW",
                                "ZWD"
                              ]
                            },
                            "amount": {
                              "title": "Amount",
                              "type": "string",
                              "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                              "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                              "example": "123.45"
                            }
                          },
                          "required": [
                            "currency",
                            "amount"
                          ]
                        },
                        {
                          "description": "The amount of the charge which is being levied, expressed in the target currency."
                        }
                      ]
                    }
                  },
                  "required": [
                    "chargeType"
                  ]
                },
                "minItems": 0,
                "maxItems": 16
              },
              "extensionList": {
                "allOf": [
                  {
                    "title": "ExtensionList",
                    "type": "object",
                    "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                    "properties": {
                      "extension": {
                        "type": "array",
                        "items": {
                          "title": "Extension",
                          "type": "object",
                          "description": "Data model for the complex type Extension.",
                          "properties": {
                            "key": {
                              "title": "ExtensionKey",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 32,
                              "description": "Extension key."
                            },
                            "value": {
                              "title": "ExtensionValue",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 128,
                              "description": "Extension value."
                            }
                          },
                          "required": [
                            "key",
                            "value"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 16,
                        "description": "Number of Extension elements."
                      }
                    },
                    "required": [
                      "extension"
                    ]
                  },
                  {
                    "description": "The extension list for the currency conversion request."
                  }
                ]
              }
            },
            "required": [
              "conversionId",
              "initiatingFsp",
              "counterPartyFsp",
              "amountType",
              "sourceAmount",
              "targetAmount",
              "expiration"
            ]
          },
          {
            "description": "The terms under which the FXP will undertake the currency conversion proposed by the requester."
          }
        ]
      }
    },
    "required": [
      "conversionTerms"
    ]
  },
  "FxQuotesPostRequest": {
    "title": "FxQuotesPostRequest",
    "type": "object",
    "description": "The object sent in the POST /fxQuotes request.",
    "properties": {
      "conversionRequestId": {
        "allOf": [
          {
            "title": "CorrelationId",
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
            "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          {
            "description": "An end-to-end identifier for the conversion quotation request."
          }
        ]
      },
      "conversionTerms": {
        "allOf": [
          {
            "title": "FxConversion",
            "type": "object",
            "description": "A DFSP will be able to request a currency conversion, and an FX provider will be able to describe its involvement in a proposed transfer, using a FxConversion object.",
            "properties": {
              "conversionId": {
                "allOf": [
                  {
                    "title": "CorrelationId",
                    "type": "string",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
                    "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
                  },
                  {
                    "description": "An end-to-end identifier for the conversion request."
                  }
                ]
              },
              "determiningTransferId": {
                "allOf": [
                  {
                    "title": "CorrelationId",
                    "type": "string",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
                    "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
                  },
                  {
                    "description": "The transaction ID of the transfer on whose success this currency conversion depends."
                  }
                ]
              },
              "initiatingFsp": {
                "allOf": [
                  {
                    "title": "FspId",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "description": "FSP identifier."
                  },
                  {
                    "description": "The id of the participant who is requesting a currency conversion."
                  }
                ]
              },
              "counterPartyFsp": {
                "allOf": [
                  {
                    "title": "FspId",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "description": "FSP identifier."
                  },
                  {
                    "description": "The ID of the FXP performing the conversion."
                  }
                ]
              },
              "amountType": {
                "allOf": [
                  {
                    "title": "AmountType",
                    "type": "string",
                    "enum": [
                      "SEND",
                      "RECEIVE"
                    ],
                    "description": "Below are the allowed values for the enumeration AmountType.\n- SEND - Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees.\n- RECEIVE - Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive of any fees.",
                    "example": "RECEIVE"
                  },
                  {
                    "description": "This is the AmountType for the base transaction - If SEND - then any charges levied by the FXP as part of the transaction will be deducted by the FXP from the amount shown for the target party in the conversion. If RECEIVE - then any charges levied by the FXP as part of the transaction will be added by the FXP to the amount shown for the source party in the conversion."
                  }
                ]
              },
              "sourceAmount": {
                "allOf": [
                  {
                    "title": "FxMoney",
                    "type": "object",
                    "description": "Data model for the complex type FxMoney; This is based on the type Money but allows the amount to be optional to support FX quotations.",
                    "properties": {
                      "currency": {
                        "title": "Currency",
                        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3,
                        "enum": [
                          "AED",
                          "AFN",
                          "ALL",
                          "AMD",
                          "ANG",
                          "AOA",
                          "ARS",
                          "AUD",
                          "AWG",
                          "AZN",
                          "BAM",
                          "BBD",
                          "BDT",
                          "BGN",
                          "BHD",
                          "BIF",
                          "BMD",
                          "BND",
                          "BOB",
                          "BRL",
                          "BSD",
                          "BTN",
                          "BWP",
                          "BYN",
                          "BZD",
                          "CAD",
                          "CDF",
                          "CHF",
                          "CLP",
                          "CNY",
                          "COP",
                          "CRC",
                          "CUC",
                          "CUP",
                          "CVE",
                          "CZK",
                          "DJF",
                          "DKK",
                          "DOP",
                          "DZD",
                          "EGP",
                          "ERN",
                          "ETB",
                          "EUR",
                          "FJD",
                          "FKP",
                          "GBP",
                          "GEL",
                          "GGP",
                          "GHS",
                          "GIP",
                          "GMD",
                          "GNF",
                          "GTQ",
                          "GYD",
                          "HKD",
                          "HNL",
                          "HRK",
                          "HTG",
                          "HUF",
                          "IDR",
                          "ILS",
                          "IMP",
                          "INR",
                          "IQD",
                          "IRR",
                          "ISK",
                          "JEP",
                          "JMD",
                          "JOD",
                          "JPY",
                          "KES",
                          "KGS",
                          "KHR",
                          "KMF",
                          "KPW",
                          "KRW",
                          "KWD",
                          "KYD",
                          "KZT",
                          "LAK",
                          "LBP",
                          "LKR",
                          "LRD",
                          "LSL",
                          "LYD",
                          "MAD",
                          "MDL",
                          "MGA",
                          "MKD",
                          "MMK",
                          "MNT",
                          "MOP",
                          "MRO",
                          "MUR",
                          "MVR",
                          "MWK",
                          "MXN",
                          "MYR",
                          "MZN",
                          "NAD",
                          "NGN",
                          "NIO",
                          "NOK",
                          "NPR",
                          "NZD",
                          "OMR",
                          "PAB",
                          "PEN",
                          "PGK",
                          "PHP",
                          "PKR",
                          "PLN",
                          "PYG",
                          "QAR",
                          "RON",
                          "RSD",
                          "RUB",
                          "RWF",
                          "SAR",
                          "SBD",
                          "SCR",
                          "SDG",
                          "SEK",
                          "SGD",
                          "SHP",
                          "SLL",
                          "SOS",
                          "SPL",
                          "SRD",
                          "STD",
                          "SVC",
                          "SYP",
                          "SZL",
                          "THB",
                          "TJS",
                          "TMT",
                          "TND",
                          "TOP",
                          "TRY",
                          "TTD",
                          "TVD",
                          "TWD",
                          "TZS",
                          "UAH",
                          "UGX",
                          "USD",
                          "UYU",
                          "UZS",
                          "VEF",
                          "VND",
                          "VUV",
                          "WST",
                          "XAF",
                          "XCD",
                          "XDR",
                          "XOF",
                          "XPF",
                          "XTS",
                          "XXX",
                          "YER",
                          "ZAR",
                          "ZMW",
                          "ZWD"
                        ]
                      },
                      "amount": {
                        "title": "Amount",
                        "type": "string",
                        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                        "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                        "example": "123.45"
                      }
                    },
                    "required": [
                      "currency"
                    ]
                  },
                  {
                    "description": "The amount to be converted, expressed in the source currency."
                  }
                ]
              },
              "targetAmount": {
                "allOf": [
                  {
                    "title": "FxMoney",
                    "type": "object",
                    "description": "Data model for the complex type FxMoney; This is based on the type Money but allows the amount to be optional to support FX quotations.",
                    "properties": {
                      "currency": {
                        "title": "Currency",
                        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3,
                        "enum": [
                          "AED",
                          "AFN",
                          "ALL",
                          "AMD",
                          "ANG",
                          "AOA",
                          "ARS",
                          "AUD",
                          "AWG",
                          "AZN",
                          "BAM",
                          "BBD",
                          "BDT",
                          "BGN",
                          "BHD",
                          "BIF",
                          "BMD",
                          "BND",
                          "BOB",
                          "BRL",
                          "BSD",
                          "BTN",
                          "BWP",
                          "BYN",
                          "BZD",
                          "CAD",
                          "CDF",
                          "CHF",
                          "CLP",
                          "CNY",
                          "COP",
                          "CRC",
                          "CUC",
                          "CUP",
                          "CVE",
                          "CZK",
                          "DJF",
                          "DKK",
                          "DOP",
                          "DZD",
                          "EGP",
                          "ERN",
                          "ETB",
                          "EUR",
                          "FJD",
                          "FKP",
                          "GBP",
                          "GEL",
                          "GGP",
                          "GHS",
                          "GIP",
                          "GMD",
                          "GNF",
                          "GTQ",
                          "GYD",
                          "HKD",
                          "HNL",
                          "HRK",
                          "HTG",
                          "HUF",
                          "IDR",
                          "ILS",
                          "IMP",
                          "INR",
                          "IQD",
                          "IRR",
                          "ISK",
                          "JEP",
                          "JMD",
                          "JOD",
                          "JPY",
                          "KES",
                          "KGS",
                          "KHR",
                          "KMF",
                          "KPW",
                          "KRW",
                          "KWD",
                          "KYD",
                          "KZT",
                          "LAK",
                          "LBP",
                          "LKR",
                          "LRD",
                          "LSL",
                          "LYD",
                          "MAD",
                          "MDL",
                          "MGA",
                          "MKD",
                          "MMK",
                          "MNT",
                          "MOP",
                          "MRO",
                          "MUR",
                          "MVR",
                          "MWK",
                          "MXN",
                          "MYR",
                          "MZN",
                          "NAD",
                          "NGN",
                          "NIO",
                          "NOK",
                          "NPR",
                          "NZD",
                          "OMR",
                          "PAB",
                          "PEN",
                          "PGK",
                          "PHP",
                          "PKR",
                          "PLN",
                          "PYG",
                          "QAR",
                          "RON",
                          "RSD",
                          "RUB",
                          "RWF",
                          "SAR",
                          "SBD",
                          "SCR",
                          "SDG",
                          "SEK",
                          "SGD",
                          "SHP",
                          "SLL",
                          "SOS",
                          "SPL",
                          "SRD",
                          "STD",
                          "SVC",
                          "SYP",
                          "SZL",
                          "THB",
                          "TJS",
                          "TMT",
                          "TND",
                          "TOP",
                          "TRY",
                          "TTD",
                          "TVD",
                          "TWD",
                          "TZS",
                          "UAH",
                          "UGX",
                          "USD",
                          "UYU",
                          "UZS",
                          "VEF",
                          "VND",
                          "VUV",
                          "WST",
                          "XAF",
                          "XCD",
                          "XDR",
                          "XOF",
                          "XPF",
                          "XTS",
                          "XXX",
                          "YER",
                          "ZAR",
                          "ZMW",
                          "ZWD"
                        ]
                      },
                      "amount": {
                        "title": "Amount",
                        "type": "string",
                        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                        "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                        "example": "123.45"
                      }
                    },
                    "required": [
                      "currency"
                    ]
                  },
                  {
                    "description": "The converted amount, expressed in the target currency."
                  }
                ]
              },
              "expiration": {
                "allOf": [
                  {
                    "title": "DateTime",
                    "type": "string",
                    "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
                    "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
                    "example": "2016-05-24T08:38:08.699-04:00"
                  },
                  {
                    "description": "The end of the period for which the currency conversion is required to remain valid."
                  }
                ]
              },
              "charges": {
                "type": "array",
                "description": "One or more charges which the FXP intends to levy as part of the currency conversion, or which the payee DFSP intends to add to the amount transferred.",
                "items": {
                  "title": "FxCharge",
                  "type": "object",
                  "description": "An FXP will be able to specify a charge which it proposes to levy on the currency conversion operation using a FxCharge object.",
                  "properties": {
                    "chargeType": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "A description of the charge which is being levied."
                    },
                    "sourceAmount": {
                      "allOf": [
                        {
                          "title": "Money",
                          "type": "object",
                          "description": "Data model for the complex type Money.",
                          "properties": {
                            "currency": {
                              "title": "Currency",
                              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 3,
                              "enum": [
                                "AED",
                                "AFN",
                                "ALL",
                                "AMD",
                                "ANG",
                                "AOA",
                                "ARS",
                                "AUD",
                                "AWG",
                                "AZN",
                                "BAM",
                                "BBD",
                                "BDT",
                                "BGN",
                                "BHD",
                                "BIF",
                                "BMD",
                                "BND",
                                "BOB",
                                "BRL",
                                "BSD",
                                "BTN",
                                "BWP",
                                "BYN",
                                "BZD",
                                "CAD",
                                "CDF",
                                "CHF",
                                "CLP",
                                "CNY",
                                "COP",
                                "CRC",
                                "CUC",
                                "CUP",
                                "CVE",
                                "CZK",
                                "DJF",
                                "DKK",
                                "DOP",
                                "DZD",
                                "EGP",
                                "ERN",
                                "ETB",
                                "EUR",
                                "FJD",
                                "FKP",
                                "GBP",
                                "GEL",
                                "GGP",
                                "GHS",
                                "GIP",
                                "GMD",
                                "GNF",
                                "GTQ",
                                "GYD",
                                "HKD",
                                "HNL",
                                "HRK",
                                "HTG",
                                "HUF",
                                "IDR",
                                "ILS",
                                "IMP",
                                "INR",
                                "IQD",
                                "IRR",
                                "ISK",
                                "JEP",
                                "JMD",
                                "JOD",
                                "JPY",
                                "KES",
                                "KGS",
                                "KHR",
                                "KMF",
                                "KPW",
                                "KRW",
                                "KWD",
                                "KYD",
                                "KZT",
                                "LAK",
                                "LBP",
                                "LKR",
                                "LRD",
                                "LSL",
                                "LYD",
                                "MAD",
                                "MDL",
                                "MGA",
                                "MKD",
                                "MMK",
                                "MNT",
                                "MOP",
                                "MRO",
                                "MUR",
                                "MVR",
                                "MWK",
                                "MXN",
                                "MYR",
                                "MZN",
                                "NAD",
                                "NGN",
                                "NIO",
                                "NOK",
                                "NPR",
                                "NZD",
                                "OMR",
                                "PAB",
                                "PEN",
                                "PGK",
                                "PHP",
                                "PKR",
                                "PLN",
                                "PYG",
                                "QAR",
                                "RON",
                                "RSD",
                                "RUB",
                                "RWF",
                                "SAR",
                                "SBD",
                                "SCR",
                                "SDG",
                                "SEK",
                                "SGD",
                                "SHP",
                                "SLL",
                                "SOS",
                                "SPL",
                                "SRD",
                                "STD",
                                "SVC",
                                "SYP",
                                "SZL",
                                "THB",
                                "TJS",
                                "TMT",
                                "TND",
                                "TOP",
                                "TRY",
                                "TTD",
                                "TVD",
                                "TWD",
                                "TZS",
                                "UAH",
                                "UGX",
                                "USD",
                                "UYU",
                                "UZS",
                                "VEF",
                                "VND",
                                "VUV",
                                "WST",
                                "XAF",
                                "XCD",
                                "XDR",
                                "XOF",
                                "XPF",
                                "XTS",
                                "XXX",
                                "YER",
                                "ZAR",
                                "ZMW",
                                "ZWD"
                              ]
                            },
                            "amount": {
                              "title": "Amount",
                              "type": "string",
                              "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                              "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                              "example": "123.45"
                            }
                          },
                          "required": [
                            "currency",
                            "amount"
                          ]
                        },
                        {
                          "description": "The amount of the charge which is being levied, expressed in the source currency."
                        }
                      ]
                    },
                    "targetAmount": {
                      "allOf": [
                        {
                          "title": "Money",
                          "type": "object",
                          "description": "Data model for the complex type Money.",
                          "properties": {
                            "currency": {
                              "title": "Currency",
                              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 3,
                              "enum": [
                                "AED",
                                "AFN",
                                "ALL",
                                "AMD",
                                "ANG",
                                "AOA",
                                "ARS",
                                "AUD",
                                "AWG",
                                "AZN",
                                "BAM",
                                "BBD",
                                "BDT",
                                "BGN",
                                "BHD",
                                "BIF",
                                "BMD",
                                "BND",
                                "BOB",
                                "BRL",
                                "BSD",
                                "BTN",
                                "BWP",
                                "BYN",
                                "BZD",
                                "CAD",
                                "CDF",
                                "CHF",
                                "CLP",
                                "CNY",
                                "COP",
                                "CRC",
                                "CUC",
                                "CUP",
                                "CVE",
                                "CZK",
                                "DJF",
                                "DKK",
                                "DOP",
                                "DZD",
                                "EGP",
                                "ERN",
                                "ETB",
                                "EUR",
                                "FJD",
                                "FKP",
                                "GBP",
                                "GEL",
                                "GGP",
                                "GHS",
                                "GIP",
                                "GMD",
                                "GNF",
                                "GTQ",
                                "GYD",
                                "HKD",
                                "HNL",
                                "HRK",
                                "HTG",
                                "HUF",
                                "IDR",
                                "ILS",
                                "IMP",
                                "INR",
                                "IQD",
                                "IRR",
                                "ISK",
                                "JEP",
                                "JMD",
                                "JOD",
                                "JPY",
                                "KES",
                                "KGS",
                                "KHR",
                                "KMF",
                                "KPW",
                                "KRW",
                                "KWD",
                                "KYD",
                                "KZT",
                                "LAK",
                                "LBP",
                                "LKR",
                                "LRD",
                                "LSL",
                                "LYD",
                                "MAD",
                                "MDL",
                                "MGA",
                                "MKD",
                                "MMK",
                                "MNT",
                                "MOP",
                                "MRO",
                                "MUR",
                                "MVR",
                                "MWK",
                                "MXN",
                                "MYR",
                                "MZN",
                                "NAD",
                                "NGN",
                                "NIO",
                                "NOK",
                                "NPR",
                                "NZD",
                                "OMR",
                                "PAB",
                                "PEN",
                                "PGK",
                                "PHP",
                                "PKR",
                                "PLN",
                                "PYG",
                                "QAR",
                                "RON",
                                "RSD",
                                "RUB",
                                "RWF",
                                "SAR",
                                "SBD",
                                "SCR",
                                "SDG",
                                "SEK",
                                "SGD",
                                "SHP",
                                "SLL",
                                "SOS",
                                "SPL",
                                "SRD",
                                "STD",
                                "SVC",
                                "SYP",
                                "SZL",
                                "THB",
                                "TJS",
                                "TMT",
                                "TND",
                                "TOP",
                                "TRY",
                                "TTD",
                                "TVD",
                                "TWD",
                                "TZS",
                                "UAH",
                                "UGX",
                                "USD",
                                "UYU",
                                "UZS",
                                "VEF",
                                "VND",
                                "VUV",
                                "WST",
                                "XAF",
                                "XCD",
                                "XDR",
                                "XOF",
                                "XPF",
                                "XTS",
                                "XXX",
                                "YER",
                                "ZAR",
                                "ZMW",
                                "ZWD"
                              ]
                            },
                            "amount": {
                              "title": "Amount",
                              "type": "string",
                              "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                              "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                              "example": "123.45"
                            }
                          },
                          "required": [
                            "currency",
                            "amount"
                          ]
                        },
                        {
                          "description": "The amount of the charge which is being levied, expressed in the target currency."
                        }
                      ]
                    }
                  },
                  "required": [
                    "chargeType"
                  ]
                },
                "minItems": 0,
                "maxItems": 16
              },
              "extensionList": {
                "allOf": [
                  {
                    "title": "ExtensionList",
                    "type": "object",
                    "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                    "properties": {
                      "extension": {
                        "type": "array",
                        "items": {
                          "title": "Extension",
                          "type": "object",
                          "description": "Data model for the complex type Extension.",
                          "properties": {
                            "key": {
                              "title": "ExtensionKey",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 32,
                              "description": "Extension key."
                            },
                            "value": {
                              "title": "ExtensionValue",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 128,
                              "description": "Extension value."
                            }
                          },
                          "required": [
                            "key",
                            "value"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 16,
                        "description": "Number of Extension elements."
                      }
                    },
                    "required": [
                      "extension"
                    ]
                  },
                  {
                    "description": "The extension list for the currency conversion request."
                  }
                ]
              }
            },
            "required": [
              "conversionId",
              "initiatingFsp",
              "counterPartyFsp",
              "amountType",
              "sourceAmount",
              "targetAmount",
              "expiration"
            ]
          },
          {
            "description": "The terms of the currency conversion for which a quotation is sought."
          }
        ]
      }
    },
    "required": [
      "conversionRequestId",
      "conversionTerms"
    ]
  },
  "FxRate": {
    "title": "FxRate",
    "type": "object",
    "description": "The FxRate object contains information about a currency conversion in the transfer. It can be used by parties to the transfer to exchange information with each other about the exchange rate for the transfer, to ensure that the best rate can be agreed on.",
    "properties": {
      "sourceAmount": {
        "allOf": [
          {
            "title": "Money",
            "type": "object",
            "description": "Data model for the complex type Money.",
            "properties": {
              "currency": {
                "title": "Currency",
                "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STD",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "XTS",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWD"
                ]
              },
              "amount": {
                "title": "Amount",
                "type": "string",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                "example": "123.45"
              }
            },
            "required": [
              "currency",
              "amount"
            ]
          },
          {
            "description": "The amount of the transfer in the source currency."
          }
        ]
      },
      "targetAmount": {
        "allOf": [
          {
            "title": "Money",
            "type": "object",
            "description": "Data model for the complex type Money.",
            "properties": {
              "currency": {
                "title": "Currency",
                "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STD",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "XTS",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWD"
                ]
              },
              "amount": {
                "title": "Amount",
                "type": "string",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                "example": "123.45"
              }
            },
            "required": [
              "currency",
              "amount"
            ]
          },
          {
            "description": "The amount of the transfer in the target currency."
          }
        ]
      }
    },
    "required": [
      "sourceAmount",
      "targetAmount"
    ]
  },
  "FxTransfersIDPatchResponse": {
    "title": "FxTransfersIDPatchResponse",
    "type": "object",
    "description": "PATCH /fxTransfers/{ID} object",
    "properties": {
      "completedTimestamp": {
        "allOf": [
          {
            "title": "DateTime",
            "type": "string",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
            "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
            "example": "2016-05-24T08:38:08.699-04:00"
          },
          {
            "description": "Time and date when the conversion was executed."
          }
        ]
      },
      "conversionState": {
        "allOf": [
          {
            "title": "TransferState",
            "type": "string",
            "enum": [
              "RECEIVED",
              "RESERVED",
              "COMMITTED",
              "ABORTED"
            ],
            "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Next ledger has received the transfer.\n- RESERVED - Next ledger has reserved the transfer.\n- COMMITTED - Next ledger has successfully performed the transfer.\n- ABORTED - Next ledger has aborted the transfer due to a rejection or failure to perform the transfer.",
            "example": "RESERVED"
          },
          {
            "description": "The current status of the conversion request."
          }
        ]
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "conversionState"
    ]
  },
  "FxTransfersIDPutResponse": {
    "title": "FxTransfersIDPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /fxTransfers/{ID} callback.",
    "properties": {
      "fulfilment": {
        "allOf": [
          {
            "title": "IlpFulfilment",
            "type": "string",
            "pattern": "^[A-Za-z0-9-_]{43}$",
            "maxLength": 48,
            "description": "Fulfilment that must be attached to the transfer by the Payee.",
            "example": "WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8"
          },
          {
            "description": "The fulfilment of the condition specified for the currency conversion. Mandatory if the conversion has been executed successfully."
          }
        ]
      },
      "completedTimestamp": {
        "allOf": [
          {
            "title": "DateTime",
            "type": "string",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
            "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
            "example": "2016-05-24T08:38:08.699-04:00"
          },
          {
            "description": "Time and date when the conversion was executed."
          }
        ]
      },
      "conversionState": {
        "allOf": [
          {
            "title": "TransferState",
            "type": "string",
            "enum": [
              "RECEIVED",
              "RESERVED",
              "COMMITTED",
              "ABORTED"
            ],
            "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Next ledger has received the transfer.\n- RESERVED - Next ledger has reserved the transfer.\n- COMMITTED - Next ledger has successfully performed the transfer.\n- ABORTED - Next ledger has aborted the transfer due to a rejection or failure to perform the transfer.",
            "example": "RESERVED"
          },
          {
            "description": "The current status of the conversion request."
          }
        ]
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "conversionState"
    ]
  },
  "FxTransfersPostRequest": {
    "title": "FxTransfersPostRequest",
    "type": "object",
    "description": "The object sent in the POST /fxTransfers request.",
    "properties": {
      "commitRequestId": {
        "allOf": [
          {
            "title": "CorrelationId",
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
            "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          {
            "description": "An end-to-end identifier for the confirmation request."
          }
        ]
      },
      "determiningTransferId": {
        "allOf": [
          {
            "title": "CorrelationId",
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
            "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          {
            "description": "The transaction ID of the transfer to which this currency conversion relates, if the conversion is part of a transfer. If the conversion is a bulk currency purchase, this field should be omitted."
          }
        ]
      },
      "initiatingFsp": {
        "allOf": [
          {
            "title": "FspId",
            "type": "string",
            "minLength": 1,
            "maxLength": 32,
            "description": "FSP identifier."
          },
          {
            "description": "Identifier for the FSP who is requesting a currency conversion."
          }
        ]
      },
      "counterPartyFsp": {
        "allOf": [
          {
            "title": "FspId",
            "type": "string",
            "minLength": 1,
            "maxLength": 32,
            "description": "FSP identifier."
          },
          {
            "description": "Identifier for the FXP who is performing the currency conversion."
          }
        ]
      },
      "sourceAmount": {
        "allOf": [
          {
            "title": "Money",
            "type": "object",
            "description": "Data model for the complex type Money.",
            "properties": {
              "currency": {
                "title": "Currency",
                "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STD",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "XTS",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWD"
                ]
              },
              "amount": {
                "title": "Amount",
                "type": "string",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                "example": "123.45"
              }
            },
            "required": [
              "currency",
              "amount"
            ]
          },
          {
            "description": "The amount being offered for conversion by the requesting FSP."
          }
        ]
      },
      "targetAmount": {
        "allOf": [
          {
            "title": "Money",
            "type": "object",
            "description": "Data model for the complex type Money.",
            "properties": {
              "currency": {
                "title": "Currency",
                "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STD",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "XTS",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWD"
                ]
              },
              "amount": {
                "title": "Amount",
                "type": "string",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                "example": "123.45"
              }
            },
            "required": [
              "currency",
              "amount"
            ]
          },
          {
            "description": "The amount which the FXP is to credit to the requesting FSP in the target currency."
          }
        ]
      },
      "condition": {
        "allOf": [
          {
            "title": "IlpCondition",
            "type": "string",
            "pattern": "^[A-Za-z0-9-_]{43}$",
            "maxLength": 48,
            "description": "Condition that must be attached to the transfer by the Payer."
          },
          {
            "description": "ILP condition received by the requesting FSP when the quote was approved."
          }
        ]
      },
      "expiration": {
        "title": "DateTime",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
        "example": "2016-05-24T08:38:08.699-04:00"
      }
    },
    "required": [
      "commitRequestId",
      "initiatingFsp",
      "counterPartyFsp",
      "sourceAmount",
      "targetAmount",
      "condition"
    ]
  },
  "GeoCode": {
    "title": "GeoCode",
    "type": "object",
    "description": "Data model for the complex type GeoCode. Indicates the geographic location from where the transaction was initiated.",
    "properties": {
      "latitude": {
        "title": "Latitude",
        "type": "string",
        "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
        "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
        "example": "+45.4215"
      },
      "longitude": {
        "title": "Longitude",
        "type": "string",
        "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
        "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
        "example": "+75.6972"
      }
    },
    "required": [
      "latitude",
      "longitude"
    ]
  },
  "IlpCondition": {
    "title": "IlpCondition",
    "type": "string",
    "pattern": "^[A-Za-z0-9-_]{43}$",
    "maxLength": 48,
    "description": "Condition that must be attached to the transfer by the Payer."
  },
  "IlpFulfilment": {
    "title": "IlpFulfilment",
    "type": "string",
    "pattern": "^[A-Za-z0-9-_]{43}$",
    "maxLength": 48,
    "description": "Fulfilment that must be attached to the transfer by the Payee.",
    "example": "WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8"
  },
  "IlpPacket": {
    "title": "IlpPacket",
    "type": "string",
    "pattern": "^[A-Za-z0-9-_]+[=]{0,2}$",
    "minLength": 1,
    "maxLength": 32768,
    "description": "Information for recipient (transport layer information).",
    "example": "AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"
  },
  "IndividualQuote": {
    "title": "IndividualQuote",
    "type": "object",
    "description": "Data model for the complex type IndividualQuote.",
    "properties": {
      "quoteId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "transactionId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "payee": {
        "title": "Party",
        "type": "object",
        "description": "Data model for the complex type Party.",
        "properties": {
          "partyIdInfo": {
            "title": "PartyIdInfo",
            "type": "object",
            "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
            "properties": {
              "partyIdType": {
                "title": "PartyIdType",
                "type": "string",
                "enum": [
                  "MSISDN",
                  "EMAIL",
                  "PERSONAL_ID",
                  "BUSINESS",
                  "DEVICE",
                  "ACCOUNT_ID",
                  "IBAN",
                  "ALIAS"
                ],
                "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
              },
              "partyIdentifier": {
                "title": "PartyIdentifier",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Identifier of the Party.",
                "example": "16135551212"
              },
              "partySubIdOrType": {
                "title": "PartySubIdOrType",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
              },
              "fspId": {
                "title": "FspId",
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "FSP identifier."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "partyIdType",
              "partyIdentifier"
            ]
          },
          "merchantClassificationCode": {
            "title": "MerchantClassificationCode",
            "type": "string",
            "pattern": "^[\\d]{1,4}$",
            "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
          },
          "name": {
            "title": "PartyName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Name of the Party. Could be a real name or a nickname."
          },
          "personalInfo": {
            "title": "PartyPersonalInfo",
            "type": "object",
            "description": "Data model for the complex type PartyPersonalInfo.",
            "properties": {
              "complexName": {
                "title": "PartyComplexName",
                "type": "object",
                "description": "Data model for the complex type PartyComplexName.",
                "properties": {
                  "firstName": {
                    "title": "FirstName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "First name of the Party (Name Type).",
                    "example": "Henrik"
                  },
                  "middleName": {
                    "title": "MiddleName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Middle name of the Party (Name Type).",
                    "example": "Johannes"
                  },
                  "lastName": {
                    "title": "LastName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Last name of the Party (Name Type).",
                    "example": "Karlsson"
                  }
                }
              },
              "dateOfBirth": {
                "title": "DateofBirth (type Date)",
                "type": "string",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                "description": "Date of Birth of the Party.",
                "example": "1966-06-16"
              },
              "kycInformation": {
                "title": "KYCInformation",
                "type": "string",
                "minLength": 1,
                "maxLength": 2048,
                "description": "KYC information for the party in a form mandated by an individual scheme.",
                "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
              }
            }
          },
          "supportedCurrencies": {
            "type": "array",
            "description": "Currencies in which the party can receive funds.",
            "items": {
              "title": "Currency",
              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ]
            },
            "minItems": 0,
            "maxItems": 16
          }
        },
        "required": [
          "partyIdInfo"
        ]
      },
      "amountType": {
        "title": "AmountType",
        "type": "string",
        "enum": [
          "SEND",
          "RECEIVE"
        ],
        "description": "Below are the allowed values for the enumeration AmountType.\n- SEND - Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees.\n- RECEIVE - Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive of any fees.",
        "example": "RECEIVE"
      },
      "amount": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "fees": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "transactionType": {
        "title": "TransactionType",
        "type": "object",
        "description": "Data model for the complex type TransactionType.",
        "properties": {
          "scenario": {
            "title": "TransactionScenario",
            "type": "string",
            "enum": [
              "DEPOSIT",
              "WITHDRAWAL",
              "TRANSFER",
              "PAYMENT",
              "REFUND"
            ],
            "description": "Below are the allowed values for the enumeration.\n- DEPOSIT - Used for performing a Cash-In (deposit) transaction. In a normal scenario, electronic funds are transferred from a Business account to a Consumer account, and physical cash is given from the Consumer to the Business User.\n- WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction. In a normal scenario, electronic funds are transferred from a Consumer’s account to a Business account, and physical cash is given from the Business User to the Consumer.\n- TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to Consumer) transaction.\n- PAYMENT - Usually used for performing a transaction from a Consumer to a Merchant or Organization, but could also be for a B2B (Business to Business) payment. The transaction could be online for a purchase in an Internet store, in a physical store where both the Consumer and Business User are present, a bill payment, a donation, and so on.\n- REFUND - Used for performing a refund of transaction.",
            "example": "DEPOSIT"
          },
          "subScenario": {
            "title": "TransactionSubScenario",
            "type": "string",
            "pattern": "^[A-Z_]{1,32}$",
            "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
            "example": "LOCALLY_DEFINED_SUBSCENARIO"
          },
          "initiator": {
            "title": "TransactionInitiator",
            "type": "string",
            "enum": [
              "PAYER",
              "PAYEE"
            ],
            "description": "Below are the allowed values for the enumeration.\n- PAYER - Sender of funds is initiating the transaction. The account to send from is either owned by the Payer or is connected to the Payer in some way.\n- PAYEE - Recipient of the funds is initiating the transaction by sending a transaction request. The Payer must approve the transaction, either automatically by a pre-generated OTP or by pre-approval of the Payee, or by manually approving in his or her own Device.",
            "example": "PAYEE"
          },
          "initiatorType": {
            "title": "TransactionInitiatorType",
            "type": "string",
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "description": "Below are the allowed values for the enumeration.\n- CONSUMER - Consumer is the initiator of the transaction.\n- AGENT - Agent is the initiator of the transaction.\n- BUSINESS - Business is the initiator of the transaction.\n- DEVICE - Device is the initiator of the transaction.",
            "example": "CONSUMER"
          },
          "refundInfo": {
            "title": "Refund",
            "type": "object",
            "description": "Data model for the complex type Refund.",
            "properties": {
              "originalTransactionId": {
                "title": "CorrelationId",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
                "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
              },
              "refundReason": {
                "title": "RefundReason",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Reason for the refund.",
                "example": "Free text indicating reason for the refund."
              }
            },
            "required": [
              "originalTransactionId"
            ]
          },
          "balanceOfPayments": {
            "title": "BalanceOfPayments",
            "type": "string",
            "pattern": "^[1-9]\\d{2}$",
            "description": "(BopCode) The API data type [BopCode](https://www.imf.org/external/np/sta/bopcode/) is a JSON String of 3 characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed.",
            "example": "123"
          }
        },
        "required": [
          "scenario",
          "initiator",
          "initiatorType"
        ]
      },
      "note": {
        "title": "Note",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Memo assigned to transaction.",
        "example": "Note sent to Payee."
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "quoteId",
      "transactionId",
      "payee",
      "amountType",
      "amount",
      "transactionType"
    ]
  },
  "IndividualQuoteResult": {
    "title": "IndividualQuoteResult",
    "type": "object",
    "description": "Data model for the complex type IndividualQuoteResult.",
    "properties": {
      "quoteId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "payee": {
        "title": "Party",
        "type": "object",
        "description": "Data model for the complex type Party.",
        "properties": {
          "partyIdInfo": {
            "title": "PartyIdInfo",
            "type": "object",
            "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
            "properties": {
              "partyIdType": {
                "title": "PartyIdType",
                "type": "string",
                "enum": [
                  "MSISDN",
                  "EMAIL",
                  "PERSONAL_ID",
                  "BUSINESS",
                  "DEVICE",
                  "ACCOUNT_ID",
                  "IBAN",
                  "ALIAS"
                ],
                "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
              },
              "partyIdentifier": {
                "title": "PartyIdentifier",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Identifier of the Party.",
                "example": "16135551212"
              },
              "partySubIdOrType": {
                "title": "PartySubIdOrType",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
              },
              "fspId": {
                "title": "FspId",
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "FSP identifier."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "partyIdType",
              "partyIdentifier"
            ]
          },
          "merchantClassificationCode": {
            "title": "MerchantClassificationCode",
            "type": "string",
            "pattern": "^[\\d]{1,4}$",
            "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
          },
          "name": {
            "title": "PartyName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Name of the Party. Could be a real name or a nickname."
          },
          "personalInfo": {
            "title": "PartyPersonalInfo",
            "type": "object",
            "description": "Data model for the complex type PartyPersonalInfo.",
            "properties": {
              "complexName": {
                "title": "PartyComplexName",
                "type": "object",
                "description": "Data model for the complex type PartyComplexName.",
                "properties": {
                  "firstName": {
                    "title": "FirstName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "First name of the Party (Name Type).",
                    "example": "Henrik"
                  },
                  "middleName": {
                    "title": "MiddleName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Middle name of the Party (Name Type).",
                    "example": "Johannes"
                  },
                  "lastName": {
                    "title": "LastName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Last name of the Party (Name Type).",
                    "example": "Karlsson"
                  }
                }
              },
              "dateOfBirth": {
                "title": "DateofBirth (type Date)",
                "type": "string",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                "description": "Date of Birth of the Party.",
                "example": "1966-06-16"
              },
              "kycInformation": {
                "title": "KYCInformation",
                "type": "string",
                "minLength": 1,
                "maxLength": 2048,
                "description": "KYC information for the party in a form mandated by an individual scheme.",
                "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
              }
            }
          },
          "supportedCurrencies": {
            "type": "array",
            "description": "Currencies in which the party can receive funds.",
            "items": {
              "title": "Currency",
              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ]
            },
            "minItems": 0,
            "maxItems": 16
          }
        },
        "required": [
          "partyIdInfo"
        ]
      },
      "transferAmount": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "payeeReceiveAmount": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "payeeFspFee": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "payeeFspCommission": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "ilpPacket": {
        "title": "IlpPacket",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]+[=]{0,2}$",
        "minLength": 1,
        "maxLength": 32768,
        "description": "Information for recipient (transport layer information).",
        "example": "AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"
      },
      "condition": {
        "title": "IlpCondition",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]{43}$",
        "maxLength": 48,
        "description": "Condition that must be attached to the transfer by the Payer."
      },
      "errorInformation": {
        "title": "ErrorInformation",
        "type": "object",
        "description": "Data model for the complex type ErrorInformation.",
        "properties": {
          "errorCode": {
            "title": "ErrorCode",
            "type": "string",
            "pattern": "^[1-9]\\d{3}$",
            "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
            "example": "5100"
          },
          "errorDescription": {
            "title": "ErrorDescription",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Error description string."
          },
          "extensionList": {
            "title": "ExtensionList",
            "type": "object",
            "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
            "properties": {
              "extension": {
                "type": "array",
                "items": {
                  "title": "Extension",
                  "type": "object",
                  "description": "Data model for the complex type Extension.",
                  "properties": {
                    "key": {
                      "title": "ExtensionKey",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "Extension key."
                    },
                    "value": {
                      "title": "ExtensionValue",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Extension value."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 16,
                "description": "Number of Extension elements."
              }
            },
            "required": [
              "extension"
            ]
          }
        },
        "required": [
          "errorCode",
          "errorDescription"
        ]
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "quoteId"
    ]
  },
  "IndividualTransfer": {
    "title": "IndividualTransfer",
    "type": "object",
    "description": "Data model for the complex type IndividualTransfer.",
    "properties": {
      "transferId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "transferAmount": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "ilpPacket": {
        "title": "IlpPacket",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]+[=]{0,2}$",
        "minLength": 1,
        "maxLength": 32768,
        "description": "Information for recipient (transport layer information).",
        "example": "AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"
      },
      "condition": {
        "title": "IlpCondition",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]{43}$",
        "maxLength": 48,
        "description": "Condition that must be attached to the transfer by the Payer."
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "transferId",
      "transferAmount",
      "ilpPacket",
      "condition"
    ]
  },
  "IndividualTransferResult": {
    "title": "IndividualTransferResult",
    "type": "object",
    "description": "Data model for the complex type IndividualTransferResult.",
    "properties": {
      "transferId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "fulfilment": {
        "title": "IlpFulfilment",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]{43}$",
        "maxLength": 48,
        "description": "Fulfilment that must be attached to the transfer by the Payee.",
        "example": "WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8"
      },
      "errorInformation": {
        "title": "ErrorInformation",
        "type": "object",
        "description": "Data model for the complex type ErrorInformation.",
        "properties": {
          "errorCode": {
            "title": "ErrorCode",
            "type": "string",
            "pattern": "^[1-9]\\d{3}$",
            "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
            "example": "5100"
          },
          "errorDescription": {
            "title": "ErrorDescription",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Error description string."
          },
          "extensionList": {
            "title": "ExtensionList",
            "type": "object",
            "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
            "properties": {
              "extension": {
                "type": "array",
                "items": {
                  "title": "Extension",
                  "type": "object",
                  "description": "Data model for the complex type Extension.",
                  "properties": {
                    "key": {
                      "title": "ExtensionKey",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "Extension key."
                    },
                    "value": {
                      "title": "ExtensionValue",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Extension value."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 16,
                "description": "Number of Extension elements."
              }
            },
            "required": [
              "extension"
            ]
          }
        },
        "required": [
          "errorCode",
          "errorDescription"
        ]
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "transferId"
    ]
  },
  "Integer": {
    "title": "Integer",
    "type": "string",
    "pattern": "^[1-9]\\d*$",
    "description": "The API data type Integer is a JSON String consisting of digits only. Negative numbers and leading zeroes are not allowed. The data type is always limited to a specific number of digits."
  },
  "KYCInformation": {
    "title": "KYCInformation",
    "type": "string",
    "minLength": 1,
    "maxLength": 2048,
    "description": "KYC information for the party in a form mandated by an individual scheme.",
    "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
  },
  "LastName": {
    "title": "LastName",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
    "description": "Last name of the Party (Name Type).",
    "example": "Karlsson"
  },
  "Latitude": {
    "title": "Latitude",
    "type": "string",
    "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
    "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
    "example": "+45.4215"
  },
  "Longitude": {
    "title": "Longitude",
    "type": "string",
    "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
    "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
    "example": "+75.6972"
  },
  "MerchantClassificationCode": {
    "title": "MerchantClassificationCode",
    "type": "string",
    "pattern": "^[\\d]{1,4}$",
    "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
  },
  "MiddleName": {
    "title": "MiddleName",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
    "description": "Middle name of the Party (Name Type).",
    "example": "Johannes"
  },
  "Money": {
    "title": "Money",
    "type": "object",
    "description": "Data model for the complex type Money.",
    "properties": {
      "currency": {
        "title": "Currency",
        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
        "type": "string",
        "minLength": 3,
        "maxLength": 3,
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ]
      },
      "amount": {
        "title": "Amount",
        "type": "string",
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
        "example": "123.45"
      }
    },
    "required": [
      "currency",
      "amount"
    ]
  },
  "Name": {
    "title": "Name",
    "type": "string",
    "pattern": "^(?!\\s*$)[\\w .,'-]{1,128}$",
    "description": "The API data type Name is a JSON String, restricted by a regular expression to avoid characters which are generally not used in a name.\n\nRegular Expression - The regular expression for restricting the Name type is \"^(?!\\s*$)[\\w .,'-]{1,128}$\". The restriction does not allow a string consisting of whitespace only, all Unicode characters are allowed, as well as the period (.) (apostrophe (‘), dash (-), comma (,) and space characters ( ).\n\n**Note:** In some programming languages, Unicode support must be specifically enabled. For example, if Java is used, the flag UNICODE_CHARACTER_CLASS must be enabled to allow Unicode characters."
  },
  "Note": {
    "title": "Note",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "Memo assigned to transaction.",
    "example": "Note sent to Payee."
  },
  "OtpValue": {
    "title": "OtpValue",
    "type": "string",
    "pattern": "^\\d{3,10}$",
    "description": "The API data type OtpValue is a JSON String of 3 to 10 characters, consisting of digits only. Negative numbers are not allowed. One or more leading zeros are allowed."
  },
  "ParticipantsIDPutResponse": {
    "title": "ParticipantsIDPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /participants/{ID} callback.",
    "properties": {
      "partyList": {
        "type": "array",
        "items": {
          "title": "PartyResult",
          "type": "object",
          "description": "Data model for the complex type PartyResult.",
          "properties": {
            "partyId": {
              "title": "PartyIdInfo",
              "type": "object",
              "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
              "properties": {
                "partyIdType": {
                  "title": "PartyIdType",
                  "type": "string",
                  "enum": [
                    "MSISDN",
                    "EMAIL",
                    "PERSONAL_ID",
                    "BUSINESS",
                    "DEVICE",
                    "ACCOUNT_ID",
                    "IBAN",
                    "ALIAS"
                  ],
                  "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
                },
                "partyIdentifier": {
                  "title": "PartyIdentifier",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Identifier of the Party.",
                  "example": "16135551212"
                },
                "partySubIdOrType": {
                  "title": "PartySubIdOrType",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
                },
                "fspId": {
                  "title": "FspId",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "FSP identifier."
                },
                "extensionList": {
                  "title": "ExtensionList",
                  "type": "object",
                  "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                  "properties": {
                    "extension": {
                      "type": "array",
                      "items": {
                        "title": "Extension",
                        "type": "object",
                        "description": "Data model for the complex type Extension.",
                        "properties": {
                          "key": {
                            "title": "ExtensionKey",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32,
                            "description": "Extension key."
                          },
                          "value": {
                            "title": "ExtensionValue",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128,
                            "description": "Extension value."
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "minItems": 1,
                      "maxItems": 16,
                      "description": "Number of Extension elements."
                    }
                  },
                  "required": [
                    "extension"
                  ]
                }
              },
              "required": [
                "partyIdType",
                "partyIdentifier"
              ]
            },
            "errorInformation": {
              "title": "ErrorInformation",
              "type": "object",
              "description": "Data model for the complex type ErrorInformation.",
              "properties": {
                "errorCode": {
                  "title": "ErrorCode",
                  "type": "string",
                  "pattern": "^[1-9]\\d{3}$",
                  "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                  "example": "5100"
                },
                "errorDescription": {
                  "title": "ErrorDescription",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Error description string."
                },
                "extensionList": {
                  "title": "ExtensionList",
                  "type": "object",
                  "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                  "properties": {
                    "extension": {
                      "type": "array",
                      "items": {
                        "title": "Extension",
                        "type": "object",
                        "description": "Data model for the complex type Extension.",
                        "properties": {
                          "key": {
                            "title": "ExtensionKey",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32,
                            "description": "Extension key."
                          },
                          "value": {
                            "title": "ExtensionValue",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128,
                            "description": "Extension value."
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "minItems": 1,
                      "maxItems": 16,
                      "description": "Number of Extension elements."
                    }
                  },
                  "required": [
                    "extension"
                  ]
                }
              },
              "required": [
                "errorCode",
                "errorDescription"
              ]
            }
          },
          "required": [
            "partyId"
          ]
        },
        "minItems": 1,
        "maxItems": 10000,
        "description": "List of PartyResult elements that were either created or failed to be created."
      },
      "currency": {
        "title": "Currency",
        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
        "type": "string",
        "minLength": 3,
        "maxLength": 3,
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ]
      }
    },
    "required": [
      "partyList"
    ]
  },
  "ParticipantsPostRequest": {
    "title": "ParticipantsPostRequest",
    "type": "object",
    "description": "The object sent in the POST /participants request.",
    "properties": {
      "requestId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "partyList": {
        "type": "array",
        "items": {
          "title": "PartyIdInfo",
          "type": "object",
          "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
          "properties": {
            "partyIdType": {
              "title": "PartyIdType",
              "type": "string",
              "enum": [
                "MSISDN",
                "EMAIL",
                "PERSONAL_ID",
                "BUSINESS",
                "DEVICE",
                "ACCOUNT_ID",
                "IBAN",
                "ALIAS"
              ],
              "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
            },
            "partyIdentifier": {
              "title": "PartyIdentifier",
              "type": "string",
              "minLength": 1,
              "maxLength": 128,
              "description": "Identifier of the Party.",
              "example": "16135551212"
            },
            "partySubIdOrType": {
              "title": "PartySubIdOrType",
              "type": "string",
              "minLength": 1,
              "maxLength": 128,
              "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
            },
            "fspId": {
              "title": "FspId",
              "type": "string",
              "minLength": 1,
              "maxLength": 32,
              "description": "FSP identifier."
            },
            "extensionList": {
              "title": "ExtensionList",
              "type": "object",
              "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
              "properties": {
                "extension": {
                  "type": "array",
                  "items": {
                    "title": "Extension",
                    "type": "object",
                    "description": "Data model for the complex type Extension.",
                    "properties": {
                      "key": {
                        "title": "ExtensionKey",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Extension key."
                      },
                      "value": {
                        "title": "ExtensionValue",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128,
                        "description": "Extension value."
                      }
                    },
                    "required": [
                      "key",
                      "value"
                    ]
                  },
                  "minItems": 1,
                  "maxItems": 16,
                  "description": "Number of Extension elements."
                }
              },
              "required": [
                "extension"
              ]
            }
          },
          "required": [
            "partyIdType",
            "partyIdentifier"
          ]
        },
        "minItems": 1,
        "maxItems": 10000,
        "description": "List of PartyIdInfo elements that the client would like to update or create FSP information about."
      },
      "currency": {
        "title": "Currency",
        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
        "type": "string",
        "minLength": 3,
        "maxLength": 3,
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ]
      }
    },
    "required": [
      "requestId",
      "partyList"
    ]
  },
  "ParticipantsTypeIDPutResponse": {
    "title": "ParticipantsTypeIDPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /participants/{Type}/{ID}/{SubId} and /participants/{Type}/{ID} callbacks.",
    "properties": {
      "fspId": {
        "title": "FspId",
        "type": "string",
        "minLength": 1,
        "maxLength": 32,
        "description": "FSP identifier."
      }
    }
  },
  "ParticipantsTypeIDSubIDPostRequest": {
    "title": "ParticipantsTypeIDSubIDPostRequest",
    "type": "object",
    "description": "The object sent in the POST /participants/{Type}/{ID}/{SubId} and /participants/{Type}/{ID} requests. An additional optional ExtensionList element has been added as part of v1.1 changes.",
    "properties": {
      "fspId": {
        "title": "FspId",
        "type": "string",
        "minLength": 1,
        "maxLength": 32,
        "description": "FSP identifier."
      },
      "currency": {
        "title": "Currency",
        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
        "type": "string",
        "minLength": 3,
        "maxLength": 3,
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ]
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "fspId"
    ]
  },
  "PartiesTypeIDPutResponse": {
    "title": "PartiesTypeIDPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /parties/{Type}/{ID} callback.",
    "properties": {
      "party": {
        "title": "Party",
        "type": "object",
        "description": "Data model for the complex type Party.",
        "properties": {
          "partyIdInfo": {
            "title": "PartyIdInfo",
            "type": "object",
            "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
            "properties": {
              "partyIdType": {
                "title": "PartyIdType",
                "type": "string",
                "enum": [
                  "MSISDN",
                  "EMAIL",
                  "PERSONAL_ID",
                  "BUSINESS",
                  "DEVICE",
                  "ACCOUNT_ID",
                  "IBAN",
                  "ALIAS"
                ],
                "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
              },
              "partyIdentifier": {
                "title": "PartyIdentifier",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Identifier of the Party.",
                "example": "16135551212"
              },
              "partySubIdOrType": {
                "title": "PartySubIdOrType",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
              },
              "fspId": {
                "title": "FspId",
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "FSP identifier."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "partyIdType",
              "partyIdentifier"
            ]
          },
          "merchantClassificationCode": {
            "title": "MerchantClassificationCode",
            "type": "string",
            "pattern": "^[\\d]{1,4}$",
            "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
          },
          "name": {
            "title": "PartyName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Name of the Party. Could be a real name or a nickname."
          },
          "personalInfo": {
            "title": "PartyPersonalInfo",
            "type": "object",
            "description": "Data model for the complex type PartyPersonalInfo.",
            "properties": {
              "complexName": {
                "title": "PartyComplexName",
                "type": "object",
                "description": "Data model for the complex type PartyComplexName.",
                "properties": {
                  "firstName": {
                    "title": "FirstName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "First name of the Party (Name Type).",
                    "example": "Henrik"
                  },
                  "middleName": {
                    "title": "MiddleName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Middle name of the Party (Name Type).",
                    "example": "Johannes"
                  },
                  "lastName": {
                    "title": "LastName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Last name of the Party (Name Type).",
                    "example": "Karlsson"
                  }
                }
              },
              "dateOfBirth": {
                "title": "DateofBirth (type Date)",
                "type": "string",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                "description": "Date of Birth of the Party.",
                "example": "1966-06-16"
              },
              "kycInformation": {
                "title": "KYCInformation",
                "type": "string",
                "minLength": 1,
                "maxLength": 2048,
                "description": "KYC information for the party in a form mandated by an individual scheme.",
                "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
              }
            }
          },
          "supportedCurrencies": {
            "type": "array",
            "description": "Currencies in which the party can receive funds.",
            "items": {
              "title": "Currency",
              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ]
            },
            "minItems": 0,
            "maxItems": 16
          }
        },
        "required": [
          "partyIdInfo"
        ]
      }
    },
    "required": [
      "party"
    ]
  },
  "Party": {
    "title": "Party",
    "type": "object",
    "description": "Data model for the complex type Party.",
    "properties": {
      "partyIdInfo": {
        "title": "PartyIdInfo",
        "type": "object",
        "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
        "properties": {
          "partyIdType": {
            "title": "PartyIdType",
            "type": "string",
            "enum": [
              "MSISDN",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
          },
          "partyIdentifier": {
            "title": "PartyIdentifier",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Identifier of the Party.",
            "example": "16135551212"
          },
          "partySubIdOrType": {
            "title": "PartySubIdOrType",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
          },
          "fspId": {
            "title": "FspId",
            "type": "string",
            "minLength": 1,
            "maxLength": 32,
            "description": "FSP identifier."
          },
          "extensionList": {
            "title": "ExtensionList",
            "type": "object",
            "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
            "properties": {
              "extension": {
                "type": "array",
                "items": {
                  "title": "Extension",
                  "type": "object",
                  "description": "Data model for the complex type Extension.",
                  "properties": {
                    "key": {
                      "title": "ExtensionKey",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "Extension key."
                    },
                    "value": {
                      "title": "ExtensionValue",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Extension value."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 16,
                "description": "Number of Extension elements."
              }
            },
            "required": [
              "extension"
            ]
          }
        },
        "required": [
          "partyIdType",
          "partyIdentifier"
        ]
      },
      "merchantClassificationCode": {
        "title": "MerchantClassificationCode",
        "type": "string",
        "pattern": "^[\\d]{1,4}$",
        "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
      },
      "name": {
        "title": "PartyName",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Name of the Party. Could be a real name or a nickname."
      },
      "personalInfo": {
        "title": "PartyPersonalInfo",
        "type": "object",
        "description": "Data model for the complex type PartyPersonalInfo.",
        "properties": {
          "complexName": {
            "title": "PartyComplexName",
            "type": "object",
            "description": "Data model for the complex type PartyComplexName.",
            "properties": {
              "firstName": {
                "title": "FirstName",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                "description": "First name of the Party (Name Type).",
                "example": "Henrik"
              },
              "middleName": {
                "title": "MiddleName",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                "description": "Middle name of the Party (Name Type).",
                "example": "Johannes"
              },
              "lastName": {
                "title": "LastName",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                "description": "Last name of the Party (Name Type).",
                "example": "Karlsson"
              }
            }
          },
          "dateOfBirth": {
            "title": "DateofBirth (type Date)",
            "type": "string",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "description": "Date of Birth of the Party.",
            "example": "1966-06-16"
          },
          "kycInformation": {
            "title": "KYCInformation",
            "type": "string",
            "minLength": 1,
            "maxLength": 2048,
            "description": "KYC information for the party in a form mandated by an individual scheme.",
            "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
          }
        }
      },
      "supportedCurrencies": {
        "type": "array",
        "description": "Currencies in which the party can receive funds.",
        "items": {
          "title": "Currency",
          "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3,
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHF",
            "CLP",
            "CNY",
            "COP",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GGP",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HRK",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "IMP",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JEP",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRO",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLL",
            "SOS",
            "SPL",
            "SRD",
            "STD",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TVD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "UYU",
            "UZS",
            "VEF",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XCD",
            "XDR",
            "XOF",
            "XPF",
            "XTS",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWD"
          ]
        },
        "minItems": 0,
        "maxItems": 16
      }
    },
    "required": [
      "partyIdInfo"
    ]
  },
  "PartyComplexName": {
    "title": "PartyComplexName",
    "type": "object",
    "description": "Data model for the complex type PartyComplexName.",
    "properties": {
      "firstName": {
        "title": "FirstName",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
        "description": "First name of the Party (Name Type).",
        "example": "Henrik"
      },
      "middleName": {
        "title": "MiddleName",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
        "description": "Middle name of the Party (Name Type).",
        "example": "Johannes"
      },
      "lastName": {
        "title": "LastName",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
        "description": "Last name of the Party (Name Type).",
        "example": "Karlsson"
      }
    }
  },
  "PartyIdInfo": {
    "title": "PartyIdInfo",
    "type": "object",
    "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
    "properties": {
      "partyIdType": {
        "title": "PartyIdType",
        "type": "string",
        "enum": [
          "MSISDN",
          "EMAIL",
          "PERSONAL_ID",
          "BUSINESS",
          "DEVICE",
          "ACCOUNT_ID",
          "IBAN",
          "ALIAS"
        ],
        "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
      },
      "partyIdentifier": {
        "title": "PartyIdentifier",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Identifier of the Party.",
        "example": "16135551212"
      },
      "partySubIdOrType": {
        "title": "PartySubIdOrType",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
      },
      "fspId": {
        "title": "FspId",
        "type": "string",
        "minLength": 1,
        "maxLength": 32,
        "description": "FSP identifier."
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "partyIdType",
      "partyIdentifier"
    ]
  },
  "PartyIdType": {
    "title": "PartyIdType",
    "type": "string",
    "enum": [
      "MSISDN",
      "EMAIL",
      "PERSONAL_ID",
      "BUSINESS",
      "DEVICE",
      "ACCOUNT_ID",
      "IBAN",
      "ALIAS"
    ],
    "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
  },
  "PartyIdentifier": {
    "title": "PartyIdentifier",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "Identifier of the Party.",
    "example": "16135551212"
  },
  "PartyName": {
    "title": "PartyName",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "Name of the Party. Could be a real name or a nickname."
  },
  "PartyPersonalInfo": {
    "title": "PartyPersonalInfo",
    "type": "object",
    "description": "Data model for the complex type PartyPersonalInfo.",
    "properties": {
      "complexName": {
        "title": "PartyComplexName",
        "type": "object",
        "description": "Data model for the complex type PartyComplexName.",
        "properties": {
          "firstName": {
            "title": "FirstName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
            "description": "First name of the Party (Name Type).",
            "example": "Henrik"
          },
          "middleName": {
            "title": "MiddleName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
            "description": "Middle name of the Party (Name Type).",
            "example": "Johannes"
          },
          "lastName": {
            "title": "LastName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
            "description": "Last name of the Party (Name Type).",
            "example": "Karlsson"
          }
        }
      },
      "dateOfBirth": {
        "title": "DateofBirth (type Date)",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
        "description": "Date of Birth of the Party.",
        "example": "1966-06-16"
      },
      "kycInformation": {
        "title": "KYCInformation",
        "type": "string",
        "minLength": 1,
        "maxLength": 2048,
        "description": "KYC information for the party in a form mandated by an individual scheme.",
        "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
      }
    }
  },
  "PartyResult": {
    "title": "PartyResult",
    "type": "object",
    "description": "Data model for the complex type PartyResult.",
    "properties": {
      "partyId": {
        "title": "PartyIdInfo",
        "type": "object",
        "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
        "properties": {
          "partyIdType": {
            "title": "PartyIdType",
            "type": "string",
            "enum": [
              "MSISDN",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
          },
          "partyIdentifier": {
            "title": "PartyIdentifier",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Identifier of the Party.",
            "example": "16135551212"
          },
          "partySubIdOrType": {
            "title": "PartySubIdOrType",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
          },
          "fspId": {
            "title": "FspId",
            "type": "string",
            "minLength": 1,
            "maxLength": 32,
            "description": "FSP identifier."
          },
          "extensionList": {
            "title": "ExtensionList",
            "type": "object",
            "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
            "properties": {
              "extension": {
                "type": "array",
                "items": {
                  "title": "Extension",
                  "type": "object",
                  "description": "Data model for the complex type Extension.",
                  "properties": {
                    "key": {
                      "title": "ExtensionKey",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "Extension key."
                    },
                    "value": {
                      "title": "ExtensionValue",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Extension value."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 16,
                "description": "Number of Extension elements."
              }
            },
            "required": [
              "extension"
            ]
          }
        },
        "required": [
          "partyIdType",
          "partyIdentifier"
        ]
      },
      "errorInformation": {
        "title": "ErrorInformation",
        "type": "object",
        "description": "Data model for the complex type ErrorInformation.",
        "properties": {
          "errorCode": {
            "title": "ErrorCode",
            "type": "string",
            "pattern": "^[1-9]\\d{3}$",
            "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
            "example": "5100"
          },
          "errorDescription": {
            "title": "ErrorDescription",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Error description string."
          },
          "extensionList": {
            "title": "ExtensionList",
            "type": "object",
            "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
            "properties": {
              "extension": {
                "type": "array",
                "items": {
                  "title": "Extension",
                  "type": "object",
                  "description": "Data model for the complex type Extension.",
                  "properties": {
                    "key": {
                      "title": "ExtensionKey",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "Extension key."
                    },
                    "value": {
                      "title": "ExtensionValue",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Extension value."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 16,
                "description": "Number of Extension elements."
              }
            },
            "required": [
              "extension"
            ]
          }
        },
        "required": [
          "errorCode",
          "errorDescription"
        ]
      }
    },
    "required": [
      "partyId"
    ]
  },
  "PartySubIdOrType": {
    "title": "PartySubIdOrType",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
  },
  "PersonalIdentifierType": {
    "title": "PersonalIdentifierType",
    "type": "string",
    "enum": [
      "PASSPORT",
      "NATIONAL_REGISTRATION",
      "DRIVING_LICENSE",
      "ALIEN_REGISTRATION",
      "NATIONAL_ID_CARD",
      "EMPLOYER_ID",
      "TAX_ID_NUMBER",
      "SENIOR_CITIZENS_CARD",
      "MARRIAGE_CERTIFICATE",
      "HEALTH_CARD",
      "VOTERS_ID",
      "UNITED_NATIONS",
      "OTHER_ID"
    ],
    "description": "Below are the allowed values for the enumeration.\n- PASSPORT - A passport number is used as reference to a Party.\n- NATIONAL_REGISTRATION - A national registration number is used as reference to a Party.\n- DRIVING_LICENSE - A driving license is used as reference to a Party.\n- ALIEN_REGISTRATION - An alien registration number is used as reference to a Party.\n- NATIONAL_ID_CARD - A national ID card number is used as reference to a Party.\n- EMPLOYER_ID - A tax identification number is used as reference to a Party.\n- TAX_ID_NUMBER - A tax identification number is used as reference to a Party.\n- SENIOR_CITIZENS_CARD - A senior citizens card number is used as reference to a Party.\n- MARRIAGE_CERTIFICATE - A marriage certificate number is used as reference to a Party.\n- HEALTH_CARD - A health card number is used as reference to a Party.\n- VOTERS_ID - A voter’s identification number is used as reference to a Party.\n- UNITED_NATIONS - An UN (United Nations) number is used as reference to a Party.\n- OTHER_ID - Any other type of identification type number is used as reference to a Party."
  },
  "QRCODE": {
    "title": "QRCODE",
    "type": "string",
    "minLength": 1,
    "maxLength": 64,
    "description": "QR code used as a One Time Password."
  },
  "QuotesIDPutResponse": {
    "title": "QuotesIDPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /quotes/{ID} callback.",
    "properties": {
      "transferAmount": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "payeeReceiveAmount": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "payeeFspFee": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "payeeFspCommission": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "expiration": {
        "title": "DateTime",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
        "example": "2016-05-24T08:38:08.699-04:00"
      },
      "geoCode": {
        "title": "GeoCode",
        "type": "object",
        "description": "Data model for the complex type GeoCode. Indicates the geographic location from where the transaction was initiated.",
        "properties": {
          "latitude": {
            "title": "Latitude",
            "type": "string",
            "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "example": "+45.4215"
          },
          "longitude": {
            "title": "Longitude",
            "type": "string",
            "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "example": "+75.6972"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "ilpPacket": {
        "title": "IlpPacket",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]+[=]{0,2}$",
        "minLength": 1,
        "maxLength": 32768,
        "description": "Information for recipient (transport layer information).",
        "example": "AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"
      },
      "condition": {
        "title": "IlpCondition",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]{43}$",
        "maxLength": 48,
        "description": "Condition that must be attached to the transfer by the Payer."
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "transferAmount",
      "expiration",
      "ilpPacket",
      "condition"
    ]
  },
  "QuotesPostRequest": {
    "title": "QuotesPostRequest",
    "type": "object",
    "description": "The object sent in the POST /quotes request.",
    "properties": {
      "quoteId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "transactionId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "transactionRequestId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "payee": {
        "title": "Party",
        "type": "object",
        "description": "Data model for the complex type Party.",
        "properties": {
          "partyIdInfo": {
            "title": "PartyIdInfo",
            "type": "object",
            "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
            "properties": {
              "partyIdType": {
                "title": "PartyIdType",
                "type": "string",
                "enum": [
                  "MSISDN",
                  "EMAIL",
                  "PERSONAL_ID",
                  "BUSINESS",
                  "DEVICE",
                  "ACCOUNT_ID",
                  "IBAN",
                  "ALIAS"
                ],
                "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
              },
              "partyIdentifier": {
                "title": "PartyIdentifier",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Identifier of the Party.",
                "example": "16135551212"
              },
              "partySubIdOrType": {
                "title": "PartySubIdOrType",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
              },
              "fspId": {
                "title": "FspId",
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "FSP identifier."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "partyIdType",
              "partyIdentifier"
            ]
          },
          "merchantClassificationCode": {
            "title": "MerchantClassificationCode",
            "type": "string",
            "pattern": "^[\\d]{1,4}$",
            "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
          },
          "name": {
            "title": "PartyName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Name of the Party. Could be a real name or a nickname."
          },
          "personalInfo": {
            "title": "PartyPersonalInfo",
            "type": "object",
            "description": "Data model for the complex type PartyPersonalInfo.",
            "properties": {
              "complexName": {
                "title": "PartyComplexName",
                "type": "object",
                "description": "Data model for the complex type PartyComplexName.",
                "properties": {
                  "firstName": {
                    "title": "FirstName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "First name of the Party (Name Type).",
                    "example": "Henrik"
                  },
                  "middleName": {
                    "title": "MiddleName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Middle name of the Party (Name Type).",
                    "example": "Johannes"
                  },
                  "lastName": {
                    "title": "LastName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Last name of the Party (Name Type).",
                    "example": "Karlsson"
                  }
                }
              },
              "dateOfBirth": {
                "title": "DateofBirth (type Date)",
                "type": "string",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                "description": "Date of Birth of the Party.",
                "example": "1966-06-16"
              },
              "kycInformation": {
                "title": "KYCInformation",
                "type": "string",
                "minLength": 1,
                "maxLength": 2048,
                "description": "KYC information for the party in a form mandated by an individual scheme.",
                "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
              }
            }
          },
          "supportedCurrencies": {
            "type": "array",
            "description": "Currencies in which the party can receive funds.",
            "items": {
              "title": "Currency",
              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ]
            },
            "minItems": 0,
            "maxItems": 16
          }
        },
        "required": [
          "partyIdInfo"
        ]
      },
      "payer": {
        "title": "Party",
        "type": "object",
        "description": "Data model for the complex type Party.",
        "properties": {
          "partyIdInfo": {
            "title": "PartyIdInfo",
            "type": "object",
            "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
            "properties": {
              "partyIdType": {
                "title": "PartyIdType",
                "type": "string",
                "enum": [
                  "MSISDN",
                  "EMAIL",
                  "PERSONAL_ID",
                  "BUSINESS",
                  "DEVICE",
                  "ACCOUNT_ID",
                  "IBAN",
                  "ALIAS"
                ],
                "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
              },
              "partyIdentifier": {
                "title": "PartyIdentifier",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Identifier of the Party.",
                "example": "16135551212"
              },
              "partySubIdOrType": {
                "title": "PartySubIdOrType",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
              },
              "fspId": {
                "title": "FspId",
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "FSP identifier."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "partyIdType",
              "partyIdentifier"
            ]
          },
          "merchantClassificationCode": {
            "title": "MerchantClassificationCode",
            "type": "string",
            "pattern": "^[\\d]{1,4}$",
            "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
          },
          "name": {
            "title": "PartyName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Name of the Party. Could be a real name or a nickname."
          },
          "personalInfo": {
            "title": "PartyPersonalInfo",
            "type": "object",
            "description": "Data model for the complex type PartyPersonalInfo.",
            "properties": {
              "complexName": {
                "title": "PartyComplexName",
                "type": "object",
                "description": "Data model for the complex type PartyComplexName.",
                "properties": {
                  "firstName": {
                    "title": "FirstName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "First name of the Party (Name Type).",
                    "example": "Henrik"
                  },
                  "middleName": {
                    "title": "MiddleName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Middle name of the Party (Name Type).",
                    "example": "Johannes"
                  },
                  "lastName": {
                    "title": "LastName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Last name of the Party (Name Type).",
                    "example": "Karlsson"
                  }
                }
              },
              "dateOfBirth": {
                "title": "DateofBirth (type Date)",
                "type": "string",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                "description": "Date of Birth of the Party.",
                "example": "1966-06-16"
              },
              "kycInformation": {
                "title": "KYCInformation",
                "type": "string",
                "minLength": 1,
                "maxLength": 2048,
                "description": "KYC information for the party in a form mandated by an individual scheme.",
                "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
              }
            }
          },
          "supportedCurrencies": {
            "type": "array",
            "description": "Currencies in which the party can receive funds.",
            "items": {
              "title": "Currency",
              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ]
            },
            "minItems": 0,
            "maxItems": 16
          }
        },
        "required": [
          "partyIdInfo"
        ]
      },
      "amountType": {
        "title": "AmountType",
        "type": "string",
        "enum": [
          "SEND",
          "RECEIVE"
        ],
        "description": "Below are the allowed values for the enumeration AmountType.\n- SEND - Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees.\n- RECEIVE - Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive of any fees.",
        "example": "RECEIVE"
      },
      "amount": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "fees": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "transactionType": {
        "title": "TransactionType",
        "type": "object",
        "description": "Data model for the complex type TransactionType.",
        "properties": {
          "scenario": {
            "title": "TransactionScenario",
            "type": "string",
            "enum": [
              "DEPOSIT",
              "WITHDRAWAL",
              "TRANSFER",
              "PAYMENT",
              "REFUND"
            ],
            "description": "Below are the allowed values for the enumeration.\n- DEPOSIT - Used for performing a Cash-In (deposit) transaction. In a normal scenario, electronic funds are transferred from a Business account to a Consumer account, and physical cash is given from the Consumer to the Business User.\n- WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction. In a normal scenario, electronic funds are transferred from a Consumer’s account to a Business account, and physical cash is given from the Business User to the Consumer.\n- TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to Consumer) transaction.\n- PAYMENT - Usually used for performing a transaction from a Consumer to a Merchant or Organization, but could also be for a B2B (Business to Business) payment. The transaction could be online for a purchase in an Internet store, in a physical store where both the Consumer and Business User are present, a bill payment, a donation, and so on.\n- REFUND - Used for performing a refund of transaction.",
            "example": "DEPOSIT"
          },
          "subScenario": {
            "title": "TransactionSubScenario",
            "type": "string",
            "pattern": "^[A-Z_]{1,32}$",
            "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
            "example": "LOCALLY_DEFINED_SUBSCENARIO"
          },
          "initiator": {
            "title": "TransactionInitiator",
            "type": "string",
            "enum": [
              "PAYER",
              "PAYEE"
            ],
            "description": "Below are the allowed values for the enumeration.\n- PAYER - Sender of funds is initiating the transaction. The account to send from is either owned by the Payer or is connected to the Payer in some way.\n- PAYEE - Recipient of the funds is initiating the transaction by sending a transaction request. The Payer must approve the transaction, either automatically by a pre-generated OTP or by pre-approval of the Payee, or by manually approving in his or her own Device.",
            "example": "PAYEE"
          },
          "initiatorType": {
            "title": "TransactionInitiatorType",
            "type": "string",
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "description": "Below are the allowed values for the enumeration.\n- CONSUMER - Consumer is the initiator of the transaction.\n- AGENT - Agent is the initiator of the transaction.\n- BUSINESS - Business is the initiator of the transaction.\n- DEVICE - Device is the initiator of the transaction.",
            "example": "CONSUMER"
          },
          "refundInfo": {
            "title": "Refund",
            "type": "object",
            "description": "Data model for the complex type Refund.",
            "properties": {
              "originalTransactionId": {
                "title": "CorrelationId",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
                "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
              },
              "refundReason": {
                "title": "RefundReason",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Reason for the refund.",
                "example": "Free text indicating reason for the refund."
              }
            },
            "required": [
              "originalTransactionId"
            ]
          },
          "balanceOfPayments": {
            "title": "BalanceOfPayments",
            "type": "string",
            "pattern": "^[1-9]\\d{2}$",
            "description": "(BopCode) The API data type [BopCode](https://www.imf.org/external/np/sta/bopcode/) is a JSON String of 3 characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed.",
            "example": "123"
          }
        },
        "required": [
          "scenario",
          "initiator",
          "initiatorType"
        ]
      },
      "converter": {
        "allOf": [
          {
            "title": "CurrencyConverter",
            "type": "string",
            "enum": [
              "PAYER",
              "PAYEE"
            ],
            "description": "Below are the allowed values for the enumeration CurrencyConverter. - PAYER - Currency conversion should be performed by the payer. - PAYEE - Currency conversion should be performed by the payee."
          },
          {
            "description": "An optional field which will allow the payer DFSP to specify which DFSP it wants to undertake currency conversion. This is useful incase of if the sender wants the recipient to receive a specified amount of the target currency, but the payer DFSP does not want to undertake the currency conversion. In this case, the amount of the transfer would be expressed in the target currency and the amountType would be set to RECEIVE."
          }
        ]
      },
      "currencyConversion": {
        "allOf": [
          {
            "title": "FxRate",
            "type": "object",
            "description": "The FxRate object contains information about a currency conversion in the transfer. It can be used by parties to the transfer to exchange information with each other about the exchange rate for the transfer, to ensure that the best rate can be agreed on.",
            "properties": {
              "sourceAmount": {
                "allOf": [
                  {
                    "title": "Money",
                    "type": "object",
                    "description": "Data model for the complex type Money.",
                    "properties": {
                      "currency": {
                        "title": "Currency",
                        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3,
                        "enum": [
                          "AED",
                          "AFN",
                          "ALL",
                          "AMD",
                          "ANG",
                          "AOA",
                          "ARS",
                          "AUD",
                          "AWG",
                          "AZN",
                          "BAM",
                          "BBD",
                          "BDT",
                          "BGN",
                          "BHD",
                          "BIF",
                          "BMD",
                          "BND",
                          "BOB",
                          "BRL",
                          "BSD",
                          "BTN",
                          "BWP",
                          "BYN",
                          "BZD",
                          "CAD",
                          "CDF",
                          "CHF",
                          "CLP",
                          "CNY",
                          "COP",
                          "CRC",
                          "CUC",
                          "CUP",
                          "CVE",
                          "CZK",
                          "DJF",
                          "DKK",
                          "DOP",
                          "DZD",
                          "EGP",
                          "ERN",
                          "ETB",
                          "EUR",
                          "FJD",
                          "FKP",
                          "GBP",
                          "GEL",
                          "GGP",
                          "GHS",
                          "GIP",
                          "GMD",
                          "GNF",
                          "GTQ",
                          "GYD",
                          "HKD",
                          "HNL",
                          "HRK",
                          "HTG",
                          "HUF",
                          "IDR",
                          "ILS",
                          "IMP",
                          "INR",
                          "IQD",
                          "IRR",
                          "ISK",
                          "JEP",
                          "JMD",
                          "JOD",
                          "JPY",
                          "KES",
                          "KGS",
                          "KHR",
                          "KMF",
                          "KPW",
                          "KRW",
                          "KWD",
                          "KYD",
                          "KZT",
                          "LAK",
                          "LBP",
                          "LKR",
                          "LRD",
                          "LSL",
                          "LYD",
                          "MAD",
                          "MDL",
                          "MGA",
                          "MKD",
                          "MMK",
                          "MNT",
                          "MOP",
                          "MRO",
                          "MUR",
                          "MVR",
                          "MWK",
                          "MXN",
                          "MYR",
                          "MZN",
                          "NAD",
                          "NGN",
                          "NIO",
                          "NOK",
                          "NPR",
                          "NZD",
                          "OMR",
                          "PAB",
                          "PEN",
                          "PGK",
                          "PHP",
                          "PKR",
                          "PLN",
                          "PYG",
                          "QAR",
                          "RON",
                          "RSD",
                          "RUB",
                          "RWF",
                          "SAR",
                          "SBD",
                          "SCR",
                          "SDG",
                          "SEK",
                          "SGD",
                          "SHP",
                          "SLL",
                          "SOS",
                          "SPL",
                          "SRD",
                          "STD",
                          "SVC",
                          "SYP",
                          "SZL",
                          "THB",
                          "TJS",
                          "TMT",
                          "TND",
                          "TOP",
                          "TRY",
                          "TTD",
                          "TVD",
                          "TWD",
                          "TZS",
                          "UAH",
                          "UGX",
                          "USD",
                          "UYU",
                          "UZS",
                          "VEF",
                          "VND",
                          "VUV",
                          "WST",
                          "XAF",
                          "XCD",
                          "XDR",
                          "XOF",
                          "XPF",
                          "XTS",
                          "XXX",
                          "YER",
                          "ZAR",
                          "ZMW",
                          "ZWD"
                        ]
                      },
                      "amount": {
                        "title": "Amount",
                        "type": "string",
                        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                        "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                        "example": "123.45"
                      }
                    },
                    "required": [
                      "currency",
                      "amount"
                    ]
                  },
                  {
                    "description": "The amount of the transfer in the source currency."
                  }
                ]
              },
              "targetAmount": {
                "allOf": [
                  {
                    "title": "Money",
                    "type": "object",
                    "description": "Data model for the complex type Money.",
                    "properties": {
                      "currency": {
                        "title": "Currency",
                        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3,
                        "enum": [
                          "AED",
                          "AFN",
                          "ALL",
                          "AMD",
                          "ANG",
                          "AOA",
                          "ARS",
                          "AUD",
                          "AWG",
                          "AZN",
                          "BAM",
                          "BBD",
                          "BDT",
                          "BGN",
                          "BHD",
                          "BIF",
                          "BMD",
                          "BND",
                          "BOB",
                          "BRL",
                          "BSD",
                          "BTN",
                          "BWP",
                          "BYN",
                          "BZD",
                          "CAD",
                          "CDF",
                          "CHF",
                          "CLP",
                          "CNY",
                          "COP",
                          "CRC",
                          "CUC",
                          "CUP",
                          "CVE",
                          "CZK",
                          "DJF",
                          "DKK",
                          "DOP",
                          "DZD",
                          "EGP",
                          "ERN",
                          "ETB",
                          "EUR",
                          "FJD",
                          "FKP",
                          "GBP",
                          "GEL",
                          "GGP",
                          "GHS",
                          "GIP",
                          "GMD",
                          "GNF",
                          "GTQ",
                          "GYD",
                          "HKD",
                          "HNL",
                          "HRK",
                          "HTG",
                          "HUF",
                          "IDR",
                          "ILS",
                          "IMP",
                          "INR",
                          "IQD",
                          "IRR",
                          "ISK",
                          "JEP",
                          "JMD",
                          "JOD",
                          "JPY",
                          "KES",
                          "KGS",
                          "KHR",
                          "KMF",
                          "KPW",
                          "KRW",
                          "KWD",
                          "KYD",
                          "KZT",
                          "LAK",
                          "LBP",
                          "LKR",
                          "LRD",
                          "LSL",
                          "LYD",
                          "MAD",
                          "MDL",
                          "MGA",
                          "MKD",
                          "MMK",
                          "MNT",
                          "MOP",
                          "MRO",
                          "MUR",
                          "MVR",
                          "MWK",
                          "MXN",
                          "MYR",
                          "MZN",
                          "NAD",
                          "NGN",
                          "NIO",
                          "NOK",
                          "NPR",
                          "NZD",
                          "OMR",
                          "PAB",
                          "PEN",
                          "PGK",
                          "PHP",
                          "PKR",
                          "PLN",
                          "PYG",
                          "QAR",
                          "RON",
                          "RSD",
                          "RUB",
                          "RWF",
                          "SAR",
                          "SBD",
                          "SCR",
                          "SDG",
                          "SEK",
                          "SGD",
                          "SHP",
                          "SLL",
                          "SOS",
                          "SPL",
                          "SRD",
                          "STD",
                          "SVC",
                          "SYP",
                          "SZL",
                          "THB",
                          "TJS",
                          "TMT",
                          "TND",
                          "TOP",
                          "TRY",
                          "TTD",
                          "TVD",
                          "TWD",
                          "TZS",
                          "UAH",
                          "UGX",
                          "USD",
                          "UYU",
                          "UZS",
                          "VEF",
                          "VND",
                          "VUV",
                          "WST",
                          "XAF",
                          "XCD",
                          "XDR",
                          "XOF",
                          "XPF",
                          "XTS",
                          "XXX",
                          "YER",
                          "ZAR",
                          "ZMW",
                          "ZWD"
                        ]
                      },
                      "amount": {
                        "title": "Amount",
                        "type": "string",
                        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                        "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                        "example": "123.45"
                      }
                    },
                    "required": [
                      "currency",
                      "amount"
                    ]
                  },
                  {
                    "description": "The amount of the transfer in the target currency."
                  }
                ]
              }
            },
            "required": [
              "sourceAmount",
              "targetAmount"
            ]
          },
          {
            "description": "Used by the debtor party if it wants to share information about the currency conversion it proposes to make; or if it is required by scheme rules to share this information. This object contains the amount of the transfer in the source and target currencies, but does not identify the FXP being used."
          }
        ]
      },
      "geoCode": {
        "title": "GeoCode",
        "type": "object",
        "description": "Data model for the complex type GeoCode. Indicates the geographic location from where the transaction was initiated.",
        "properties": {
          "latitude": {
            "title": "Latitude",
            "type": "string",
            "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "example": "+45.4215"
          },
          "longitude": {
            "title": "Longitude",
            "type": "string",
            "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "example": "+75.6972"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "note": {
        "title": "Note",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Memo assigned to transaction.",
        "example": "Note sent to Payee."
      },
      "expiration": {
        "title": "DateTime",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
        "example": "2016-05-24T08:38:08.699-04:00"
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "quoteId",
      "transactionId",
      "payee",
      "payer",
      "amountType",
      "amount",
      "transactionType"
    ]
  },
  "Refund": {
    "title": "Refund",
    "type": "object",
    "description": "Data model for the complex type Refund.",
    "properties": {
      "originalTransactionId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "refundReason": {
        "title": "RefundReason",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Reason for the refund.",
        "example": "Free text indicating reason for the refund."
      }
    },
    "required": [
      "originalTransactionId"
    ]
  },
  "RefundReason": {
    "title": "RefundReason",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "Reason for the refund.",
    "example": "Free text indicating reason for the refund."
  },
  "ServicesFXPPutResponse": {
    "title": "ServicesFXPPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /services/FXP callback.",
    "properties": {
      "providers": {
        "type": "array",
        "description": "The FSP Id(s) of the participant(s) who offer currency conversion services.",
        "items": {
          "title": "FspId",
          "type": "string",
          "minLength": 1,
          "maxLength": 32,
          "description": "FSP identifier."
        },
        "minItems": 0,
        "maxItems": 16
      }
    },
    "required": [
      "providers"
    ]
  },
  "ServicesFXPSourceCurrencyTargetCurrencyPutResponse": {
    "title": "ServicesFXPSourceCurrencyTargetCurrencyPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /services/FXP/{SourceCurrency}/{TargetCurrency} callback.",
    "properties": {
      "providers": {
        "type": "array",
        "description": "The FSP Id(s) of the participant(s) who offer currency conversion services.",
        "items": {
          "title": "FspId",
          "type": "string",
          "minLength": 1,
          "maxLength": 32,
          "description": "FSP identifier."
        },
        "minItems": 0,
        "maxItems": 16
      }
    },
    "required": [
      "providers"
    ]
  },
  "TokenCode": {
    "title": "TokenCode",
    "type": "string",
    "pattern": "^[0-9a-zA-Z]{4,32}$",
    "description": "The API data type TokenCode is a JSON String between 4 and 32 characters, consisting of digits or upper- or lowercase characters from a to z."
  },
  "Transaction": {
    "title": "Transaction",
    "type": "object",
    "description": "Data model for the complex type Transaction. The Transaction type is used to carry end-to-end data between the Payer FSP and the Payee FSP in the ILP Packet. Both the transactionId and the quoteId in the data model are decided by the Payer FSP in the POST /quotes request.",
    "properties": {
      "transactionId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "quoteId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "payee": {
        "title": "Party",
        "type": "object",
        "description": "Data model for the complex type Party.",
        "properties": {
          "partyIdInfo": {
            "title": "PartyIdInfo",
            "type": "object",
            "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
            "properties": {
              "partyIdType": {
                "title": "PartyIdType",
                "type": "string",
                "enum": [
                  "MSISDN",
                  "EMAIL",
                  "PERSONAL_ID",
                  "BUSINESS",
                  "DEVICE",
                  "ACCOUNT_ID",
                  "IBAN",
                  "ALIAS"
                ],
                "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
              },
              "partyIdentifier": {
                "title": "PartyIdentifier",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Identifier of the Party.",
                "example": "16135551212"
              },
              "partySubIdOrType": {
                "title": "PartySubIdOrType",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
              },
              "fspId": {
                "title": "FspId",
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "FSP identifier."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "partyIdType",
              "partyIdentifier"
            ]
          },
          "merchantClassificationCode": {
            "title": "MerchantClassificationCode",
            "type": "string",
            "pattern": "^[\\d]{1,4}$",
            "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
          },
          "name": {
            "title": "PartyName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Name of the Party. Could be a real name or a nickname."
          },
          "personalInfo": {
            "title": "PartyPersonalInfo",
            "type": "object",
            "description": "Data model for the complex type PartyPersonalInfo.",
            "properties": {
              "complexName": {
                "title": "PartyComplexName",
                "type": "object",
                "description": "Data model for the complex type PartyComplexName.",
                "properties": {
                  "firstName": {
                    "title": "FirstName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "First name of the Party (Name Type).",
                    "example": "Henrik"
                  },
                  "middleName": {
                    "title": "MiddleName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Middle name of the Party (Name Type).",
                    "example": "Johannes"
                  },
                  "lastName": {
                    "title": "LastName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Last name of the Party (Name Type).",
                    "example": "Karlsson"
                  }
                }
              },
              "dateOfBirth": {
                "title": "DateofBirth (type Date)",
                "type": "string",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                "description": "Date of Birth of the Party.",
                "example": "1966-06-16"
              },
              "kycInformation": {
                "title": "KYCInformation",
                "type": "string",
                "minLength": 1,
                "maxLength": 2048,
                "description": "KYC information for the party in a form mandated by an individual scheme.",
                "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
              }
            }
          },
          "supportedCurrencies": {
            "type": "array",
            "description": "Currencies in which the party can receive funds.",
            "items": {
              "title": "Currency",
              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ]
            },
            "minItems": 0,
            "maxItems": 16
          }
        },
        "required": [
          "partyIdInfo"
        ]
      },
      "payer": {
        "title": "Party",
        "type": "object",
        "description": "Data model for the complex type Party.",
        "properties": {
          "partyIdInfo": {
            "title": "PartyIdInfo",
            "type": "object",
            "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
            "properties": {
              "partyIdType": {
                "title": "PartyIdType",
                "type": "string",
                "enum": [
                  "MSISDN",
                  "EMAIL",
                  "PERSONAL_ID",
                  "BUSINESS",
                  "DEVICE",
                  "ACCOUNT_ID",
                  "IBAN",
                  "ALIAS"
                ],
                "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
              },
              "partyIdentifier": {
                "title": "PartyIdentifier",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Identifier of the Party.",
                "example": "16135551212"
              },
              "partySubIdOrType": {
                "title": "PartySubIdOrType",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
              },
              "fspId": {
                "title": "FspId",
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "FSP identifier."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "partyIdType",
              "partyIdentifier"
            ]
          },
          "merchantClassificationCode": {
            "title": "MerchantClassificationCode",
            "type": "string",
            "pattern": "^[\\d]{1,4}$",
            "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
          },
          "name": {
            "title": "PartyName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Name of the Party. Could be a real name or a nickname."
          },
          "personalInfo": {
            "title": "PartyPersonalInfo",
            "type": "object",
            "description": "Data model for the complex type PartyPersonalInfo.",
            "properties": {
              "complexName": {
                "title": "PartyComplexName",
                "type": "object",
                "description": "Data model for the complex type PartyComplexName.",
                "properties": {
                  "firstName": {
                    "title": "FirstName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "First name of the Party (Name Type).",
                    "example": "Henrik"
                  },
                  "middleName": {
                    "title": "MiddleName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Middle name of the Party (Name Type).",
                    "example": "Johannes"
                  },
                  "lastName": {
                    "title": "LastName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Last name of the Party (Name Type).",
                    "example": "Karlsson"
                  }
                }
              },
              "dateOfBirth": {
                "title": "DateofBirth (type Date)",
                "type": "string",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                "description": "Date of Birth of the Party.",
                "example": "1966-06-16"
              },
              "kycInformation": {
                "title": "KYCInformation",
                "type": "string",
                "minLength": 1,
                "maxLength": 2048,
                "description": "KYC information for the party in a form mandated by an individual scheme.",
                "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
              }
            }
          },
          "supportedCurrencies": {
            "type": "array",
            "description": "Currencies in which the party can receive funds.",
            "items": {
              "title": "Currency",
              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ]
            },
            "minItems": 0,
            "maxItems": 16
          }
        },
        "required": [
          "partyIdInfo"
        ]
      },
      "amount": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "payeeReceiveAmount": {
        "allOf": [
          {
            "title": "Money",
            "type": "object",
            "description": "Data model for the complex type Money.",
            "properties": {
              "currency": {
                "title": "Currency",
                "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STD",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "XTS",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWD"
                ]
              },
              "amount": {
                "title": "Amount",
                "type": "string",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                "example": "123.45"
              }
            },
            "required": [
              "currency",
              "amount"
            ]
          },
          {
            "description": "The amount that the beneficiary will receive."
          }
        ]
      },
      "converter": {
        "allOf": [
          {
            "title": "CurrencyConverter",
            "type": "string",
            "enum": [
              "PAYER",
              "PAYEE"
            ],
            "description": "Below are the allowed values for the enumeration CurrencyConverter. - PAYER - Currency conversion should be performed by the payer. - PAYEE - Currency conversion should be performed by the payee."
          },
          {
            "description": "An optional field which will allow the payer DFSP to specify which DFSP it wants to undertake currency conversion. This is useful incase of if the sender wants the recipient to receive a specified amount of the target currency, but the payer DFSP does not want to undertake the currency conversion. In this case, the amount of the transfer would be expressed in the target currency and the amountType would be set to RECEIVE."
          }
        ]
      },
      "currencyConversion": {
        "allOf": [
          {
            "title": "FxRate",
            "type": "object",
            "description": "The FxRate object contains information about a currency conversion in the transfer. It can be used by parties to the transfer to exchange information with each other about the exchange rate for the transfer, to ensure that the best rate can be agreed on.",
            "properties": {
              "sourceAmount": {
                "allOf": [
                  {
                    "title": "Money",
                    "type": "object",
                    "description": "Data model for the complex type Money.",
                    "properties": {
                      "currency": {
                        "title": "Currency",
                        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3,
                        "enum": [
                          "AED",
                          "AFN",
                          "ALL",
                          "AMD",
                          "ANG",
                          "AOA",
                          "ARS",
                          "AUD",
                          "AWG",
                          "AZN",
                          "BAM",
                          "BBD",
                          "BDT",
                          "BGN",
                          "BHD",
                          "BIF",
                          "BMD",
                          "BND",
                          "BOB",
                          "BRL",
                          "BSD",
                          "BTN",
                          "BWP",
                          "BYN",
                          "BZD",
                          "CAD",
                          "CDF",
                          "CHF",
                          "CLP",
                          "CNY",
                          "COP",
                          "CRC",
                          "CUC",
                          "CUP",
                          "CVE",
                          "CZK",
                          "DJF",
                          "DKK",
                          "DOP",
                          "DZD",
                          "EGP",
                          "ERN",
                          "ETB",
                          "EUR",
                          "FJD",
                          "FKP",
                          "GBP",
                          "GEL",
                          "GGP",
                          "GHS",
                          "GIP",
                          "GMD",
                          "GNF",
                          "GTQ",
                          "GYD",
                          "HKD",
                          "HNL",
                          "HRK",
                          "HTG",
                          "HUF",
                          "IDR",
                          "ILS",
                          "IMP",
                          "INR",
                          "IQD",
                          "IRR",
                          "ISK",
                          "JEP",
                          "JMD",
                          "JOD",
                          "JPY",
                          "KES",
                          "KGS",
                          "KHR",
                          "KMF",
                          "KPW",
                          "KRW",
                          "KWD",
                          "KYD",
                          "KZT",
                          "LAK",
                          "LBP",
                          "LKR",
                          "LRD",
                          "LSL",
                          "LYD",
                          "MAD",
                          "MDL",
                          "MGA",
                          "MKD",
                          "MMK",
                          "MNT",
                          "MOP",
                          "MRO",
                          "MUR",
                          "MVR",
                          "MWK",
                          "MXN",
                          "MYR",
                          "MZN",
                          "NAD",
                          "NGN",
                          "NIO",
                          "NOK",
                          "NPR",
                          "NZD",
                          "OMR",
                          "PAB",
                          "PEN",
                          "PGK",
                          "PHP",
                          "PKR",
                          "PLN",
                          "PYG",
                          "QAR",
                          "RON",
                          "RSD",
                          "RUB",
                          "RWF",
                          "SAR",
                          "SBD",
                          "SCR",
                          "SDG",
                          "SEK",
                          "SGD",
                          "SHP",
                          "SLL",
                          "SOS",
                          "SPL",
                          "SRD",
                          "STD",
                          "SVC",
                          "SYP",
                          "SZL",
                          "THB",
                          "TJS",
                          "TMT",
                          "TND",
                          "TOP",
                          "TRY",
                          "TTD",
                          "TVD",
                          "TWD",
                          "TZS",
                          "UAH",
                          "UGX",
                          "USD",
                          "UYU",
                          "UZS",
                          "VEF",
                          "VND",
                          "VUV",
                          "WST",
                          "XAF",
                          "XCD",
                          "XDR",
                          "XOF",
                          "XPF",
                          "XTS",
                          "XXX",
                          "YER",
                          "ZAR",
                          "ZMW",
                          "ZWD"
                        ]
                      },
                      "amount": {
                        "title": "Amount",
                        "type": "string",
                        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                        "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                        "example": "123.45"
                      }
                    },
                    "required": [
                      "currency",
                      "amount"
                    ]
                  },
                  {
                    "description": "The amount of the transfer in the source currency."
                  }
                ]
              },
              "targetAmount": {
                "allOf": [
                  {
                    "title": "Money",
                    "type": "object",
                    "description": "Data model for the complex type Money.",
                    "properties": {
                      "currency": {
                        "title": "Currency",
                        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3,
                        "enum": [
                          "AED",
                          "AFN",
                          "ALL",
                          "AMD",
                          "ANG",
                          "AOA",
                          "ARS",
                          "AUD",
                          "AWG",
                          "AZN",
                          "BAM",
                          "BBD",
                          "BDT",
                          "BGN",
                          "BHD",
                          "BIF",
                          "BMD",
                          "BND",
                          "BOB",
                          "BRL",
                          "BSD",
                          "BTN",
                          "BWP",
                          "BYN",
                          "BZD",
                          "CAD",
                          "CDF",
                          "CHF",
                          "CLP",
                          "CNY",
                          "COP",
                          "CRC",
                          "CUC",
                          "CUP",
                          "CVE",
                          "CZK",
                          "DJF",
                          "DKK",
                          "DOP",
                          "DZD",
                          "EGP",
                          "ERN",
                          "ETB",
                          "EUR",
                          "FJD",
                          "FKP",
                          "GBP",
                          "GEL",
                          "GGP",
                          "GHS",
                          "GIP",
                          "GMD",
                          "GNF",
                          "GTQ",
                          "GYD",
                          "HKD",
                          "HNL",
                          "HRK",
                          "HTG",
                          "HUF",
                          "IDR",
                          "ILS",
                          "IMP",
                          "INR",
                          "IQD",
                          "IRR",
                          "ISK",
                          "JEP",
                          "JMD",
                          "JOD",
                          "JPY",
                          "KES",
                          "KGS",
                          "KHR",
                          "KMF",
                          "KPW",
                          "KRW",
                          "KWD",
                          "KYD",
                          "KZT",
                          "LAK",
                          "LBP",
                          "LKR",
                          "LRD",
                          "LSL",
                          "LYD",
                          "MAD",
                          "MDL",
                          "MGA",
                          "MKD",
                          "MMK",
                          "MNT",
                          "MOP",
                          "MRO",
                          "MUR",
                          "MVR",
                          "MWK",
                          "MXN",
                          "MYR",
                          "MZN",
                          "NAD",
                          "NGN",
                          "NIO",
                          "NOK",
                          "NPR",
                          "NZD",
                          "OMR",
                          "PAB",
                          "PEN",
                          "PGK",
                          "PHP",
                          "PKR",
                          "PLN",
                          "PYG",
                          "QAR",
                          "RON",
                          "RSD",
                          "RUB",
                          "RWF",
                          "SAR",
                          "SBD",
                          "SCR",
                          "SDG",
                          "SEK",
                          "SGD",
                          "SHP",
                          "SLL",
                          "SOS",
                          "SPL",
                          "SRD",
                          "STD",
                          "SVC",
                          "SYP",
                          "SZL",
                          "THB",
                          "TJS",
                          "TMT",
                          "TND",
                          "TOP",
                          "TRY",
                          "TTD",
                          "TVD",
                          "TWD",
                          "TZS",
                          "UAH",
                          "UGX",
                          "USD",
                          "UYU",
                          "UZS",
                          "VEF",
                          "VND",
                          "VUV",
                          "WST",
                          "XAF",
                          "XCD",
                          "XDR",
                          "XOF",
                          "XPF",
                          "XTS",
                          "XXX",
                          "YER",
                          "ZAR",
                          "ZMW",
                          "ZWD"
                        ]
                      },
                      "amount": {
                        "title": "Amount",
                        "type": "string",
                        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                        "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                        "example": "123.45"
                      }
                    },
                    "required": [
                      "currency",
                      "amount"
                    ]
                  },
                  {
                    "description": "The amount of the transfer in the target currency."
                  }
                ]
              }
            },
            "required": [
              "sourceAmount",
              "targetAmount"
            ]
          },
          {
            "description": "Used by the debtor party if it wants to share information about the currency conversion it proposes to make; or if it is required by scheme rules to share this information. This object contains the amount of the transfer in the source and target currencies, but does not identify the FXP being used."
          }
        ]
      },
      "transactionType": {
        "title": "TransactionType",
        "type": "object",
        "description": "Data model for the complex type TransactionType.",
        "properties": {
          "scenario": {
            "title": "TransactionScenario",
            "type": "string",
            "enum": [
              "DEPOSIT",
              "WITHDRAWAL",
              "TRANSFER",
              "PAYMENT",
              "REFUND"
            ],
            "description": "Below are the allowed values for the enumeration.\n- DEPOSIT - Used for performing a Cash-In (deposit) transaction. In a normal scenario, electronic funds are transferred from a Business account to a Consumer account, and physical cash is given from the Consumer to the Business User.\n- WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction. In a normal scenario, electronic funds are transferred from a Consumer’s account to a Business account, and physical cash is given from the Business User to the Consumer.\n- TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to Consumer) transaction.\n- PAYMENT - Usually used for performing a transaction from a Consumer to a Merchant or Organization, but could also be for a B2B (Business to Business) payment. The transaction could be online for a purchase in an Internet store, in a physical store where both the Consumer and Business User are present, a bill payment, a donation, and so on.\n- REFUND - Used for performing a refund of transaction.",
            "example": "DEPOSIT"
          },
          "subScenario": {
            "title": "TransactionSubScenario",
            "type": "string",
            "pattern": "^[A-Z_]{1,32}$",
            "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
            "example": "LOCALLY_DEFINED_SUBSCENARIO"
          },
          "initiator": {
            "title": "TransactionInitiator",
            "type": "string",
            "enum": [
              "PAYER",
              "PAYEE"
            ],
            "description": "Below are the allowed values for the enumeration.\n- PAYER - Sender of funds is initiating the transaction. The account to send from is either owned by the Payer or is connected to the Payer in some way.\n- PAYEE - Recipient of the funds is initiating the transaction by sending a transaction request. The Payer must approve the transaction, either automatically by a pre-generated OTP or by pre-approval of the Payee, or by manually approving in his or her own Device.",
            "example": "PAYEE"
          },
          "initiatorType": {
            "title": "TransactionInitiatorType",
            "type": "string",
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "description": "Below are the allowed values for the enumeration.\n- CONSUMER - Consumer is the initiator of the transaction.\n- AGENT - Agent is the initiator of the transaction.\n- BUSINESS - Business is the initiator of the transaction.\n- DEVICE - Device is the initiator of the transaction.",
            "example": "CONSUMER"
          },
          "refundInfo": {
            "title": "Refund",
            "type": "object",
            "description": "Data model for the complex type Refund.",
            "properties": {
              "originalTransactionId": {
                "title": "CorrelationId",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
                "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
              },
              "refundReason": {
                "title": "RefundReason",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Reason for the refund.",
                "example": "Free text indicating reason for the refund."
              }
            },
            "required": [
              "originalTransactionId"
            ]
          },
          "balanceOfPayments": {
            "title": "BalanceOfPayments",
            "type": "string",
            "pattern": "^[1-9]\\d{2}$",
            "description": "(BopCode) The API data type [BopCode](https://www.imf.org/external/np/sta/bopcode/) is a JSON String of 3 characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed.",
            "example": "123"
          }
        },
        "required": [
          "scenario",
          "initiator",
          "initiatorType"
        ]
      },
      "note": {
        "title": "Note",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Memo assigned to transaction.",
        "example": "Note sent to Payee."
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "transactionId",
      "quoteId",
      "payee",
      "payer",
      "amount",
      "transactionType"
    ]
  },
  "TransactionInitiator": {
    "title": "TransactionInitiator",
    "type": "string",
    "enum": [
      "PAYER",
      "PAYEE"
    ],
    "description": "Below are the allowed values for the enumeration.\n- PAYER - Sender of funds is initiating the transaction. The account to send from is either owned by the Payer or is connected to the Payer in some way.\n- PAYEE - Recipient of the funds is initiating the transaction by sending a transaction request. The Payer must approve the transaction, either automatically by a pre-generated OTP or by pre-approval of the Payee, or by manually approving in his or her own Device.",
    "example": "PAYEE"
  },
  "TransactionInitiatorType": {
    "title": "TransactionInitiatorType",
    "type": "string",
    "enum": [
      "CONSUMER",
      "AGENT",
      "BUSINESS",
      "DEVICE"
    ],
    "description": "Below are the allowed values for the enumeration.\n- CONSUMER - Consumer is the initiator of the transaction.\n- AGENT - Agent is the initiator of the transaction.\n- BUSINESS - Business is the initiator of the transaction.\n- DEVICE - Device is the initiator of the transaction.",
    "example": "CONSUMER"
  },
  "TransactionRequestState": {
    "title": "TransactionRequestState",
    "type": "string",
    "enum": [
      "RECEIVED",
      "PENDING",
      "ACCEPTED",
      "REJECTED"
    ],
    "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Payer FSP has received the transaction from the Payee FSP.\n- PENDING - Payer FSP has sent the transaction request to the Payer.\n- ACCEPTED - Payer has approved the transaction.\n- REJECTED - Payer has rejected the transaction.",
    "example": "RECEIVED"
  },
  "TransactionRequestsIDPutResponse": {
    "title": "TransactionRequestsIDPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /transactionRequests/{ID} callback.",
    "properties": {
      "transactionId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "transactionRequestState": {
        "title": "TransactionRequestState",
        "type": "string",
        "enum": [
          "RECEIVED",
          "PENDING",
          "ACCEPTED",
          "REJECTED"
        ],
        "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Payer FSP has received the transaction from the Payee FSP.\n- PENDING - Payer FSP has sent the transaction request to the Payer.\n- ACCEPTED - Payer has approved the transaction.\n- REJECTED - Payer has rejected the transaction.",
        "example": "RECEIVED"
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "transactionRequestState"
    ]
  },
  "TransactionRequestsPostRequest": {
    "title": "TransactionRequestsPostRequest",
    "type": "object",
    "description": "The object sent in the POST /transactionRequests request.",
    "properties": {
      "transactionRequestId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "payee": {
        "title": "Party",
        "type": "object",
        "description": "Data model for the complex type Party.",
        "properties": {
          "partyIdInfo": {
            "title": "PartyIdInfo",
            "type": "object",
            "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
            "properties": {
              "partyIdType": {
                "title": "PartyIdType",
                "type": "string",
                "enum": [
                  "MSISDN",
                  "EMAIL",
                  "PERSONAL_ID",
                  "BUSINESS",
                  "DEVICE",
                  "ACCOUNT_ID",
                  "IBAN",
                  "ALIAS"
                ],
                "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
              },
              "partyIdentifier": {
                "title": "PartyIdentifier",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Identifier of the Party.",
                "example": "16135551212"
              },
              "partySubIdOrType": {
                "title": "PartySubIdOrType",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
              },
              "fspId": {
                "title": "FspId",
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "FSP identifier."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "partyIdType",
              "partyIdentifier"
            ]
          },
          "merchantClassificationCode": {
            "title": "MerchantClassificationCode",
            "type": "string",
            "pattern": "^[\\d]{1,4}$",
            "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
          },
          "name": {
            "title": "PartyName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Name of the Party. Could be a real name or a nickname."
          },
          "personalInfo": {
            "title": "PartyPersonalInfo",
            "type": "object",
            "description": "Data model for the complex type PartyPersonalInfo.",
            "properties": {
              "complexName": {
                "title": "PartyComplexName",
                "type": "object",
                "description": "Data model for the complex type PartyComplexName.",
                "properties": {
                  "firstName": {
                    "title": "FirstName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "First name of the Party (Name Type).",
                    "example": "Henrik"
                  },
                  "middleName": {
                    "title": "MiddleName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Middle name of the Party (Name Type).",
                    "example": "Johannes"
                  },
                  "lastName": {
                    "title": "LastName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Last name of the Party (Name Type).",
                    "example": "Karlsson"
                  }
                }
              },
              "dateOfBirth": {
                "title": "DateofBirth (type Date)",
                "type": "string",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                "description": "Date of Birth of the Party.",
                "example": "1966-06-16"
              },
              "kycInformation": {
                "title": "KYCInformation",
                "type": "string",
                "minLength": 1,
                "maxLength": 2048,
                "description": "KYC information for the party in a form mandated by an individual scheme.",
                "example": "{\n    \"metadata\": {\n        \"format\": \"JSON\",\n        \"version\": \"1.0\",\n        \"description\": \"Data containing KYC Information\"\n    },\n    \"data\": {\n        \"name\": \"John Doe\",\n        \"dob\": \"1980-05-15\",\n        \"gender\": \"Male\",\n        \"address\": \"123 Main Street, Anytown, USA\",\n        \"email\": \"johndoe@example.com\",\n        \"phone\": \"+1 555-123-4567\",\n        \"nationality\": \"US\",\n        \"passport_number\": \"AB1234567\",\n        \"issue_date\": \"2010-02-20\",\n        \"expiry_date\": \"2025-02-20\",\n        \"bank_account_number\": \"1234567890\",\n        \"bank_name\": \"Example Bank\",\n        \"employer\": \"ABC Company\",\n        \"occupation\": \"Software Engineer\",\n        \"income\": \"$80,000 per year\",\n        \"marital_status\": \"Single\",\n        \"dependents\": 0,\n        \"risk_level\": \"Low\"\n    }\n}"
              }
            }
          },
          "supportedCurrencies": {
            "type": "array",
            "description": "Currencies in which the party can receive funds.",
            "items": {
              "title": "Currency",
              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ]
            },
            "minItems": 0,
            "maxItems": 16
          }
        },
        "required": [
          "partyIdInfo"
        ]
      },
      "payer": {
        "title": "PartyIdInfo",
        "type": "object",
        "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
        "properties": {
          "partyIdType": {
            "title": "PartyIdType",
            "type": "string",
            "enum": [
              "MSISDN",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
          },
          "partyIdentifier": {
            "title": "PartyIdentifier",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Identifier of the Party.",
            "example": "16135551212"
          },
          "partySubIdOrType": {
            "title": "PartySubIdOrType",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
          },
          "fspId": {
            "title": "FspId",
            "type": "string",
            "minLength": 1,
            "maxLength": 32,
            "description": "FSP identifier."
          },
          "extensionList": {
            "title": "ExtensionList",
            "type": "object",
            "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
            "properties": {
              "extension": {
                "type": "array",
                "items": {
                  "title": "Extension",
                  "type": "object",
                  "description": "Data model for the complex type Extension.",
                  "properties": {
                    "key": {
                      "title": "ExtensionKey",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "Extension key."
                    },
                    "value": {
                      "title": "ExtensionValue",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Extension value."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 16,
                "description": "Number of Extension elements."
              }
            },
            "required": [
              "extension"
            ]
          }
        },
        "required": [
          "partyIdType",
          "partyIdentifier"
        ]
      },
      "amount": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "transactionType": {
        "title": "TransactionType",
        "type": "object",
        "description": "Data model for the complex type TransactionType.",
        "properties": {
          "scenario": {
            "title": "TransactionScenario",
            "type": "string",
            "enum": [
              "DEPOSIT",
              "WITHDRAWAL",
              "TRANSFER",
              "PAYMENT",
              "REFUND"
            ],
            "description": "Below are the allowed values for the enumeration.\n- DEPOSIT - Used for performing a Cash-In (deposit) transaction. In a normal scenario, electronic funds are transferred from a Business account to a Consumer account, and physical cash is given from the Consumer to the Business User.\n- WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction. In a normal scenario, electronic funds are transferred from a Consumer’s account to a Business account, and physical cash is given from the Business User to the Consumer.\n- TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to Consumer) transaction.\n- PAYMENT - Usually used for performing a transaction from a Consumer to a Merchant or Organization, but could also be for a B2B (Business to Business) payment. The transaction could be online for a purchase in an Internet store, in a physical store where both the Consumer and Business User are present, a bill payment, a donation, and so on.\n- REFUND - Used for performing a refund of transaction.",
            "example": "DEPOSIT"
          },
          "subScenario": {
            "title": "TransactionSubScenario",
            "type": "string",
            "pattern": "^[A-Z_]{1,32}$",
            "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
            "example": "LOCALLY_DEFINED_SUBSCENARIO"
          },
          "initiator": {
            "title": "TransactionInitiator",
            "type": "string",
            "enum": [
              "PAYER",
              "PAYEE"
            ],
            "description": "Below are the allowed values for the enumeration.\n- PAYER - Sender of funds is initiating the transaction. The account to send from is either owned by the Payer or is connected to the Payer in some way.\n- PAYEE - Recipient of the funds is initiating the transaction by sending a transaction request. The Payer must approve the transaction, either automatically by a pre-generated OTP or by pre-approval of the Payee, or by manually approving in his or her own Device.",
            "example": "PAYEE"
          },
          "initiatorType": {
            "title": "TransactionInitiatorType",
            "type": "string",
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "description": "Below are the allowed values for the enumeration.\n- CONSUMER - Consumer is the initiator of the transaction.\n- AGENT - Agent is the initiator of the transaction.\n- BUSINESS - Business is the initiator of the transaction.\n- DEVICE - Device is the initiator of the transaction.",
            "example": "CONSUMER"
          },
          "refundInfo": {
            "title": "Refund",
            "type": "object",
            "description": "Data model for the complex type Refund.",
            "properties": {
              "originalTransactionId": {
                "title": "CorrelationId",
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
                "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
              },
              "refundReason": {
                "title": "RefundReason",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Reason for the refund.",
                "example": "Free text indicating reason for the refund."
              }
            },
            "required": [
              "originalTransactionId"
            ]
          },
          "balanceOfPayments": {
            "title": "BalanceOfPayments",
            "type": "string",
            "pattern": "^[1-9]\\d{2}$",
            "description": "(BopCode) The API data type [BopCode](https://www.imf.org/external/np/sta/bopcode/) is a JSON String of 3 characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed.",
            "example": "123"
          }
        },
        "required": [
          "scenario",
          "initiator",
          "initiatorType"
        ]
      },
      "note": {
        "title": "Note",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Memo assigned to transaction.",
        "example": "Note sent to Payee."
      },
      "geoCode": {
        "title": "GeoCode",
        "type": "object",
        "description": "Data model for the complex type GeoCode. Indicates the geographic location from where the transaction was initiated.",
        "properties": {
          "latitude": {
            "title": "Latitude",
            "type": "string",
            "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "example": "+45.4215"
          },
          "longitude": {
            "title": "Longitude",
            "type": "string",
            "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "example": "+75.6972"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "authenticationType": {
        "title": "AuthenticationType",
        "type": "string",
        "enum": [
          "OTP",
          "QRCODE",
          "U2F"
        ],
        "description": "Below are the allowed values for the enumeration AuthenticationType.\n- OTP - One-time password generated by the Payer FSP.\n- QRCODE - QR code used as One Time Password.\n- U2F - U2F is a new addition isolated to Thirdparty stream.",
        "example": "OTP"
      },
      "expiration": {
        "title": "DateTime",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
        "example": "2016-05-24T08:38:08.699-04:00"
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "transactionRequestId",
      "payee",
      "payer",
      "amount",
      "transactionType"
    ]
  },
  "TransactionScenario": {
    "title": "TransactionScenario",
    "type": "string",
    "enum": [
      "DEPOSIT",
      "WITHDRAWAL",
      "TRANSFER",
      "PAYMENT",
      "REFUND"
    ],
    "description": "Below are the allowed values for the enumeration.\n- DEPOSIT - Used for performing a Cash-In (deposit) transaction. In a normal scenario, electronic funds are transferred from a Business account to a Consumer account, and physical cash is given from the Consumer to the Business User.\n- WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction. In a normal scenario, electronic funds are transferred from a Consumer’s account to a Business account, and physical cash is given from the Business User to the Consumer.\n- TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to Consumer) transaction.\n- PAYMENT - Usually used for performing a transaction from a Consumer to a Merchant or Organization, but could also be for a B2B (Business to Business) payment. The transaction could be online for a purchase in an Internet store, in a physical store where both the Consumer and Business User are present, a bill payment, a donation, and so on.\n- REFUND - Used for performing a refund of transaction.",
    "example": "DEPOSIT"
  },
  "TransactionState": {
    "title": "TransactionState",
    "type": "string",
    "enum": [
      "RECEIVED",
      "PENDING",
      "COMPLETED",
      "REJECTED"
    ],
    "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Payee FSP has received the transaction from the Payer FSP.\n- PENDING - Payee FSP has validated the transaction.\n- COMPLETED - Payee FSP has successfully performed the transaction.\n- REJECTED - Payee FSP has failed to perform the transaction.",
    "example": "RECEIVED"
  },
  "TransactionSubScenario": {
    "title": "TransactionSubScenario",
    "type": "string",
    "pattern": "^[A-Z_]{1,32}$",
    "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
    "example": "LOCALLY_DEFINED_SUBSCENARIO"
  },
  "TransactionType": {
    "title": "TransactionType",
    "type": "object",
    "description": "Data model for the complex type TransactionType.",
    "properties": {
      "scenario": {
        "title": "TransactionScenario",
        "type": "string",
        "enum": [
          "DEPOSIT",
          "WITHDRAWAL",
          "TRANSFER",
          "PAYMENT",
          "REFUND"
        ],
        "description": "Below are the allowed values for the enumeration.\n- DEPOSIT - Used for performing a Cash-In (deposit) transaction. In a normal scenario, electronic funds are transferred from a Business account to a Consumer account, and physical cash is given from the Consumer to the Business User.\n- WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction. In a normal scenario, electronic funds are transferred from a Consumer’s account to a Business account, and physical cash is given from the Business User to the Consumer.\n- TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to Consumer) transaction.\n- PAYMENT - Usually used for performing a transaction from a Consumer to a Merchant or Organization, but could also be for a B2B (Business to Business) payment. The transaction could be online for a purchase in an Internet store, in a physical store where both the Consumer and Business User are present, a bill payment, a donation, and so on.\n- REFUND - Used for performing a refund of transaction.",
        "example": "DEPOSIT"
      },
      "subScenario": {
        "title": "TransactionSubScenario",
        "type": "string",
        "pattern": "^[A-Z_]{1,32}$",
        "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
        "example": "LOCALLY_DEFINED_SUBSCENARIO"
      },
      "initiator": {
        "title": "TransactionInitiator",
        "type": "string",
        "enum": [
          "PAYER",
          "PAYEE"
        ],
        "description": "Below are the allowed values for the enumeration.\n- PAYER - Sender of funds is initiating the transaction. The account to send from is either owned by the Payer or is connected to the Payer in some way.\n- PAYEE - Recipient of the funds is initiating the transaction by sending a transaction request. The Payer must approve the transaction, either automatically by a pre-generated OTP or by pre-approval of the Payee, or by manually approving in his or her own Device.",
        "example": "PAYEE"
      },
      "initiatorType": {
        "title": "TransactionInitiatorType",
        "type": "string",
        "enum": [
          "CONSUMER",
          "AGENT",
          "BUSINESS",
          "DEVICE"
        ],
        "description": "Below are the allowed values for the enumeration.\n- CONSUMER - Consumer is the initiator of the transaction.\n- AGENT - Agent is the initiator of the transaction.\n- BUSINESS - Business is the initiator of the transaction.\n- DEVICE - Device is the initiator of the transaction.",
        "example": "CONSUMER"
      },
      "refundInfo": {
        "title": "Refund",
        "type": "object",
        "description": "Data model for the complex type Refund.",
        "properties": {
          "originalTransactionId": {
            "title": "CorrelationId",
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
            "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          "refundReason": {
            "title": "RefundReason",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Reason for the refund.",
            "example": "Free text indicating reason for the refund."
          }
        },
        "required": [
          "originalTransactionId"
        ]
      },
      "balanceOfPayments": {
        "title": "BalanceOfPayments",
        "type": "string",
        "pattern": "^[1-9]\\d{2}$",
        "description": "(BopCode) The API data type [BopCode](https://www.imf.org/external/np/sta/bopcode/) is a JSON String of 3 characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed.",
        "example": "123"
      }
    },
    "required": [
      "scenario",
      "initiator",
      "initiatorType"
    ]
  },
  "TransactionsIDPutResponse": {
    "title": "TransactionsIDPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /transactions/{ID} callback.",
    "properties": {
      "completedTimestamp": {
        "title": "DateTime",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
        "example": "2016-05-24T08:38:08.699-04:00"
      },
      "transactionState": {
        "title": "TransactionState",
        "type": "string",
        "enum": [
          "RECEIVED",
          "PENDING",
          "COMPLETED",
          "REJECTED"
        ],
        "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Payee FSP has received the transaction from the Payer FSP.\n- PENDING - Payee FSP has validated the transaction.\n- COMPLETED - Payee FSP has successfully performed the transaction.\n- REJECTED - Payee FSP has failed to perform the transaction.",
        "example": "RECEIVED"
      },
      "code": {
        "title": "Code",
        "type": "string",
        "pattern": "^[0-9a-zA-Z]{4,32}$",
        "description": "Any code/token returned by the Payee FSP (TokenCode Type).",
        "example": "Test-Code"
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "transactionState"
    ]
  },
  "TransferState": {
    "title": "TransferState",
    "type": "string",
    "enum": [
      "RECEIVED",
      "RESERVED",
      "COMMITTED",
      "ABORTED"
    ],
    "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Next ledger has received the transfer.\n- RESERVED - Next ledger has reserved the transfer.\n- COMMITTED - Next ledger has successfully performed the transfer.\n- ABORTED - Next ledger has aborted the transfer due to a rejection or failure to perform the transfer.",
    "example": "RESERVED"
  },
  "TransfersIDPatchResponse": {
    "title": "TransfersIDPatchResponse",
    "type": "object",
    "description": "PATCH /transfers/{ID} object",
    "properties": {
      "completedTimestamp": {
        "title": "DateTime",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
        "example": "2016-05-24T08:38:08.699-04:00"
      },
      "transferState": {
        "title": "TransferState",
        "type": "string",
        "enum": [
          "RECEIVED",
          "RESERVED",
          "COMMITTED",
          "ABORTED"
        ],
        "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Next ledger has received the transfer.\n- RESERVED - Next ledger has reserved the transfer.\n- COMMITTED - Next ledger has successfully performed the transfer.\n- ABORTED - Next ledger has aborted the transfer due to a rejection or failure to perform the transfer.",
        "example": "RESERVED"
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "completedTimestamp",
      "transferState"
    ]
  },
  "TransfersIDPutResponse": {
    "title": "TransfersIDPutResponse",
    "type": "object",
    "description": "The object sent in the PUT /transfers/{ID} callback.",
    "properties": {
      "fulfilment": {
        "title": "IlpFulfilment",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]{43}$",
        "maxLength": 48,
        "description": "Fulfilment that must be attached to the transfer by the Payee.",
        "example": "WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8"
      },
      "completedTimestamp": {
        "title": "DateTime",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
        "example": "2016-05-24T08:38:08.699-04:00"
      },
      "transferState": {
        "title": "TransferState",
        "type": "string",
        "enum": [
          "RECEIVED",
          "RESERVED",
          "COMMITTED",
          "ABORTED"
        ],
        "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Next ledger has received the transfer.\n- RESERVED - Next ledger has reserved the transfer.\n- COMMITTED - Next ledger has successfully performed the transfer.\n- ABORTED - Next ledger has aborted the transfer due to a rejection or failure to perform the transfer.",
        "example": "RESERVED"
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "transferState"
    ]
  },
  "TransfersPostRequest": {
    "title": "TransfersPostRequest",
    "type": "object",
    "description": "The object sent in the POST /transfers request.",
    "properties": {
      "transferId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "payeeFsp": {
        "title": "FspId",
        "type": "string",
        "minLength": 1,
        "maxLength": 32,
        "description": "FSP identifier."
      },
      "payerFsp": {
        "title": "FspId",
        "type": "string",
        "minLength": 1,
        "maxLength": 32,
        "description": "FSP identifier."
      },
      "amount": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "ilpPacket": {
        "title": "IlpPacket",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]+[=]{0,2}$",
        "minLength": 1,
        "maxLength": 32768,
        "description": "Information for recipient (transport layer information).",
        "example": "AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"
      },
      "condition": {
        "title": "IlpCondition",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]{43}$",
        "maxLength": 48,
        "description": "Condition that must be attached to the transfer by the Payer."
      },
      "expiration": {
        "title": "DateTime",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
        "example": "2016-05-24T08:38:08.699-04:00"
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "transferId",
      "payeeFsp",
      "payerFsp",
      "amount",
      "ilpPacket",
      "condition",
      "expiration"
    ]
  },
  "U2FPIN": {
    "title": "U2FPIN",
    "type": "string",
    "pattern": "^\\S{1,64}$",
    "minLength": 1,
    "maxLength": 64,
    "description": "U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.\n"
  },
  "U2FPinValue": {
    "title": "U2FPinValue",
    "type": "object",
    "description": "U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.\n",
    "properties": {
      "pinValue": {
        "allOf": [
          {
            "title": "U2FPIN",
            "type": "string",
            "pattern": "^\\S{1,64}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.\n"
          }
        ],
        "description": "U2F challenge-response."
      },
      "counter": {
        "allOf": [
          {
            "title": "Integer",
            "type": "string",
            "pattern": "^[1-9]\\d*$",
            "description": "The API data type Integer is a JSON String consisting of digits only. Negative numbers and leading zeroes are not allowed. The data type is always limited to a specific number of digits."
          }
        ],
        "description": "Sequential counter used for cloning detection. Present only for U2F authentication."
      }
    },
    "required": [
      "pinValue",
      "counter"
    ]
  },
  "UndefinedEnum": {
    "title": "UndefinedEnum",
    "type": "string",
    "pattern": "^[A-Z_]{1,32}$",
    "description": "The API data type UndefinedEnum is a JSON String consisting of 1 to 32 uppercase characters including an underscore character (_)."
  }
}