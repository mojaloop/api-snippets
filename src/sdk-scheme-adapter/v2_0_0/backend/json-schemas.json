{
  "DateOfBirth": {
    "title": "DateofBirth (type Date)",
    "type": "string",
    "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
    "description": "Date of Birth of the Party.",
    "example": "1966-06-16"
  },
  "FirstName": {
    "title": "FirstName",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
    "description": "First name of the Party (Name Type).",
    "example": "Henrik"
  },
  "FspId": {
    "title": "FspId",
    "type": "string",
    "minLength": 1,
    "maxLength": 32,
    "description": "FSP identifier."
  },
  "IndividualQuote": {
    "description": "Data model for individual quote in a bulk quote request.",
    "properties": {
      "amount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "amountType": {
        "enum": [
          "SEND",
          "RECEIVE"
        ],
        "type": "string"
      },
      "currency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "feesAmount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "feesCurrency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "initiator": {
        "enum": [
          "PAYER",
          "PAYEE"
        ],
        "type": "string"
      },
      "initiatorType": {
        "enum": [
          "CONSUMER",
          "AGENT",
          "BUSINESS",
          "DEVICE"
        ],
        "type": "string"
      },
      "note": {
        "description": "An optional note associated with the quote.",
        "maxLength": 128,
        "minLength": 1,
        "type": "string"
      },
      "quoteId": {
        "description": "A Mojaloop API quote identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "subScenario": {
        "title": "TransactionSubScenario",
        "type": "string",
        "pattern": "^[A-Z_]{1,32}$",
        "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
        "example": "LOCALLY_DEFINED_SUBSCENARIO"
      },
      "to": {
        "properties": {
          "dateOfBirth": {
            "description": "Date of birth in the form YYYY-MM-DD.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "type": "string"
          },
          "displayName": {
            "description": "Display name of the sender, if known.",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "firstName": {
            "description": "Party first name.",
            "type": "string"
          },
          "fspId": {
            "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
            "type": "string"
          },
          "idSubValue": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "idType": {
            "enum": [
              "MSISDN",
              "ACCOUNT_NO",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "type": "string"
          },
          "idValue": {
            "description": "The identifier string used to identify the sender.",
            "type": "string"
          },
          "lastName": {
            "description": "Party last name.",
            "type": "string"
          },
          "merchantClassificationCode": {
            "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
            "type": "string"
          },
          "middleName": {
            "description": "Party middle name.",
            "type": "string"
          },
          "type": {
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "type": "string"
          }
        },
        "required": [
          "idType",
          "idValue"
        ],
        "type": "object"
      },
      "transactionId": {
        "description": "ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote.",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "transactionType": {
        "enum": [
          "TRANSFER",
          "DEPOSIT",
          "PAYMENT"
        ],
        "type": "string"
      }
    },
    "required": [
      "quoteId",
      "transactionId",
      "to",
      "amountType",
      "amount",
      "currency",
      "transactionType",
      "initiator",
      "initiatorType"
    ],
    "type": "object"
  },
  "IndividualQuoteResultFailed": {
    "description": "Data model for failed individual quote in a bulk quote response.",
    "properties": {
      "errorResponse": {
        "properties": {
          "message": {
            "description": "Error message text",
            "type": "string"
          },
          "statusCode": {
            "description": "Backend error code from FSP. Ideally, statusCode is FSPIOP conforming. SDK will use status code to retrieve an FSPIOP error with the same code.\nOtherwise, a suitable generic FSPIOP will be used with the errorResponse in the FSPIOP error message.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "quoteId": {
        "description": "A Mojaloop API quote identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      }
    },
    "required": [
      "quoteId",
      "errorResponse"
    ],
    "type": "object"
  },
  "IndividualQuoteResultSuccess": {
    "description": "Data model for successful individual quote in a bulk quote response.",
    "properties": {
      "payeeFspCommissionAmount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "payeeFspCommissionAmountCurrency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "payeeFspFeeAmount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "payeeFspFeeAmountCurrency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "payeeReceiveAmount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "payeeReceiveAmountCurrency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "quoteId": {
        "description": "A Mojaloop API quote identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "transferAmount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "transferAmountCurrency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      }
    },
    "required": [
      "quoteId"
    ],
    "type": "object"
  },
  "IndividualTransfer": {
    "description": "Data model for individual transfer in a bulk transfer request.",
    "properties": {
      "amount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "amountType": {
        "enum": [
          "SEND",
          "RECEIVE"
        ],
        "type": "string"
      },
      "currency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "feesAmount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "feesCurrency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "initiator": {
        "enum": [
          "PAYER",
          "PAYEE"
        ],
        "type": "string"
      },
      "initiatorType": {
        "enum": [
          "CONSUMER",
          "AGENT",
          "BUSINESS",
          "DEVICE"
        ],
        "type": "string"
      },
      "note": {
        "description": "An optional note associated with the quote.",
        "maxLength": 128,
        "minLength": 1,
        "type": "string"
      },
      "subScenario": {
        "title": "TransactionSubScenario",
        "type": "string",
        "pattern": "^[A-Z_]{1,32}$",
        "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
        "example": "LOCALLY_DEFINED_SUBSCENARIO"
      },
      "to": {
        "properties": {
          "dateOfBirth": {
            "description": "Date of birth in the form YYYY-MM-DD.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "type": "string"
          },
          "displayName": {
            "description": "Display name of the sender, if known.",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "firstName": {
            "description": "Party first name.",
            "type": "string"
          },
          "fspId": {
            "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
            "type": "string"
          },
          "idSubValue": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "idType": {
            "enum": [
              "MSISDN",
              "ACCOUNT_NO",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "type": "string"
          },
          "idValue": {
            "description": "The identifier string used to identify the sender.",
            "type": "string"
          },
          "lastName": {
            "description": "Party last name.",
            "type": "string"
          },
          "merchantClassificationCode": {
            "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
            "type": "string"
          },
          "middleName": {
            "description": "Party middle name.",
            "type": "string"
          },
          "type": {
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "type": "string"
          }
        },
        "required": [
          "idType",
          "idValue"
        ],
        "type": "object"
      },
      "transactionType": {
        "enum": [
          "TRANSFER",
          "DEPOSIT",
          "PAYMENT"
        ],
        "type": "string"
      },
      "transferId": {
        "description": "A Mojaloop API transfer identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      }
    },
    "required": [
      "transferId",
      "amount",
      "currency"
    ],
    "type": "object"
  },
  "IndividualTransferResult": {
    "description": "Data model for individual transfer in a bulk transfer response.",
    "properties": {
      "errorResponse": {
        "properties": {
          "message": {
            "description": "Error message text",
            "type": "string"
          },
          "statusCode": {
            "description": "Backend error code from FSP. Ideally, statusCode is FSPIOP conforming. SDK will use status code to retrieve an FSPIOP error with the same code.\nOtherwise, a suitable generic FSPIOP will be used with the errorResponse in the FSPIOP error message.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "extensionList": {
        "items": {
          "properties": {
            "key": {
              "maxLength": 32,
              "minLength": 1,
              "type": "string"
            },
            "value": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            }
          },
          "type": "object"
        },
        "maxItems": 16,
        "minItems": 0,
        "type": "array"
      },
      "transferId": {
        "description": "A Mojaloop API transfer identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      }
    },
    "required": [
      "transferId"
    ],
    "type": "object"
  },
  "LastName": {
    "title": "LastName",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
    "description": "Last name of the Party (Name Type).",
    "example": "Karlsson"
  },
  "MerchantClassificationCode": {
    "title": "MerchantClassificationCode",
    "type": "string",
    "pattern": "^[\\d]{1,4}$",
    "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
  },
  "MiddleName": {
    "title": "MiddleName",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
    "description": "Middle name of the Party (Name Type).",
    "example": "Johannes"
  },
  "amountCurrency": {
    "description": "Object containing Amount and Currency of the transfer.",
    "properties": {
      "amount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "currency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      }
    },
    "required": [
      "amount",
      "currency"
    ],
    "type": "object"
  },
  "amountType": {
    "enum": [
      "SEND",
      "RECEIVE"
    ],
    "type": "string"
  },
  "bulkQuoteId": {
    "description": "A Mojaloop API bulk quote identifier (UUID).",
    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
    "type": "string"
  },
  "bulkQuoteRequest": {
    "description": "A request for a bulk quote.",
    "properties": {
      "bulkQuoteId": {
        "description": "A Mojaloop API bulk quote identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "expiration": {
        "description": "An ISO-8601 formatted timestamp.",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "type": "string"
      },
      "from": {
        "properties": {
          "dateOfBirth": {
            "description": "Date of birth in the form YYYY-MM-DD.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "type": "string"
          },
          "displayName": {
            "description": "Display name of the sender, if known.",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "firstName": {
            "description": "Party first name.",
            "type": "string"
          },
          "fspId": {
            "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
            "type": "string"
          },
          "idSubValue": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "idType": {
            "enum": [
              "MSISDN",
              "ACCOUNT_NO",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "type": "string"
          },
          "idValue": {
            "description": "The identifier string used to identify the sender.",
            "type": "string"
          },
          "lastName": {
            "description": "Party last name.",
            "type": "string"
          },
          "merchantClassificationCode": {
            "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
            "type": "string"
          },
          "middleName": {
            "description": "Party middle name.",
            "type": "string"
          },
          "type": {
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "type": "string"
          }
        },
        "required": [
          "idType",
          "idValue"
        ],
        "type": "object"
      },
      "geoCode": {
        "description": "Indicates the geographic location from where the transaction was initiated.",
        "properties": {
          "latitude": {
            "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "type": "string"
          },
          "longitude": {
            "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "type": "string"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object"
      },
      "individualQuotes": {
        "items": {
          "description": "Data model for individual quote in a bulk quote request.",
          "properties": {
            "amount": {
              "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
              "type": "string"
            },
            "amountType": {
              "enum": [
                "SEND",
                "RECEIVE"
              ],
              "type": "string"
            },
            "currency": {
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ],
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "feesAmount": {
              "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
              "type": "string"
            },
            "feesCurrency": {
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ],
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "initiator": {
              "enum": [
                "PAYER",
                "PAYEE"
              ],
              "type": "string"
            },
            "initiatorType": {
              "enum": [
                "CONSUMER",
                "AGENT",
                "BUSINESS",
                "DEVICE"
              ],
              "type": "string"
            },
            "note": {
              "description": "An optional note associated with the quote.",
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            },
            "quoteId": {
              "description": "A Mojaloop API quote identifier (UUID).",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "type": "string"
            },
            "subScenario": {
              "title": "TransactionSubScenario",
              "type": "string",
              "pattern": "^[A-Z_]{1,32}$",
              "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
              "example": "LOCALLY_DEFINED_SUBSCENARIO"
            },
            "to": {
              "properties": {
                "dateOfBirth": {
                  "description": "Date of birth in the form YYYY-MM-DD.",
                  "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                  "type": "string"
                },
                "displayName": {
                  "description": "Display name of the sender, if known.",
                  "type": "string"
                },
                "extensionList": {
                  "items": {
                    "properties": {
                      "key": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string"
                      },
                      "value": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "maxItems": 16,
                  "minItems": 0,
                  "type": "array"
                },
                "firstName": {
                  "description": "Party first name.",
                  "type": "string"
                },
                "fspId": {
                  "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
                  "type": "string"
                },
                "idSubValue": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                },
                "idType": {
                  "enum": [
                    "MSISDN",
                    "ACCOUNT_NO",
                    "EMAIL",
                    "PERSONAL_ID",
                    "BUSINESS",
                    "DEVICE",
                    "ACCOUNT_ID",
                    "IBAN",
                    "ALIAS"
                  ],
                  "type": "string"
                },
                "idValue": {
                  "description": "The identifier string used to identify the sender.",
                  "type": "string"
                },
                "lastName": {
                  "description": "Party last name.",
                  "type": "string"
                },
                "merchantClassificationCode": {
                  "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
                  "type": "string"
                },
                "middleName": {
                  "description": "Party middle name.",
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "CONSUMER",
                    "AGENT",
                    "BUSINESS",
                    "DEVICE"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "idType",
                "idValue"
              ],
              "type": "object"
            },
            "transactionId": {
              "description": "ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote.",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "type": "string"
            },
            "transactionType": {
              "enum": [
                "TRANSFER",
                "DEPOSIT",
                "PAYMENT"
              ],
              "type": "string"
            }
          },
          "required": [
            "quoteId",
            "transactionId",
            "to",
            "amountType",
            "amount",
            "currency",
            "transactionType",
            "initiator",
            "initiatorType"
          ],
          "type": "object"
        },
        "maxItems": 1000,
        "minItems": 1,
        "type": "array"
      }
    },
    "required": [
      "bulkQuoteId",
      "from",
      "individualQuotes"
    ],
    "type": "object"
  },
  "bulkQuoteResponse": {
    "description": "A response to a request for a bulk quote.",
    "properties": {
      "bulkQuoteId": {
        "description": "A Mojaloop API bulk quote identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "expiration": {
        "description": "An ISO-8601 formatted timestamp.",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "type": "string"
      },
      "individualQuoteResults": {
        "description": "Fees for each individual transaction, if any of them are charged per transaction.",
        "items": {
          "oneOf": [
            {
              "description": "Data model for successful individual quote in a bulk quote response.",
              "properties": {
                "payeeFspCommissionAmount": {
                  "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                  "type": "string"
                },
                "payeeFspCommissionAmountCurrency": {
                  "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GGP",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "IMP",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JEP",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SPL",
                    "SRD",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TVD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPF",
                    "XTS",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWD"
                  ],
                  "maxLength": 3,
                  "minLength": 3,
                  "type": "string"
                },
                "payeeFspFeeAmount": {
                  "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                  "type": "string"
                },
                "payeeFspFeeAmountCurrency": {
                  "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GGP",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "IMP",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JEP",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SPL",
                    "SRD",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TVD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPF",
                    "XTS",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWD"
                  ],
                  "maxLength": 3,
                  "minLength": 3,
                  "type": "string"
                },
                "payeeReceiveAmount": {
                  "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                  "type": "string"
                },
                "payeeReceiveAmountCurrency": {
                  "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GGP",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "IMP",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JEP",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SPL",
                    "SRD",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TVD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPF",
                    "XTS",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWD"
                  ],
                  "maxLength": 3,
                  "minLength": 3,
                  "type": "string"
                },
                "quoteId": {
                  "description": "A Mojaloop API quote identifier (UUID).",
                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "transferAmount": {
                  "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                  "type": "string"
                },
                "transferAmountCurrency": {
                  "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GGP",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "IMP",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JEP",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SPL",
                    "SRD",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TVD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPF",
                    "XTS",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWD"
                  ],
                  "maxLength": 3,
                  "minLength": 3,
                  "type": "string"
                }
              },
              "required": [
                "quoteId"
              ],
              "type": "object"
            },
            {
              "description": "Data model for failed individual quote in a bulk quote response.",
              "properties": {
                "errorResponse": {
                  "properties": {
                    "message": {
                      "description": "Error message text",
                      "type": "string"
                    },
                    "statusCode": {
                      "description": "Backend error code from FSP. Ideally, statusCode is FSPIOP conforming. SDK will use status code to retrieve an FSPIOP error with the same code.\nOtherwise, a suitable generic FSPIOP will be used with the errorResponse in the FSPIOP error message.\n",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "quoteId": {
                  "description": "A Mojaloop API quote identifier (UUID).",
                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "type": "string"
                }
              },
              "required": [
                "quoteId",
                "errorResponse"
              ],
              "type": "object"
            }
          ]
        },
        "maxItems": 1000,
        "minItems": 1,
        "type": "array"
      }
    },
    "required": [
      "bulkQuoteId",
      "individualQuoteResults"
    ],
    "type": "object"
  },
  "bulkTransferId": {
    "description": "A Mojaloop API transfer identifier (UUID).",
    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
    "type": "string"
  },
  "bulkTransferRequest": {
    "properties": {
      "bulkQuote": {
        "description": "A response to a request for a bulk quote.",
        "properties": {
          "bulkQuoteId": {
            "description": "A Mojaloop API bulk quote identifier (UUID).",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "type": "string"
          },
          "expiration": {
            "description": "An ISO-8601 formatted timestamp.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
            "type": "string"
          },
          "individualQuoteResults": {
            "description": "Fees for each individual transaction, if any of them are charged per transaction.",
            "items": {
              "oneOf": [
                {
                  "description": "Data model for successful individual quote in a bulk quote response.",
                  "properties": {
                    "payeeFspCommissionAmount": {
                      "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                      "type": "string"
                    },
                    "payeeFspCommissionAmountCurrency": {
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "XTS",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWD"
                      ],
                      "maxLength": 3,
                      "minLength": 3,
                      "type": "string"
                    },
                    "payeeFspFeeAmount": {
                      "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                      "type": "string"
                    },
                    "payeeFspFeeAmountCurrency": {
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "XTS",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWD"
                      ],
                      "maxLength": 3,
                      "minLength": 3,
                      "type": "string"
                    },
                    "payeeReceiveAmount": {
                      "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                      "type": "string"
                    },
                    "payeeReceiveAmountCurrency": {
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "XTS",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWD"
                      ],
                      "maxLength": 3,
                      "minLength": 3,
                      "type": "string"
                    },
                    "quoteId": {
                      "description": "A Mojaloop API quote identifier (UUID).",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "transferAmount": {
                      "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                      "type": "string"
                    },
                    "transferAmountCurrency": {
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "XTS",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWD"
                      ],
                      "maxLength": 3,
                      "minLength": 3,
                      "type": "string"
                    }
                  },
                  "required": [
                    "quoteId"
                  ],
                  "type": "object"
                },
                {
                  "description": "Data model for failed individual quote in a bulk quote response.",
                  "properties": {
                    "errorResponse": {
                      "properties": {
                        "message": {
                          "description": "Error message text",
                          "type": "string"
                        },
                        "statusCode": {
                          "description": "Backend error code from FSP. Ideally, statusCode is FSPIOP conforming. SDK will use status code to retrieve an FSPIOP error with the same code.\nOtherwise, a suitable generic FSPIOP will be used with the errorResponse in the FSPIOP error message.\n",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "quoteId": {
                      "description": "A Mojaloop API quote identifier (UUID).",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                      "type": "string"
                    }
                  },
                  "required": [
                    "quoteId",
                    "errorResponse"
                  ],
                  "type": "object"
                }
              ]
            },
            "maxItems": 1000,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "bulkQuoteId",
          "individualQuoteResults"
        ],
        "type": "object"
      },
      "bulkTransferId": {
        "description": "A Mojaloop API transfer identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "from": {
        "properties": {
          "dateOfBirth": {
            "description": "Date of birth in the form YYYY-MM-DD.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "type": "string"
          },
          "displayName": {
            "description": "Display name of the sender, if known.",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "firstName": {
            "description": "Party first name.",
            "type": "string"
          },
          "fspId": {
            "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
            "type": "string"
          },
          "idSubValue": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "idType": {
            "enum": [
              "MSISDN",
              "ACCOUNT_NO",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "type": "string"
          },
          "idValue": {
            "description": "The identifier string used to identify the sender.",
            "type": "string"
          },
          "lastName": {
            "description": "Party last name.",
            "type": "string"
          },
          "merchantClassificationCode": {
            "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
            "type": "string"
          },
          "middleName": {
            "description": "Party middle name.",
            "type": "string"
          },
          "type": {
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "type": "string"
          }
        },
        "required": [
          "idType",
          "idValue"
        ],
        "type": "object"
      },
      "individualTransfers": {
        "items": {
          "description": "Data model for individual transfer in a bulk transfer request.",
          "properties": {
            "amount": {
              "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
              "type": "string"
            },
            "amountType": {
              "enum": [
                "SEND",
                "RECEIVE"
              ],
              "type": "string"
            },
            "currency": {
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ],
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "feesAmount": {
              "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
              "type": "string"
            },
            "feesCurrency": {
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ],
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "initiator": {
              "enum": [
                "PAYER",
                "PAYEE"
              ],
              "type": "string"
            },
            "initiatorType": {
              "enum": [
                "CONSUMER",
                "AGENT",
                "BUSINESS",
                "DEVICE"
              ],
              "type": "string"
            },
            "note": {
              "description": "An optional note associated with the quote.",
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            },
            "subScenario": {
              "title": "TransactionSubScenario",
              "type": "string",
              "pattern": "^[A-Z_]{1,32}$",
              "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
              "example": "LOCALLY_DEFINED_SUBSCENARIO"
            },
            "to": {
              "properties": {
                "dateOfBirth": {
                  "description": "Date of birth in the form YYYY-MM-DD.",
                  "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                  "type": "string"
                },
                "displayName": {
                  "description": "Display name of the sender, if known.",
                  "type": "string"
                },
                "extensionList": {
                  "items": {
                    "properties": {
                      "key": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string"
                      },
                      "value": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "maxItems": 16,
                  "minItems": 0,
                  "type": "array"
                },
                "firstName": {
                  "description": "Party first name.",
                  "type": "string"
                },
                "fspId": {
                  "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
                  "type": "string"
                },
                "idSubValue": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                },
                "idType": {
                  "enum": [
                    "MSISDN",
                    "ACCOUNT_NO",
                    "EMAIL",
                    "PERSONAL_ID",
                    "BUSINESS",
                    "DEVICE",
                    "ACCOUNT_ID",
                    "IBAN",
                    "ALIAS"
                  ],
                  "type": "string"
                },
                "idValue": {
                  "description": "The identifier string used to identify the sender.",
                  "type": "string"
                },
                "lastName": {
                  "description": "Party last name.",
                  "type": "string"
                },
                "merchantClassificationCode": {
                  "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
                  "type": "string"
                },
                "middleName": {
                  "description": "Party middle name.",
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "CONSUMER",
                    "AGENT",
                    "BUSINESS",
                    "DEVICE"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "idType",
                "idValue"
              ],
              "type": "object"
            },
            "transactionType": {
              "enum": [
                "TRANSFER",
                "DEPOSIT",
                "PAYMENT"
              ],
              "type": "string"
            },
            "transferId": {
              "description": "A Mojaloop API transfer identifier (UUID).",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "type": "string"
            }
          },
          "required": [
            "transferId",
            "amount",
            "currency"
          ],
          "type": "object"
        },
        "maxItems": 1000,
        "minItems": 1,
        "type": "array"
      }
    },
    "required": [
      "bulkTransferId",
      "individualTransfers"
    ],
    "type": "object"
  },
  "bulkTransferResponse": {
    "properties": {
      "bulkTransferId": {
        "description": "A Mojaloop API transfer identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "homeTransactionId": {
        "description": "Transaction ID from the DFSP backend, used to reconcile transactions between the switch and DFSP backend systems.",
        "type": "string"
      },
      "individualTransferResults": {
        "items": {
          "description": "Data model for individual transfer in a bulk transfer response.",
          "properties": {
            "errorResponse": {
              "properties": {
                "message": {
                  "description": "Error message text",
                  "type": "string"
                },
                "statusCode": {
                  "description": "Backend error code from FSP. Ideally, statusCode is FSPIOP conforming. SDK will use status code to retrieve an FSPIOP error with the same code.\nOtherwise, a suitable generic FSPIOP will be used with the errorResponse in the FSPIOP error message.\n",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "extensionList": {
              "items": {
                "properties": {
                  "key": {
                    "maxLength": 32,
                    "minLength": 1,
                    "type": "string"
                  },
                  "value": {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "maxItems": 16,
              "minItems": 0,
              "type": "array"
            },
            "transferId": {
              "description": "A Mojaloop API transfer identifier (UUID).",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "type": "string"
            }
          },
          "required": [
            "transferId"
          ],
          "type": "object"
        },
        "maxItems": 1000,
        "minItems": 1,
        "type": "array"
      }
    },
    "required": [
      "homeTransactionId"
    ],
    "type": "object"
  },
  "currency": {
    "enum": [
      "AED",
      "AFN",
      "ALL",
      "AMD",
      "ANG",
      "AOA",
      "ARS",
      "AUD",
      "AWG",
      "AZN",
      "BAM",
      "BBD",
      "BDT",
      "BGN",
      "BHD",
      "BIF",
      "BMD",
      "BND",
      "BOB",
      "BRL",
      "BSD",
      "BTN",
      "BWP",
      "BYN",
      "BZD",
      "CAD",
      "CDF",
      "CHF",
      "CLP",
      "CNY",
      "COP",
      "CRC",
      "CUC",
      "CUP",
      "CVE",
      "CZK",
      "DJF",
      "DKK",
      "DOP",
      "DZD",
      "EGP",
      "ERN",
      "ETB",
      "EUR",
      "FJD",
      "FKP",
      "GBP",
      "GEL",
      "GGP",
      "GHS",
      "GIP",
      "GMD",
      "GNF",
      "GTQ",
      "GYD",
      "HKD",
      "HNL",
      "HRK",
      "HTG",
      "HUF",
      "IDR",
      "ILS",
      "IMP",
      "INR",
      "IQD",
      "IRR",
      "ISK",
      "JEP",
      "JMD",
      "JOD",
      "JPY",
      "KES",
      "KGS",
      "KHR",
      "KMF",
      "KPW",
      "KRW",
      "KWD",
      "KYD",
      "KZT",
      "LAK",
      "LBP",
      "LKR",
      "LRD",
      "LSL",
      "LYD",
      "MAD",
      "MDL",
      "MGA",
      "MKD",
      "MMK",
      "MNT",
      "MOP",
      "MRO",
      "MUR",
      "MVR",
      "MWK",
      "MXN",
      "MYR",
      "MZN",
      "NAD",
      "NGN",
      "NIO",
      "NOK",
      "NPR",
      "NZD",
      "OMR",
      "PAB",
      "PEN",
      "PGK",
      "PHP",
      "PKR",
      "PLN",
      "PYG",
      "QAR",
      "RON",
      "RSD",
      "RUB",
      "RWF",
      "SAR",
      "SBD",
      "SCR",
      "SDG",
      "SEK",
      "SGD",
      "SHP",
      "SLL",
      "SOS",
      "SPL",
      "SRD",
      "STD",
      "SVC",
      "SYP",
      "SZL",
      "THB",
      "TJS",
      "TMT",
      "TND",
      "TOP",
      "TRY",
      "TTD",
      "TVD",
      "TWD",
      "TZS",
      "UAH",
      "UGX",
      "USD",
      "UYU",
      "UZS",
      "VEF",
      "VND",
      "VUV",
      "WST",
      "XAF",
      "XCD",
      "XDR",
      "XOF",
      "XPF",
      "XTS",
      "XXX",
      "YER",
      "ZAR",
      "ZMW",
      "ZWD"
    ],
    "maxLength": 3,
    "minLength": 3,
    "type": "string"
  },
  "dateOfBirth": {
    "description": "Date of birth in the form YYYY-MM-DD.",
    "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
    "type": "string"
  },
  "errorCode": {
    "description": "The API data type errorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represents the specific error.\n",
    "pattern": "^[1-9]\\d{3}$",
    "title": "ErrorCode",
    "type": "string"
  },
  "errorDescription": {
    "description": "Error description string.",
    "maxLength": 128,
    "minLength": 1,
    "title": "ErrorDescription",
    "type": "string"
  },
  "errorInformation": {
    "description": "A Mojaloop API error information construct.",
    "properties": {
      "errorCode": {
        "description": "The API data type errorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represents the specific error.\n",
        "pattern": "^[1-9]\\d{3}$",
        "title": "ErrorCode",
        "type": "string"
      },
      "errorDescription": {
        "description": "Error description string.",
        "maxLength": 128,
        "minLength": 1,
        "title": "ErrorDescription",
        "type": "string"
      },
      "extensionList": {
        "description": "Data model for the complex type ExtensionList.",
        "properties": {
          "extension": {
            "description": "Number of Extension elements.",
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "extension"
        ],
        "type": "object"
      }
    },
    "required": [
      "errorCode",
      "errorDescription"
    ],
    "title": "ErrorInformation",
    "type": "object"
  },
  "errorResponse": {
    "properties": {
      "message": {
        "description": "Error message text",
        "type": "string"
      },
      "statusCode": {
        "description": "Backend error code from FSP. Ideally, statusCode is FSPIOP conforming. SDK will use status code to retrieve an FSPIOP error with the same code.\nOtherwise, a suitable generic FSPIOP will be used with the errorResponse in the FSPIOP error message.\n",
        "type": "string"
      }
    },
    "type": "object"
  },
  "extensionItem": {
    "properties": {
      "key": {
        "maxLength": 32,
        "minLength": 1,
        "type": "string"
      },
      "value": {
        "maxLength": 128,
        "minLength": 1,
        "type": "string"
      }
    },
    "type": "object"
  },
  "extensionList": {
    "items": {
      "properties": {
        "key": {
          "maxLength": 32,
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "maxLength": 128,
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "maxItems": 16,
    "minItems": 0,
    "type": "array"
  },
  "extensionListComplex": {
    "description": "Data model for the complex type ExtensionList.",
    "properties": {
      "extension": {
        "description": "Number of Extension elements.",
        "items": {
          "properties": {
            "key": {
              "maxLength": 32,
              "minLength": 1,
              "type": "string"
            },
            "value": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            }
          },
          "type": "object"
        },
        "maxItems": 16,
        "minItems": 1,
        "type": "array"
      }
    },
    "required": [
      "extension"
    ],
    "type": "object"
  },
  "fspId": {
    "description": "FSP identifier.",
    "maxLength": 32,
    "minLength": 1,
    "type": "string"
  },
  "fulfilNotification": {
    "description": "PUT /transfers/{transferId} object.",
    "properties": {
      "currentState": {
        "enum": [
          "ERROR_OCCURRED",
          "WAITING_FOR_PARTY_ACCEPTANCE",
          "WAITING_FOR_QUOTE_ACCEPTANCE",
          "COMPLETED"
        ],
        "type": "string"
      },
      "direction": {
        "enum": [
          "INBOUND"
        ],
        "type": "string"
      },
      "finalNotification": {
        "properties": {
          "completedTimestamp": {
            "description": "An ISO-8601 formatted timestamp.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "transferState": {
            "description": "Below are the allowed values for the enumeration - RECEIVED DFSP has received the transfer. - RESERVED DFSP has reserved the transfer. - COMMITTED DFSP has successfully performed the transfer. - ABORTED DFSP has aborted the transfer due a rejection or failure to perform the transfer.\n",
            "enum": [
              "RECEIVED",
              "RESERVED",
              "COMMITTED",
              "ABORTED"
            ],
            "type": "string"
          }
        },
        "required": [
          "completedTimestamp",
          "transferState"
        ],
        "type": "object"
      },
      "fulfil": {
        "properties": {
          "body": {
            "type": "object"
          },
          "headers": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "initiatedTimestamp": {
        "description": "An ISO-8601 formatted timestamp.",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "type": "string"
      },
      "lastError": {
        "type": "object",
        "description": "This may be a Mojaloop API error returned from another entity in the scheme or an object representing other types of error e.g. exceptions that may occur inside the scheme adapter.",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "description": "The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response."
          },
          "mojaloopError": {
            "type": "object",
            "properties": {
              "errorInformation": {
                "title": "ErrorInformation",
                "type": "object",
                "description": "Data model for the complex type ErrorInformation.",
                "properties": {
                  "errorCode": {
                    "title": "ErrorCode",
                    "type": "string",
                    "pattern": "^[1-9]\\d{3}$",
                    "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                    "example": "5100"
                  },
                  "errorDescription": {
                    "title": "ErrorDescription",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "description": "Error description string."
                  },
                  "extensionList": {
                    "title": "ExtensionList",
                    "type": "object",
                    "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                    "properties": {
                      "extension": {
                        "type": "array",
                        "items": {
                          "title": "Extension",
                          "type": "object",
                          "description": "Data model for the complex type Extension.",
                          "properties": {
                            "key": {
                              "title": "ExtensionKey",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 32,
                              "description": "Extension key."
                            },
                            "value": {
                              "title": "ExtensionValue",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 128,
                              "description": "Extension value."
                            }
                          },
                          "required": [
                            "key",
                            "value"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 16,
                        "description": "Number of Extension elements."
                      }
                    },
                    "required": [
                      "extension"
                    ]
                  }
                },
                "required": [
                  "errorCode",
                  "errorDescription"
                ]
              }
            }
          }
        }
      },
      "prepare": {
        "properties": {
          "body": {
            "type": "object"
          },
          "headers": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "quote": {
        "properties": {
          "fulfilment": {
            "type": "string"
          },
          "internalRequest": {
            "type": "object"
          },
          "mojaloopResponse": {
            "type": "object"
          },
          "request": {
            "type": "object"
          },
          "response": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "quoteRequest": {
        "properties": {
          "body": {
            "type": "object"
          },
          "headers": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "quoteResponse": {
        "properties": {
          "body": {
            "type": "object"
          },
          "headers": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "transferId": {
        "description": "A Mojaloop API transfer identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      }
    },
    "title": "TransfersIDPatchResponse",
    "type": "object"
  },
  "generalError": {
    "description": "This object may represent a number of different error object types and so its properties may vary significantly.",
    "type": "object"
  },
  "geoCode": {
    "description": "Indicates the geographic location from where the transaction was initiated.",
    "properties": {
      "latitude": {
        "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
        "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
        "type": "string"
      },
      "longitude": {
        "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
        "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
        "type": "string"
      }
    },
    "required": [
      "latitude",
      "longitude"
    ],
    "type": "object"
  },
  "idSubValue": {
    "maxLength": 128,
    "minLength": 1,
    "type": "string"
  },
  "idType": {
    "enum": [
      "MSISDN",
      "ACCOUNT_NO",
      "EMAIL",
      "PERSONAL_ID",
      "BUSINESS",
      "DEVICE",
      "ACCOUNT_ID",
      "IBAN",
      "ALIAS"
    ],
    "type": "string"
  },
  "idValue": {
    "description": "Identifier of the party.",
    "maxLength": 128,
    "minLength": 1,
    "type": "string"
  },
  "ilpPacketData": {
    "description": "Object containing transfer object.",
    "properties": {
      "amount": {
        "description": "Object containing Amount and Currency of the transfer.",
        "properties": {
          "amount": {
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "type": "string"
          },
          "currency": {
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ],
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency"
        ],
        "type": "object"
      },
      "payee": {
        "title": "Party",
        "type": "object",
        "description": "Data model for the complex type Party.",
        "properties": {
          "partyIdInfo": {
            "title": "PartyIdInfo",
            "type": "object",
            "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
            "properties": {
              "partyIdType": {
                "title": "PartyIdType",
                "type": "string",
                "enum": [
                  "MSISDN",
                  "EMAIL",
                  "PERSONAL_ID",
                  "BUSINESS",
                  "DEVICE",
                  "ACCOUNT_ID",
                  "IBAN",
                  "ALIAS"
                ],
                "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
              },
              "partyIdentifier": {
                "title": "PartyIdentifier",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Identifier of the Party.",
                "example": "16135551212"
              },
              "partySubIdOrType": {
                "title": "PartySubIdOrType",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
              },
              "fspId": {
                "title": "FspId",
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "FSP identifier."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "partyIdType",
              "partyIdentifier"
            ]
          },
          "merchantClassificationCode": {
            "title": "MerchantClassificationCode",
            "type": "string",
            "pattern": "^[\\d]{1,4}$",
            "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
          },
          "name": {
            "title": "PartyName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Name of the Party. Could be a real name or a nickname."
          },
          "personalInfo": {
            "title": "PartyPersonalInfo",
            "type": "object",
            "description": "Data model for the complex type PartyPersonalInfo.",
            "properties": {
              "complexName": {
                "title": "PartyComplexName",
                "type": "object",
                "description": "Data model for the complex type PartyComplexName.",
                "properties": {
                  "firstName": {
                    "title": "FirstName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "First name of the Party (Name Type).",
                    "example": "Henrik"
                  },
                  "middleName": {
                    "title": "MiddleName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Middle name of the Party (Name Type).",
                    "example": "Johannes"
                  },
                  "lastName": {
                    "title": "LastName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Last name of the Party (Name Type).",
                    "example": "Karlsson"
                  }
                }
              },
              "dateOfBirth": {
                "title": "DateofBirth (type Date)",
                "type": "string",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                "description": "Date of Birth of the Party.",
                "example": "1966-06-16"
              }
            }
          }
        },
        "required": [
          "partyIdInfo"
        ]
      },
      "payer": {
        "title": "Party",
        "type": "object",
        "description": "Data model for the complex type Party.",
        "properties": {
          "partyIdInfo": {
            "title": "PartyIdInfo",
            "type": "object",
            "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
            "properties": {
              "partyIdType": {
                "title": "PartyIdType",
                "type": "string",
                "enum": [
                  "MSISDN",
                  "EMAIL",
                  "PERSONAL_ID",
                  "BUSINESS",
                  "DEVICE",
                  "ACCOUNT_ID",
                  "IBAN",
                  "ALIAS"
                ],
                "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
              },
              "partyIdentifier": {
                "title": "PartyIdentifier",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Identifier of the Party.",
                "example": "16135551212"
              },
              "partySubIdOrType": {
                "title": "PartySubIdOrType",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
              },
              "fspId": {
                "title": "FspId",
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "FSP identifier."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "partyIdType",
              "partyIdentifier"
            ]
          },
          "merchantClassificationCode": {
            "title": "MerchantClassificationCode",
            "type": "string",
            "pattern": "^[\\d]{1,4}$",
            "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
          },
          "name": {
            "title": "PartyName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Name of the Party. Could be a real name or a nickname."
          },
          "personalInfo": {
            "title": "PartyPersonalInfo",
            "type": "object",
            "description": "Data model for the complex type PartyPersonalInfo.",
            "properties": {
              "complexName": {
                "title": "PartyComplexName",
                "type": "object",
                "description": "Data model for the complex type PartyComplexName.",
                "properties": {
                  "firstName": {
                    "title": "FirstName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "First name of the Party (Name Type).",
                    "example": "Henrik"
                  },
                  "middleName": {
                    "title": "MiddleName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Middle name of the Party (Name Type).",
                    "example": "Johannes"
                  },
                  "lastName": {
                    "title": "LastName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Last name of the Party (Name Type).",
                    "example": "Karlsson"
                  }
                }
              },
              "dateOfBirth": {
                "title": "DateofBirth (type Date)",
                "type": "string",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                "description": "Date of Birth of the Party.",
                "example": "1966-06-16"
              }
            }
          }
        },
        "required": [
          "partyIdInfo"
        ]
      },
      "quoteId": {
        "description": "A Mojaloop API quote identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "transactionId": {
        "description": "ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote.",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "transactionType": {
        "description": "Object containing transfer object.",
        "properties": {
          "initiator": {
            "enum": [
              "PAYER",
              "PAYEE"
            ],
            "type": "string"
          },
          "initiatorType": {
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "type": "string"
          },
          "scenario": {
            "enum": [
              "TRANSFER"
            ],
            "type": "string"
          },
          "subScenario": {
            "title": "TransactionSubScenario",
            "type": "string",
            "pattern": "^[A-Z_]{1,32}$",
            "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
            "example": "LOCALLY_DEFINED_SUBSCENARIO"
          }
        },
        "required": [
          "scenario",
          "initiator",
          "initiatorType"
        ],
        "type": "object"
      }
    },
    "required": [
      "quoteId",
      "transactionId",
      "payer",
      "payee",
      "amount",
      "transactionType"
    ],
    "type": "object"
  },
  "initiator": {
    "enum": [
      "PAYER",
      "PAYEE"
    ],
    "type": "string"
  },
  "initiatorType": {
    "enum": [
      "CONSUMER",
      "AGENT",
      "BUSINESS",
      "DEVICE"
    ],
    "type": "string"
  },
  "latitude": {
    "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
    "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
    "type": "string"
  },
  "longitude": {
    "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
    "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
    "type": "string"
  },
  "money": {
    "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
    "type": "string"
  },
  "otpDetails": {
    "properties": {
      "otpValue": {
        "description": "OTP value.",
        "type": "string"
      }
    },
    "required": [
      "otpValue"
    ],
    "type": "object"
  },
  "participantsResponse": {
    "properties": {
      "fspId": {
        "description": "FSP identifier.",
        "maxLength": 32,
        "minLength": 1,
        "type": "string"
      }
    },
    "type": "object"
  },
  "payerType": {
    "enum": [
      "CONSUMER",
      "AGENT",
      "BUSINESS",
      "DEVICE"
    ],
    "type": "string"
  },
  "quoteId": {
    "description": "A Mojaloop API quote identifier (UUID).",
    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
    "type": "string"
  },
  "quoteRequest": {
    "description": "A request for a quote for transfer from the DFSP backend.",
    "properties": {
      "homeR2PTransactionId": {
        "type": "string",
        "description": "Linked homeR2PTransactionId which was generated as part of POST /requestToPay to SDK incase of requestToPay transfer."
      },
      "amount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "amountType": {
        "enum": [
          "SEND",
          "RECEIVE"
        ],
        "type": "string"
      },
      "currency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "expiration": {
        "description": "An ISO-8601 formatted timestamp.",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "type": "string"
      },
      "extensionList": {
        "items": {
          "properties": {
            "key": {
              "maxLength": 32,
              "minLength": 1,
              "type": "string"
            },
            "value": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            }
          },
          "type": "object"
        },
        "maxItems": 16,
        "minItems": 0,
        "type": "array"
      },
      "feesAmount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "feesCurrency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "from": {
        "properties": {
          "dateOfBirth": {
            "description": "Date of birth in the form YYYY-MM-DD.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "type": "string"
          },
          "displayName": {
            "description": "Display name of the sender, if known.",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "firstName": {
            "description": "Party first name.",
            "type": "string"
          },
          "fspId": {
            "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
            "type": "string"
          },
          "idSubValue": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "idType": {
            "enum": [
              "MSISDN",
              "ACCOUNT_NO",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "type": "string"
          },
          "idValue": {
            "description": "The identifier string used to identify the sender.",
            "type": "string"
          },
          "lastName": {
            "description": "Party last name.",
            "type": "string"
          },
          "merchantClassificationCode": {
            "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
            "type": "string"
          },
          "middleName": {
            "description": "Party middle name.",
            "type": "string"
          },
          "type": {
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "type": "string"
          }
        },
        "required": [
          "idType",
          "idValue"
        ],
        "type": "object"
      },
      "geoCode": {
        "description": "Indicates the geographic location from where the transaction was initiated.",
        "properties": {
          "latitude": {
            "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "type": "string"
          },
          "longitude": {
            "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "type": "string"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object"
      },
      "initiator": {
        "enum": [
          "PAYER",
          "PAYEE"
        ],
        "type": "string"
      },
      "initiatorType": {
        "enum": [
          "CONSUMER",
          "AGENT",
          "BUSINESS",
          "DEVICE"
        ],
        "type": "string"
      },
      "note": {
        "description": "An optional note associated with the requested transfer.",
        "maxLength": 128,
        "minLength": 1,
        "type": "string"
      },
      "quoteId": {
        "description": "A Mojaloop API quote identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "subScenario": {
        "title": "TransactionSubScenario",
        "type": "string",
        "pattern": "^[A-Z_]{1,32}$",
        "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
        "example": "LOCALLY_DEFINED_SUBSCENARIO"
      },
      "to": {
        "properties": {
          "dateOfBirth": {
            "description": "Date of birth in the form YYYY-MM-DD.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "type": "string"
          },
          "displayName": {
            "description": "Display name of the sender, if known.",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "firstName": {
            "description": "Party first name.",
            "type": "string"
          },
          "fspId": {
            "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
            "type": "string"
          },
          "idSubValue": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "idType": {
            "enum": [
              "MSISDN",
              "ACCOUNT_NO",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "type": "string"
          },
          "idValue": {
            "description": "The identifier string used to identify the sender.",
            "type": "string"
          },
          "lastName": {
            "description": "Party last name.",
            "type": "string"
          },
          "merchantClassificationCode": {
            "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
            "type": "string"
          },
          "middleName": {
            "description": "Party middle name.",
            "type": "string"
          },
          "type": {
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "type": "string"
          }
        },
        "required": [
          "idType",
          "idValue"
        ],
        "type": "object"
      },
      "transactionId": {
        "description": "ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote.",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "transactionType": {
        "enum": [
          "TRANSFER",
          "DEPOSIT",
          "PAYMENT"
        ],
        "type": "string"
      },
      "transactionRequestId": {
        "description": "A Mojaloop API transaction request identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      }
    },
    "required": [
      "quoteId",
      "transactionId",
      "to",
      "from",
      "amountType",
      "amount",
      "currency",
      "transactionType",
      "initiator",
      "initiatorType"
    ],
    "type": "object"
  },
  "quoteResponse": {
    "description": "A response to a request for a quote.",
    "properties": {
      "expiration": {
        "description": "An ISO-8601 formatted timestamp.",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "type": "string"
      },
      "extensionList": {
        "items": {
          "properties": {
            "key": {
              "maxLength": 32,
              "minLength": 1,
              "type": "string"
            },
            "value": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            }
          },
          "type": "object"
        },
        "maxItems": 16,
        "minItems": 0,
        "type": "array"
      },
      "geoCode": {
        "description": "Indicates the geographic location from where the transaction was initiated.",
        "properties": {
          "latitude": {
            "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "type": "string"
          },
          "longitude": {
            "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "type": "string"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object"
      },
      "payeeFspCommissionAmount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "payeeFspCommissionAmountCurrency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "payeeFspFeeAmount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "payeeFspFeeAmountCurrency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "payeeReceiveAmount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "payeeReceiveAmountCurrency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "quoteId": {
        "description": "A Mojaloop API quote identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "transactionId": {
        "description": "ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote.",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "transferAmount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "transferAmountCurrency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      }
    },
    "required": [
      "quoteId",
      "transactionId",
      "transferAmount",
      "transferAmountCurrency"
    ],
    "type": "object"
  },
  "scenario": {
    "enum": [
      "TRANSFER"
    ],
    "type": "string"
  },
  "timestamp": {
    "description": "An ISO-8601 formatted timestamp.",
    "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
    "type": "string"
  },
  "transactionId": {
    "description": "ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote.",
    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
    "type": "string"
  },
  "transactionRequest": {
    "description": "A request for a pull based transfer.",
    "properties": {
      "amount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "currency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "expiration": {
        "description": "An ISO-8601 formatted timestamp.",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "type": "string"
      },
      "from": {
        "properties": {
          "dateOfBirth": {
            "description": "Date of birth in the form YYYY-MM-DD.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "type": "string"
          },
          "displayName": {
            "description": "Display name of the sender, if known.",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "firstName": {
            "description": "Party first name.",
            "type": "string"
          },
          "fspId": {
            "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
            "type": "string"
          },
          "idSubValue": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "idType": {
            "enum": [
              "MSISDN",
              "ACCOUNT_NO",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "type": "string"
          },
          "idValue": {
            "description": "The identifier string used to identify the sender.",
            "type": "string"
          },
          "lastName": {
            "description": "Party last name.",
            "type": "string"
          },
          "merchantClassificationCode": {
            "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
            "type": "string"
          },
          "middleName": {
            "description": "Party middle name.",
            "type": "string"
          },
          "type": {
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "type": "string"
          }
        },
        "required": [
          "idType",
          "idValue"
        ],
        "type": "object"
      },
      "geoCode": {
        "description": "Indicates the geographic location from where the transaction was initiated.",
        "properties": {
          "latitude": {
            "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "type": "string"
          },
          "longitude": {
            "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "type": "string"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object"
      },
      "initiator": {
        "enum": [
          "PAYER",
          "PAYEE"
        ],
        "type": "string"
      },
      "initiatorType": {
        "enum": [
          "CONSUMER",
          "AGENT",
          "BUSINESS",
          "DEVICE"
        ],
        "type": "string"
      },
      "note": {
        "description": "An optional note associated with the requested transfer.",
        "maxLength": 128,
        "minLength": 1,
        "type": "string"
      },
      "to": {
        "properties": {
          "dateOfBirth": {
            "description": "Date of birth in the form YYYY-MM-DD.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "type": "string"
          },
          "displayName": {
            "description": "Display name of the sender, if known.",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "firstName": {
            "description": "Party first name.",
            "type": "string"
          },
          "fspId": {
            "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
            "type": "string"
          },
          "idSubValue": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "idType": {
            "enum": [
              "MSISDN",
              "ACCOUNT_NO",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "type": "string"
          },
          "idValue": {
            "description": "The identifier string used to identify the sender.",
            "type": "string"
          },
          "lastName": {
            "description": "Party last name.",
            "type": "string"
          },
          "merchantClassificationCode": {
            "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
            "type": "string"
          },
          "middleName": {
            "description": "Party middle name.",
            "type": "string"
          },
          "type": {
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "type": "string"
          }
        },
        "required": [
          "idType",
          "idValue"
        ],
        "type": "object"
      },
      "transactionRequestId": {
        "description": "A Mojaloop API transaction request identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "transactionType": {
        "enum": [
          "TRANSFER",
          "DEPOSIT",
          "PAYMENT"
        ],
        "type": "string"
      },
      "subScenario": {
        "title": "TransactionSubScenario",
        "type": "string",
        "pattern": "^[A-Z_]{1,32}$",
        "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
        "example": "LOCALLY_DEFINED_SUBSCENARIO"
      },
      "authenticationType": {
        "title": "AuthenticationType",
        "type": "string",
        "enum": [
          "OTP",
          "QRCODE",
          "U2F"
        ],
        "description": "Below are the allowed values for the enumeration AuthenticationType.\n- OTP - One-time password generated by the Payer FSP.\n- QRCODE - QR code used as One Time Password.\n- U2F - U2F is a new addition isolated to Thirdparty stream.",
        "example": "OTP"
      }
    },
    "required": [
      "transactionRequestId",
      "to",
      "from",
      "amount",
      "currency",
      "transactionType",
      "initiator",
      "initiatorType"
    ],
    "type": "object"
  },
  "transactionRequestId": {
    "description": "A Mojaloop API transaction request identifier (UUID).",
    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
    "type": "string"
  },
  "transactionRequestResponse": {
    "description": "A response to a request for a quote.",
    "properties": {
      "homeR2PTransactionId": {
        "type": "string",
        "description": "Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems."
      },
      "transactionId": {
        "description": "ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote.",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "transactionRequestState": {
        "enum": [
          "RECEIVED",
          "PENDING",
          "ACCEPTED",
          "REJECTED"
        ],
        "type": "string"
      }
    },
    "required": [
      "transactionId",
      "transactionRequestState"
    ],
    "type": "object"
  },
  "transactionRequestState": {
    "enum": [
      "RECEIVED",
      "PENDING",
      "ACCEPTED",
      "REJECTED"
    ],
    "type": "string"
  },
  "transactionSubScenario": {
    "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type). Based on FSPIOP TransactionSubScenario.",
    "example": "LOCALLY_DEFINED_SUBSCENARIO",
    "pattern": "^[A-Z_]{1,32}$",
    "title": "transactionSubScenario",
    "type": "string"
  },
  "transactionType": {
    "enum": [
      "TRANSFER",
      "DEPOSIT",
      "PAYMENT"
    ],
    "type": "string"
  },
  "transactionTypeObject": {
    "description": "Object containing transfer object.",
    "properties": {
      "initiator": {
        "enum": [
          "PAYER",
          "PAYEE"
        ],
        "type": "string"
      },
      "initiatorType": {
        "enum": [
          "CONSUMER",
          "AGENT",
          "BUSINESS",
          "DEVICE"
        ],
        "type": "string"
      },
      "scenario": {
        "enum": [
          "TRANSFER"
        ],
        "type": "string"
      },
      "subScenario": {
        "title": "TransactionSubScenario",
        "type": "string",
        "pattern": "^[A-Z_]{1,32}$",
        "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
        "example": "LOCALLY_DEFINED_SUBSCENARIO"
      }
    },
    "required": [
      "scenario",
      "initiator",
      "initiatorType"
    ],
    "type": "object"
  },
  "transferDetailsResponse": {
    "properties": {
      "amount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "amountType": {
        "enum": [
          "SEND",
          "RECEIVE"
        ],
        "type": "string"
      },
      "currency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "extensions": {
        "items": {
          "properties": {
            "key": {
              "maxLength": 32,
              "minLength": 1,
              "type": "string"
            },
            "value": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            }
          },
          "type": "object"
        },
        "maxItems": 16,
        "minItems": 0,
        "type": "array"
      },
      "from": {
        "properties": {
          "dateOfBirth": {
            "description": "Date of birth in the form YYYY-MM-DD.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "type": "string"
          },
          "displayName": {
            "description": "Display name of the sender, if known.",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "firstName": {
            "description": "Party first name.",
            "type": "string"
          },
          "fspId": {
            "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
            "type": "string"
          },
          "idSubValue": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "idType": {
            "enum": [
              "MSISDN",
              "ACCOUNT_NO",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "type": "string"
          },
          "idValue": {
            "description": "The identifier string used to identify the sender.",
            "type": "string"
          },
          "lastName": {
            "description": "Party last name.",
            "type": "string"
          },
          "merchantClassificationCode": {
            "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
            "type": "string"
          },
          "middleName": {
            "description": "Party middle name.",
            "type": "string"
          },
          "type": {
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "type": "string"
          }
        },
        "required": [
          "idType",
          "idValue"
        ],
        "type": "object"
      },
      "homeTransactionId": {
        "description": "Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.",
        "type": "string"
      },
      "note": {
        "maxLength": 128,
        "type": "string"
      },
      "subScenario": {
        "title": "TransactionSubScenario",
        "type": "string",
        "pattern": "^[A-Z_]{1,32}$",
        "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
        "example": "LOCALLY_DEFINED_SUBSCENARIO"
      },
      "timestamp": {
        "description": "An ISO-8601 formatted timestamp.",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "type": "string"
      },
      "to": {
        "properties": {
          "dateOfBirth": {
            "description": "Date of birth in the form YYYY-MM-DD.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "type": "string"
          },
          "displayName": {
            "description": "Display name of the sender, if known.",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "firstName": {
            "description": "Party first name.",
            "type": "string"
          },
          "fspId": {
            "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
            "type": "string"
          },
          "idSubValue": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "idType": {
            "enum": [
              "MSISDN",
              "ACCOUNT_NO",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "type": "string"
          },
          "idValue": {
            "description": "The identifier string used to identify the sender.",
            "type": "string"
          },
          "lastName": {
            "description": "Party last name.",
            "type": "string"
          },
          "merchantClassificationCode": {
            "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
            "type": "string"
          },
          "middleName": {
            "description": "Party middle name.",
            "type": "string"
          },
          "type": {
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "type": "string"
          }
        },
        "required": [
          "idType",
          "idValue"
        ],
        "type": "object"
      },
      "transactionType": {
        "enum": [
          "TRANSFER",
          "DEPOSIT",
          "PAYMENT"
        ],
        "type": "string"
      },
      "transferState": {
        "description": "Below are the allowed values for the enumeration - RECEIVED DFSP has received the transfer. - RESERVED DFSP has reserved the transfer. - COMMITTED DFSP has successfully performed the transfer. - ABORTED DFSP has aborted the transfer due a rejection or failure to perform the transfer.\n",
        "enum": [
          "RECEIVED",
          "RESERVED",
          "COMMITTED",
          "ABORTED"
        ],
        "type": "string"
      }
    },
    "required": [
      "homeTransactionId",
      "from",
      "to",
      "amountType",
      "currency",
      "amount",
      "transferState",
      "transactionType",
      "timestamp"
    ],
    "type": "object"
  },
  "transferId": {
    "description": "A Mojaloop API transfer identifier (UUID).",
    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
    "type": "string"
  },
  "transferParty": {
    "properties": {
      "dateOfBirth": {
        "description": "Date of birth in the form YYYY-MM-DD.",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
        "type": "string"
      },
      "displayName": {
        "description": "Display name of the sender, if known.",
        "type": "string"
      },
      "extensionList": {
        "items": {
          "properties": {
            "key": {
              "maxLength": 32,
              "minLength": 1,
              "type": "string"
            },
            "value": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            }
          },
          "type": "object"
        },
        "maxItems": 16,
        "minItems": 0,
        "type": "array"
      },
      "firstName": {
        "description": "Party first name.",
        "type": "string"
      },
      "fspId": {
        "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
        "type": "string"
      },
      "idSubValue": {
        "maxLength": 128,
        "minLength": 1,
        "type": "string"
      },
      "idType": {
        "enum": [
          "MSISDN",
          "ACCOUNT_NO",
          "EMAIL",
          "PERSONAL_ID",
          "BUSINESS",
          "DEVICE",
          "ACCOUNT_ID",
          "IBAN",
          "ALIAS"
        ],
        "type": "string"
      },
      "idValue": {
        "description": "The identifier string used to identify the sender.",
        "type": "string"
      },
      "lastName": {
        "description": "Party last name.",
        "type": "string"
      },
      "merchantClassificationCode": {
        "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
        "type": "string"
      },
      "middleName": {
        "description": "Party middle name.",
        "type": "string"
      },
      "type": {
        "enum": [
          "CONSUMER",
          "AGENT",
          "BUSINESS",
          "DEVICE"
        ],
        "type": "string"
      }
    },
    "required": [
      "idType",
      "idValue"
    ],
    "type": "object"
  },
  "transferRequest": {
    "properties": {
      "homeR2PTransactionId": {
        "type": "string",
        "description": "Linked homeR2PTransactionId which was generated as part of POST /requestToPay to SDK incase of requestToPay transfer."
      },
      "amount": {
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "type": "string"
      },
      "amountType": {
        "enum": [
          "SEND",
          "RECEIVE"
        ],
        "type": "string"
      },
      "currency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ],
        "maxLength": 3,
        "minLength": 3,
        "type": "string"
      },
      "from": {
        "properties": {
          "dateOfBirth": {
            "description": "Date of birth in the form YYYY-MM-DD.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "type": "string"
          },
          "displayName": {
            "description": "Display name of the sender, if known.",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "firstName": {
            "description": "Party first name.",
            "type": "string"
          },
          "fspId": {
            "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
            "type": "string"
          },
          "idSubValue": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "idType": {
            "enum": [
              "MSISDN",
              "ACCOUNT_NO",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "type": "string"
          },
          "idValue": {
            "description": "The identifier string used to identify the sender.",
            "type": "string"
          },
          "lastName": {
            "description": "Party last name.",
            "type": "string"
          },
          "merchantClassificationCode": {
            "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
            "type": "string"
          },
          "middleName": {
            "description": "Party middle name.",
            "type": "string"
          },
          "type": {
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "type": "string"
          }
        },
        "required": [
          "idType",
          "idValue"
        ],
        "type": "object"
      },
      "ilpPacket": {
        "properties": {
          "data": {
            "description": "Object containing transfer object.",
            "properties": {
              "amount": {
                "description": "Object containing Amount and Currency of the transfer.",
                "properties": {
                  "amount": {
                    "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                    "type": "string"
                  },
                  "currency": {
                    "enum": [
                      "AED",
                      "AFN",
                      "ALL",
                      "AMD",
                      "ANG",
                      "AOA",
                      "ARS",
                      "AUD",
                      "AWG",
                      "AZN",
                      "BAM",
                      "BBD",
                      "BDT",
                      "BGN",
                      "BHD",
                      "BIF",
                      "BMD",
                      "BND",
                      "BOB",
                      "BRL",
                      "BSD",
                      "BTN",
                      "BWP",
                      "BYN",
                      "BZD",
                      "CAD",
                      "CDF",
                      "CHF",
                      "CLP",
                      "CNY",
                      "COP",
                      "CRC",
                      "CUC",
                      "CUP",
                      "CVE",
                      "CZK",
                      "DJF",
                      "DKK",
                      "DOP",
                      "DZD",
                      "EGP",
                      "ERN",
                      "ETB",
                      "EUR",
                      "FJD",
                      "FKP",
                      "GBP",
                      "GEL",
                      "GGP",
                      "GHS",
                      "GIP",
                      "GMD",
                      "GNF",
                      "GTQ",
                      "GYD",
                      "HKD",
                      "HNL",
                      "HRK",
                      "HTG",
                      "HUF",
                      "IDR",
                      "ILS",
                      "IMP",
                      "INR",
                      "IQD",
                      "IRR",
                      "ISK",
                      "JEP",
                      "JMD",
                      "JOD",
                      "JPY",
                      "KES",
                      "KGS",
                      "KHR",
                      "KMF",
                      "KPW",
                      "KRW",
                      "KWD",
                      "KYD",
                      "KZT",
                      "LAK",
                      "LBP",
                      "LKR",
                      "LRD",
                      "LSL",
                      "LYD",
                      "MAD",
                      "MDL",
                      "MGA",
                      "MKD",
                      "MMK",
                      "MNT",
                      "MOP",
                      "MRO",
                      "MUR",
                      "MVR",
                      "MWK",
                      "MXN",
                      "MYR",
                      "MZN",
                      "NAD",
                      "NGN",
                      "NIO",
                      "NOK",
                      "NPR",
                      "NZD",
                      "OMR",
                      "PAB",
                      "PEN",
                      "PGK",
                      "PHP",
                      "PKR",
                      "PLN",
                      "PYG",
                      "QAR",
                      "RON",
                      "RSD",
                      "RUB",
                      "RWF",
                      "SAR",
                      "SBD",
                      "SCR",
                      "SDG",
                      "SEK",
                      "SGD",
                      "SHP",
                      "SLL",
                      "SOS",
                      "SPL",
                      "SRD",
                      "STD",
                      "SVC",
                      "SYP",
                      "SZL",
                      "THB",
                      "TJS",
                      "TMT",
                      "TND",
                      "TOP",
                      "TRY",
                      "TTD",
                      "TVD",
                      "TWD",
                      "TZS",
                      "UAH",
                      "UGX",
                      "USD",
                      "UYU",
                      "UZS",
                      "VEF",
                      "VND",
                      "VUV",
                      "WST",
                      "XAF",
                      "XCD",
                      "XDR",
                      "XOF",
                      "XPF",
                      "XTS",
                      "XXX",
                      "YER",
                      "ZAR",
                      "ZMW",
                      "ZWD"
                    ],
                    "maxLength": 3,
                    "minLength": 3,
                    "type": "string"
                  }
                },
                "required": [
                  "amount",
                  "currency"
                ],
                "type": "object"
              },
              "payee": {
                "title": "Party",
                "type": "object",
                "description": "Data model for the complex type Party.",
                "properties": {
                  "partyIdInfo": {
                    "title": "PartyIdInfo",
                    "type": "object",
                    "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
                    "properties": {
                      "partyIdType": {
                        "title": "PartyIdType",
                        "type": "string",
                        "enum": [
                          "MSISDN",
                          "EMAIL",
                          "PERSONAL_ID",
                          "BUSINESS",
                          "DEVICE",
                          "ACCOUNT_ID",
                          "IBAN",
                          "ALIAS"
                        ],
                        "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
                      },
                      "partyIdentifier": {
                        "title": "PartyIdentifier",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128,
                        "description": "Identifier of the Party.",
                        "example": "16135551212"
                      },
                      "partySubIdOrType": {
                        "title": "PartySubIdOrType",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128,
                        "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
                      },
                      "fspId": {
                        "title": "FspId",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "FSP identifier."
                      },
                      "extensionList": {
                        "title": "ExtensionList",
                        "type": "object",
                        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                        "properties": {
                          "extension": {
                            "type": "array",
                            "items": {
                              "title": "Extension",
                              "type": "object",
                              "description": "Data model for the complex type Extension.",
                              "properties": {
                                "key": {
                                  "title": "ExtensionKey",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 32,
                                  "description": "Extension key."
                                },
                                "value": {
                                  "title": "ExtensionValue",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 128,
                                  "description": "Extension value."
                                }
                              },
                              "required": [
                                "key",
                                "value"
                              ]
                            },
                            "minItems": 1,
                            "maxItems": 16,
                            "description": "Number of Extension elements."
                          }
                        },
                        "required": [
                          "extension"
                        ]
                      }
                    },
                    "required": [
                      "partyIdType",
                      "partyIdentifier"
                    ]
                  },
                  "merchantClassificationCode": {
                    "title": "MerchantClassificationCode",
                    "type": "string",
                    "pattern": "^[\\d]{1,4}$",
                    "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
                  },
                  "name": {
                    "title": "PartyName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "description": "Name of the Party. Could be a real name or a nickname."
                  },
                  "personalInfo": {
                    "title": "PartyPersonalInfo",
                    "type": "object",
                    "description": "Data model for the complex type PartyPersonalInfo.",
                    "properties": {
                      "complexName": {
                        "title": "PartyComplexName",
                        "type": "object",
                        "description": "Data model for the complex type PartyComplexName.",
                        "properties": {
                          "firstName": {
                            "title": "FirstName",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128,
                            "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                            "description": "First name of the Party (Name Type).",
                            "example": "Henrik"
                          },
                          "middleName": {
                            "title": "MiddleName",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128,
                            "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                            "description": "Middle name of the Party (Name Type).",
                            "example": "Johannes"
                          },
                          "lastName": {
                            "title": "LastName",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128,
                            "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                            "description": "Last name of the Party (Name Type).",
                            "example": "Karlsson"
                          }
                        }
                      },
                      "dateOfBirth": {
                        "title": "DateofBirth (type Date)",
                        "type": "string",
                        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                        "description": "Date of Birth of the Party.",
                        "example": "1966-06-16"
                      }
                    }
                  }
                },
                "required": [
                  "partyIdInfo"
                ]
              },
              "payer": {
                "title": "Party",
                "type": "object",
                "description": "Data model for the complex type Party.",
                "properties": {
                  "partyIdInfo": {
                    "title": "PartyIdInfo",
                    "type": "object",
                    "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
                    "properties": {
                      "partyIdType": {
                        "title": "PartyIdType",
                        "type": "string",
                        "enum": [
                          "MSISDN",
                          "EMAIL",
                          "PERSONAL_ID",
                          "BUSINESS",
                          "DEVICE",
                          "ACCOUNT_ID",
                          "IBAN",
                          "ALIAS"
                        ],
                        "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
                      },
                      "partyIdentifier": {
                        "title": "PartyIdentifier",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128,
                        "description": "Identifier of the Party.",
                        "example": "16135551212"
                      },
                      "partySubIdOrType": {
                        "title": "PartySubIdOrType",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128,
                        "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
                      },
                      "fspId": {
                        "title": "FspId",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "FSP identifier."
                      },
                      "extensionList": {
                        "title": "ExtensionList",
                        "type": "object",
                        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                        "properties": {
                          "extension": {
                            "type": "array",
                            "items": {
                              "title": "Extension",
                              "type": "object",
                              "description": "Data model for the complex type Extension.",
                              "properties": {
                                "key": {
                                  "title": "ExtensionKey",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 32,
                                  "description": "Extension key."
                                },
                                "value": {
                                  "title": "ExtensionValue",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 128,
                                  "description": "Extension value."
                                }
                              },
                              "required": [
                                "key",
                                "value"
                              ]
                            },
                            "minItems": 1,
                            "maxItems": 16,
                            "description": "Number of Extension elements."
                          }
                        },
                        "required": [
                          "extension"
                        ]
                      }
                    },
                    "required": [
                      "partyIdType",
                      "partyIdentifier"
                    ]
                  },
                  "merchantClassificationCode": {
                    "title": "MerchantClassificationCode",
                    "type": "string",
                    "pattern": "^[\\d]{1,4}$",
                    "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
                  },
                  "name": {
                    "title": "PartyName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "description": "Name of the Party. Could be a real name or a nickname."
                  },
                  "personalInfo": {
                    "title": "PartyPersonalInfo",
                    "type": "object",
                    "description": "Data model for the complex type PartyPersonalInfo.",
                    "properties": {
                      "complexName": {
                        "title": "PartyComplexName",
                        "type": "object",
                        "description": "Data model for the complex type PartyComplexName.",
                        "properties": {
                          "firstName": {
                            "title": "FirstName",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128,
                            "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                            "description": "First name of the Party (Name Type).",
                            "example": "Henrik"
                          },
                          "middleName": {
                            "title": "MiddleName",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128,
                            "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                            "description": "Middle name of the Party (Name Type).",
                            "example": "Johannes"
                          },
                          "lastName": {
                            "title": "LastName",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128,
                            "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                            "description": "Last name of the Party (Name Type).",
                            "example": "Karlsson"
                          }
                        }
                      },
                      "dateOfBirth": {
                        "title": "DateofBirth (type Date)",
                        "type": "string",
                        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                        "description": "Date of Birth of the Party.",
                        "example": "1966-06-16"
                      }
                    }
                  }
                },
                "required": [
                  "partyIdInfo"
                ]
              },
              "quoteId": {
                "description": "A Mojaloop API quote identifier (UUID).",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                "type": "string"
              },
              "transactionId": {
                "description": "ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote.",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                "type": "string"
              },
              "transactionType": {
                "description": "Object containing transfer object.",
                "properties": {
                  "initiator": {
                    "enum": [
                      "PAYER",
                      "PAYEE"
                    ],
                    "type": "string"
                  },
                  "initiatorType": {
                    "enum": [
                      "CONSUMER",
                      "AGENT",
                      "BUSINESS",
                      "DEVICE"
                    ],
                    "type": "string"
                  },
                  "scenario": {
                    "enum": [
                      "TRANSFER"
                    ],
                    "type": "string"
                  },
                  "subScenario": {
                    "title": "TransactionSubScenario",
                    "type": "string",
                    "pattern": "^[A-Z_]{1,32}$",
                    "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
                    "example": "LOCALLY_DEFINED_SUBSCENARIO"
                  }
                },
                "required": [
                  "scenario",
                  "initiator",
                  "initiatorType"
                ],
                "type": "object"
              }
            },
            "required": [
              "quoteId",
              "transactionId",
              "payer",
              "payee",
              "amount",
              "transactionType"
            ],
            "type": "object"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "note": {
        "maxLength": 128,
        "type": "string"
      },
      "quote": {
        "description": "A response to a request for a quote.",
        "properties": {
          "expiration": {
            "description": "An ISO-8601 formatted timestamp.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "geoCode": {
            "description": "Indicates the geographic location from where the transaction was initiated.",
            "properties": {
              "latitude": {
                "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
                "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
                "type": "string"
              },
              "longitude": {
                "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
                "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
                "type": "string"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "type": "object"
          },
          "payeeFspCommissionAmount": {
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "type": "string"
          },
          "payeeFspCommissionAmountCurrency": {
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ],
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "payeeFspFeeAmount": {
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "type": "string"
          },
          "payeeFspFeeAmountCurrency": {
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ],
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "payeeReceiveAmount": {
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "type": "string"
          },
          "payeeReceiveAmountCurrency": {
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ],
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "quoteId": {
            "description": "A Mojaloop API quote identifier (UUID).",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "type": "string"
          },
          "transactionId": {
            "description": "ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote.",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "type": "string"
          },
          "transferAmount": {
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "type": "string"
          },
          "transferAmountCurrency": {
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ],
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          }
        },
        "required": [
          "quoteId",
          "transactionId",
          "transferAmount",
          "transferAmountCurrency"
        ],
        "type": "object"
      },
      "quoteRequestExtensions": {
        "items": {
          "properties": {
            "key": {
              "maxLength": 32,
              "minLength": 1,
              "type": "string"
            },
            "value": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            }
          },
          "type": "object"
        },
        "maxItems": 16,
        "minItems": 0,
        "type": "array"
      },
      "subScenario": {
        "title": "TransactionSubScenario",
        "type": "string",
        "pattern": "^[A-Z_]{1,32}$",
        "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
        "example": "LOCALLY_DEFINED_SUBSCENARIO"
      },
      "to": {
        "properties": {
          "dateOfBirth": {
            "description": "Date of birth in the form YYYY-MM-DD.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "type": "string"
          },
          "displayName": {
            "description": "Display name of the sender, if known.",
            "type": "string"
          },
          "extensionList": {
            "items": {
              "properties": {
                "key": {
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string"
                },
                "value": {
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 16,
            "minItems": 0,
            "type": "array"
          },
          "firstName": {
            "description": "Party first name.",
            "type": "string"
          },
          "fspId": {
            "description": "Mojaloop scheme FSPID of the DFSP which owns the party account.",
            "type": "string"
          },
          "idSubValue": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "idType": {
            "enum": [
              "MSISDN",
              "ACCOUNT_NO",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "type": "string"
          },
          "idValue": {
            "description": "The identifier string used to identify the sender.",
            "type": "string"
          },
          "lastName": {
            "description": "Party last name.",
            "type": "string"
          },
          "merchantClassificationCode": {
            "description": "Up to 4 digits specifying the sender's merchant classification, if known and applicable.",
            "type": "string"
          },
          "middleName": {
            "description": "Party middle name.",
            "type": "string"
          },
          "type": {
            "enum": [
              "CONSUMER",
              "AGENT",
              "BUSINESS",
              "DEVICE"
            ],
            "type": "string"
          }
        },
        "required": [
          "idType",
          "idValue"
        ],
        "type": "object"
      },
      "transactionType": {
        "enum": [
          "TRANSFER",
          "DEPOSIT",
          "PAYMENT"
        ],
        "type": "string"
      },
      "transferId": {
        "description": "A Mojaloop API transfer identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      },
      "transactionRequestId": {
        "description": "A Mojaloop API transaction request identifier (UUID).",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "type": "string"
      }
    },
    "required": [
      "transferId",
      "quote",
      "from",
      "to",
      "amountType",
      "currency",
      "amount",
      "transactionType",
      "ilpPacket"
    ],
    "type": "object"
  },
  "transferResponse": {
    "properties": {
      "completedTimestamp": {
        "description": "An ISO-8601 formatted timestamp.",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "type": "string"
      },
      "fulfilment": {
        "title": "IlpFulfilment",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]{43}$",
        "maxLength": 48,
        "description": "Fulfilment that must be attached to the transfer by the Payee.",
        "example": "WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8"
      },
      "homeTransactionId": {
        "description": "Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.",
        "type": "string"
      },
      "transferState": {
        "description": "Below are the allowed values for the enumeration - RECEIVED DFSP has received the transfer. - RESERVED DFSP has reserved the transfer. - COMMITTED DFSP has successfully performed the transfer. - ABORTED DFSP has aborted the transfer due a rejection or failure to perform the transfer.\n",
        "enum": [
          "RECEIVED",
          "RESERVED",
          "COMMITTED",
          "ABORTED"
        ],
        "type": "string"
      }
    },
    "required": [
      "homeTransactionId"
    ],
    "type": "object"
  },
  "transferState": {
    "description": "Below are the allowed values for the enumeration - RECEIVED DFSP has received the transfer. - RESERVED DFSP has reserved the transfer. - COMMITTED DFSP has successfully performed the transfer. - ABORTED DFSP has aborted the transfer due a rejection or failure to perform the transfer.\n",
    "enum": [
      "RECEIVED",
      "RESERVED",
      "COMMITTED",
      "ABORTED"
    ],
    "type": "string"
  },
  "transferStatus": {
    "enum": [
      "ERROR_OCCURRED",
      "WAITING_FOR_PARTY_ACCEPTANCE",
      "WAITING_FOR_QUOTE_ACCEPTANCE",
      "COMPLETED"
    ],
    "type": "string"
  },
  "requestToPayCallback": {
    "description": "Callback for requestToPay.",
    "properties": {
      "homeR2PTransactionId": {
        "type": "string",
        "description": "Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems."
      },
      "transactionRequestState": {
        "enum": [
          "RECEIVED",
          "PENDING",
          "ACCEPTED",
          "REJECTED"
        ],
        "type": "string"
      }
    },
    "required": [
      "transactionRequestState"
    ]
  },
  "TransactionSubScenario": {
    "title": "TransactionSubScenario",
    "type": "string",
    "pattern": "^[A-Z_]{1,32}$",
    "description": "Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",
    "example": "LOCALLY_DEFINED_SUBSCENARIO"
  },
  "CorrelationId": {
    "title": "CorrelationId",
    "type": "string",
    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
    "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
    "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
  },
  "bulkTransactionStatus": {
    "type": "string",
    "enum": [
      "ERROR_OCCURRED",
      "WAITING_FOR_PARTY_ACCEPTANCE",
      "WAITING_FOR_QUOTE_ACCEPTANCE",
      "COMPLETED"
    ]
  },
  "autoAcceptPartyOption": {
    "type": "object",
    "required": [
      "enabled"
    ],
    "properties": {
      "enabled": {
        "type": "boolean",
        "enum": [
          false,
          true
        ]
      }
    }
  },
  "Currency": {
    "title": "Currency",
    "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
    "type": "string",
    "minLength": 3,
    "maxLength": 3,
    "enum": [
      "AED",
      "AFN",
      "ALL",
      "AMD",
      "ANG",
      "AOA",
      "ARS",
      "AUD",
      "AWG",
      "AZN",
      "BAM",
      "BBD",
      "BDT",
      "BGN",
      "BHD",
      "BIF",
      "BMD",
      "BND",
      "BOB",
      "BRL",
      "BSD",
      "BTN",
      "BWP",
      "BYN",
      "BZD",
      "CAD",
      "CDF",
      "CHF",
      "CLP",
      "CNY",
      "COP",
      "CRC",
      "CUC",
      "CUP",
      "CVE",
      "CZK",
      "DJF",
      "DKK",
      "DOP",
      "DZD",
      "EGP",
      "ERN",
      "ETB",
      "EUR",
      "FJD",
      "FKP",
      "GBP",
      "GEL",
      "GGP",
      "GHS",
      "GIP",
      "GMD",
      "GNF",
      "GTQ",
      "GYD",
      "HKD",
      "HNL",
      "HRK",
      "HTG",
      "HUF",
      "IDR",
      "ILS",
      "IMP",
      "INR",
      "IQD",
      "IRR",
      "ISK",
      "JEP",
      "JMD",
      "JOD",
      "JPY",
      "KES",
      "KGS",
      "KHR",
      "KMF",
      "KPW",
      "KRW",
      "KWD",
      "KYD",
      "KZT",
      "LAK",
      "LBP",
      "LKR",
      "LRD",
      "LSL",
      "LYD",
      "MAD",
      "MDL",
      "MGA",
      "MKD",
      "MMK",
      "MNT",
      "MOP",
      "MRO",
      "MUR",
      "MVR",
      "MWK",
      "MXN",
      "MYR",
      "MZN",
      "NAD",
      "NGN",
      "NIO",
      "NOK",
      "NPR",
      "NZD",
      "OMR",
      "PAB",
      "PEN",
      "PGK",
      "PHP",
      "PKR",
      "PLN",
      "PYG",
      "QAR",
      "RON",
      "RSD",
      "RUB",
      "RWF",
      "SAR",
      "SBD",
      "SCR",
      "SDG",
      "SEK",
      "SGD",
      "SHP",
      "SLL",
      "SOS",
      "SPL",
      "SRD",
      "STD",
      "SVC",
      "SYP",
      "SZL",
      "THB",
      "TJS",
      "TMT",
      "TND",
      "TOP",
      "TRY",
      "TTD",
      "TVD",
      "TWD",
      "TZS",
      "UAH",
      "UGX",
      "USD",
      "UYU",
      "UZS",
      "VEF",
      "VND",
      "VUV",
      "WST",
      "XAF",
      "XCD",
      "XDR",
      "XOF",
      "XPF",
      "XTS",
      "XXX",
      "YER",
      "ZAR",
      "ZMW",
      "ZWD"
    ]
  },
  "Amount": {
    "title": "Amount",
    "type": "string",
    "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
    "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
    "example": "123.45"
  },
  "bulkPerTransferFeeLimit": {
    "type": "object",
    "required": [
      "currency",
      "amount"
    ],
    "properties": {
      "currency": {
        "title": "Currency",
        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
        "type": "string",
        "minLength": 3,
        "maxLength": 3,
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ]
      },
      "amount": {
        "title": "Amount",
        "type": "string",
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
        "example": "123.45"
      }
    }
  },
  "autoAcceptQuote": {
    "type": "object",
    "required": [
      "enabled"
    ],
    "properties": {
      "enabled": {
        "type": "boolean",
        "enum": [
          true,
          false
        ]
      },
      "perTransferFeeLimits": {
        "type": "array",
        "minItems": 0,
        "items": {
          "type": "object",
          "required": [
            "currency",
            "amount"
          ],
          "properties": {
            "currency": {
              "title": "Currency",
              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ]
            },
            "amount": {
              "title": "Amount",
              "type": "string",
              "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
              "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
              "example": "123.45"
            }
          }
        }
      }
    }
  },
  "DateTime": {
    "title": "DateTime",
    "type": "string",
    "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
    "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
    "example": "2016-05-24T08:38:08.699-04:00"
  },
  "bulkTransactionOptions": {
    "type": "object",
    "required": [
      "autoAcceptParty",
      "autoAcceptQuote",
      "bulkExpiration"
    ],
    "properties": {
      "onlyValidateParty": {
        "description": "Set to true if only party validation is required.  This means the quotes and transfers will not run. This is useful for only party resolution.",
        "type": "boolean"
      },
      "autoAcceptParty": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "boolean",
            "enum": [
              false,
              true
            ]
          }
        }
      },
      "autoAcceptQuote": {
        "description": "Set to true if the quote response is accepted without confirmation from the payer. The fees applied by the payee will be acceptable to the payer abiding by the limits set by optional 'perTransferFeeLimits' array.",
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "enabled"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "enum": [
                  true,
                  false
                ]
              },
              "perTransferFeeLimits": {
                "type": "array",
                "minItems": 0,
                "items": {
                  "type": "object",
                  "required": [
                    "currency",
                    "amount"
                  ],
                  "properties": {
                    "currency": {
                      "title": "Currency",
                      "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "XTS",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWD"
                      ]
                    },
                    "amount": {
                      "title": "Amount",
                      "type": "string",
                      "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                      "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                      "example": "123.45"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "skipPartyLookup": {
        "description": "Set to true if supplying an FSPID for the payee party and no party resolution is needed. This may be useful if a previous party resolution has been performed.",
        "type": "boolean"
      },
      "synchronous": {
        "description": "Set to true if the bulkTransfer requests need be handled synchronous. Otherwise the requests will be handled asynchronously, meaning there will  be callbacks whenever the processing is done",
        "type": "boolean"
      },
      "bulkExpiration": {
        "title": "DateTime",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
        "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
        "example": "2016-05-24T08:38:08.699-04:00"
      }
    }
  },
  "PartyIdType": {
    "title": "PartyIdType",
    "type": "string",
    "enum": [
      "MSISDN",
      "EMAIL",
      "PERSONAL_ID",
      "BUSINESS",
      "DEVICE",
      "ACCOUNT_ID",
      "IBAN",
      "ALIAS"
    ],
    "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
  },
  "PartyIdentifier": {
    "title": "PartyIdentifier",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "Identifier of the Party.",
    "example": "16135551212"
  },
  "PartySubIdOrType": {
    "title": "PartySubIdOrType",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
  },
  "ExtensionKey": {
    "title": "ExtensionKey",
    "type": "string",
    "minLength": 1,
    "maxLength": 32,
    "description": "Extension key."
  },
  "ExtensionValue": {
    "title": "ExtensionValue",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "Extension value."
  },
  "Extension": {
    "title": "Extension",
    "type": "object",
    "description": "Data model for the complex type Extension.",
    "properties": {
      "key": {
        "title": "ExtensionKey",
        "type": "string",
        "minLength": 1,
        "maxLength": 32,
        "description": "Extension key."
      },
      "value": {
        "title": "ExtensionValue",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Extension value."
      }
    },
    "required": [
      "key",
      "value"
    ]
  },
  "ExtensionList": {
    "title": "ExtensionList",
    "type": "object",
    "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
    "properties": {
      "extension": {
        "type": "array",
        "items": {
          "title": "Extension",
          "type": "object",
          "description": "Data model for the complex type Extension.",
          "properties": {
            "key": {
              "title": "ExtensionKey",
              "type": "string",
              "minLength": 1,
              "maxLength": 32,
              "description": "Extension key."
            },
            "value": {
              "title": "ExtensionValue",
              "type": "string",
              "minLength": 1,
              "maxLength": 128,
              "description": "Extension value."
            }
          },
          "required": [
            "key",
            "value"
          ]
        },
        "minItems": 1,
        "maxItems": 16,
        "description": "Number of Extension elements."
      }
    },
    "required": [
      "extension"
    ]
  },
  "PartyIdInfo": {
    "title": "PartyIdInfo",
    "type": "object",
    "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
    "properties": {
      "partyIdType": {
        "title": "PartyIdType",
        "type": "string",
        "enum": [
          "MSISDN",
          "EMAIL",
          "PERSONAL_ID",
          "BUSINESS",
          "DEVICE",
          "ACCOUNT_ID",
          "IBAN",
          "ALIAS"
        ],
        "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
      },
      "partyIdentifier": {
        "title": "PartyIdentifier",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Identifier of the Party.",
        "example": "16135551212"
      },
      "partySubIdOrType": {
        "title": "PartySubIdOrType",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
      },
      "fspId": {
        "title": "FspId",
        "type": "string",
        "minLength": 1,
        "maxLength": 32,
        "description": "FSP identifier."
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "partyIdType",
      "partyIdentifier"
    ]
  },
  "PartyName": {
    "title": "PartyName",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "Name of the Party. Could be a real name or a nickname."
  },
  "PartyComplexName": {
    "title": "PartyComplexName",
    "type": "object",
    "description": "Data model for the complex type PartyComplexName.",
    "properties": {
      "firstName": {
        "title": "FirstName",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
        "description": "First name of the Party (Name Type).",
        "example": "Henrik"
      },
      "middleName": {
        "title": "MiddleName",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
        "description": "Middle name of the Party (Name Type).",
        "example": "Johannes"
      },
      "lastName": {
        "title": "LastName",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
        "description": "Last name of the Party (Name Type).",
        "example": "Karlsson"
      }
    }
  },
  "PartyPersonalInfo": {
    "title": "PartyPersonalInfo",
    "type": "object",
    "description": "Data model for the complex type PartyPersonalInfo.",
    "properties": {
      "complexName": {
        "title": "PartyComplexName",
        "type": "object",
        "description": "Data model for the complex type PartyComplexName.",
        "properties": {
          "firstName": {
            "title": "FirstName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
            "description": "First name of the Party (Name Type).",
            "example": "Henrik"
          },
          "middleName": {
            "title": "MiddleName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
            "description": "Middle name of the Party (Name Type).",
            "example": "Johannes"
          },
          "lastName": {
            "title": "LastName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
            "description": "Last name of the Party (Name Type).",
            "example": "Karlsson"
          }
        }
      },
      "dateOfBirth": {
        "title": "DateofBirth (type Date)",
        "type": "string",
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
        "description": "Date of Birth of the Party.",
        "example": "1966-06-16"
      }
    }
  },
  "Party": {
    "title": "Party",
    "type": "object",
    "description": "Data model for the complex type Party.",
    "properties": {
      "partyIdInfo": {
        "title": "PartyIdInfo",
        "type": "object",
        "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
        "properties": {
          "partyIdType": {
            "title": "PartyIdType",
            "type": "string",
            "enum": [
              "MSISDN",
              "EMAIL",
              "PERSONAL_ID",
              "BUSINESS",
              "DEVICE",
              "ACCOUNT_ID",
              "IBAN",
              "ALIAS"
            ],
            "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
          },
          "partyIdentifier": {
            "title": "PartyIdentifier",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Identifier of the Party.",
            "example": "16135551212"
          },
          "partySubIdOrType": {
            "title": "PartySubIdOrType",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
          },
          "fspId": {
            "title": "FspId",
            "type": "string",
            "minLength": 1,
            "maxLength": 32,
            "description": "FSP identifier."
          },
          "extensionList": {
            "title": "ExtensionList",
            "type": "object",
            "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
            "properties": {
              "extension": {
                "type": "array",
                "items": {
                  "title": "Extension",
                  "type": "object",
                  "description": "Data model for the complex type Extension.",
                  "properties": {
                    "key": {
                      "title": "ExtensionKey",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "Extension key."
                    },
                    "value": {
                      "title": "ExtensionValue",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Extension value."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 16,
                "description": "Number of Extension elements."
              }
            },
            "required": [
              "extension"
            ]
          }
        },
        "required": [
          "partyIdType",
          "partyIdentifier"
        ]
      },
      "merchantClassificationCode": {
        "title": "MerchantClassificationCode",
        "type": "string",
        "pattern": "^[\\d]{1,4}$",
        "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
      },
      "name": {
        "title": "PartyName",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Name of the Party. Could be a real name or a nickname."
      },
      "personalInfo": {
        "title": "PartyPersonalInfo",
        "type": "object",
        "description": "Data model for the complex type PartyPersonalInfo.",
        "properties": {
          "complexName": {
            "title": "PartyComplexName",
            "type": "object",
            "description": "Data model for the complex type PartyComplexName.",
            "properties": {
              "firstName": {
                "title": "FirstName",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                "description": "First name of the Party (Name Type).",
                "example": "Henrik"
              },
              "middleName": {
                "title": "MiddleName",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                "description": "Middle name of the Party (Name Type).",
                "example": "Johannes"
              },
              "lastName": {
                "title": "LastName",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                "description": "Last name of the Party (Name Type).",
                "example": "Karlsson"
              }
            }
          },
          "dateOfBirth": {
            "title": "DateofBirth (type Date)",
            "type": "string",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
            "description": "Date of Birth of the Party.",
            "example": "1966-06-16"
          }
        }
      }
    },
    "required": [
      "partyIdInfo"
    ]
  },
  "AmountType": {
    "title": "AmountType",
    "type": "string",
    "enum": [
      "SEND",
      "RECEIVE"
    ],
    "description": "Below are the allowed values for the enumeration AmountType.\n- SEND - Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees.\n- RECEIVE - Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive of any fees.",
    "example": "RECEIVE"
  },
  "Note": {
    "title": "Note",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "Memo assigned to transaction.",
    "example": "Note sent to Payee."
  },
  "Money": {
    "title": "Money",
    "type": "object",
    "description": "Data model for the complex type Money.",
    "properties": {
      "currency": {
        "title": "Currency",
        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
        "type": "string",
        "minLength": 3,
        "maxLength": 3,
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ]
      },
      "amount": {
        "title": "Amount",
        "type": "string",
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
        "example": "123.45"
      }
    },
    "required": [
      "currency",
      "amount"
    ]
  },
  "Latitude": {
    "title": "Latitude",
    "type": "string",
    "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
    "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
    "example": "+45.4215"
  },
  "Longitude": {
    "title": "Longitude",
    "type": "string",
    "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
    "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
    "example": "+75.6972"
  },
  "GeoCode": {
    "title": "GeoCode",
    "type": "object",
    "description": "Data model for the complex type GeoCode. Indicates the geographic location from where the transaction was initiated.",
    "properties": {
      "latitude": {
        "title": "Latitude",
        "type": "string",
        "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
        "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
        "example": "+45.4215"
      },
      "longitude": {
        "title": "Longitude",
        "type": "string",
        "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
        "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
        "example": "+75.6972"
      }
    },
    "required": [
      "latitude",
      "longitude"
    ]
  },
  "IlpPacket": {
    "title": "IlpPacket",
    "type": "string",
    "pattern": "^[A-Za-z0-9-_]+[=]{0,2}$",
    "minLength": 1,
    "maxLength": 32768,
    "description": "Information for recipient (transport layer information).",
    "example": "AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"
  },
  "IlpCondition": {
    "title": "IlpCondition",
    "type": "string",
    "pattern": "^[A-Za-z0-9-_]{43}$",
    "maxLength": 48,
    "description": "Condition that must be attached to the transfer by the Payer."
  },
  "ErrorCode": {
    "title": "ErrorCode",
    "type": "string",
    "pattern": "^[1-9]\\d{3}$",
    "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
    "example": "5100"
  },
  "ErrorDescription": {
    "title": "ErrorDescription",
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "Error description string."
  },
  "ErrorInformation": {
    "title": "ErrorInformation",
    "type": "object",
    "description": "Data model for the complex type ErrorInformation.",
    "properties": {
      "errorCode": {
        "title": "ErrorCode",
        "type": "string",
        "pattern": "^[1-9]\\d{3}$",
        "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
        "example": "5100"
      },
      "errorDescription": {
        "title": "ErrorDescription",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Error description string."
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    },
    "required": [
      "errorCode",
      "errorDescription"
    ]
  },
  "mojaloopError": {
    "type": "object",
    "properties": {
      "errorInformation": {
        "title": "ErrorInformation",
        "type": "object",
        "description": "Data model for the complex type ErrorInformation.",
        "properties": {
          "errorCode": {
            "title": "ErrorCode",
            "type": "string",
            "pattern": "^[1-9]\\d{3}$",
            "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
            "example": "5100"
          },
          "errorDescription": {
            "title": "ErrorDescription",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Error description string."
          },
          "extensionList": {
            "title": "ExtensionList",
            "type": "object",
            "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
            "properties": {
              "extension": {
                "type": "array",
                "items": {
                  "title": "Extension",
                  "type": "object",
                  "description": "Data model for the complex type Extension.",
                  "properties": {
                    "key": {
                      "title": "ExtensionKey",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "Extension key."
                    },
                    "value": {
                      "title": "ExtensionValue",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Extension value."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 16,
                "description": "Number of Extension elements."
              }
            },
            "required": [
              "extension"
            ]
          }
        },
        "required": [
          "errorCode",
          "errorDescription"
        ]
      }
    }
  },
  "quoteError": {
    "type": "object",
    "description": "This object represents a Mojaloop API error received at any time during the quote process",
    "properties": {
      "httpStatusCode": {
        "type": "integer",
        "description": "The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response."
      },
      "mojaloopError": {
        "type": "object",
        "properties": {
          "errorInformation": {
            "title": "ErrorInformation",
            "type": "object",
            "description": "Data model for the complex type ErrorInformation.",
            "properties": {
              "errorCode": {
                "title": "ErrorCode",
                "type": "string",
                "pattern": "^[1-9]\\d{3}$",
                "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                "example": "5100"
              },
              "errorDescription": {
                "title": "ErrorDescription",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Error description string."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "errorCode",
              "errorDescription"
            ]
          }
        }
      }
    }
  },
  "individualQuoteResult": {
    "type": "object",
    "properties": {
      "quoteId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "transferAmount": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "payeeReceiveAmount": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "payeeFspFee": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "payeeFspCommission": {
        "title": "Money",
        "type": "object",
        "description": "Data model for the complex type Money.",
        "properties": {
          "currency": {
            "title": "Currency",
            "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SPL",
              "SRD",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XTS",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWD"
            ]
          },
          "amount": {
            "title": "Amount",
            "type": "string",
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
            "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
            "example": "123.45"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "geoCode": {
        "title": "GeoCode",
        "type": "object",
        "description": "Data model for the complex type GeoCode. Indicates the geographic location from where the transaction was initiated.",
        "properties": {
          "latitude": {
            "title": "Latitude",
            "type": "string",
            "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "example": "+45.4215"
          },
          "longitude": {
            "title": "Longitude",
            "type": "string",
            "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
            "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
            "example": "+75.6972"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "ilpPacket": {
        "title": "IlpPacket",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]+[=]{0,2}$",
        "minLength": 1,
        "maxLength": 32768,
        "description": "Information for recipient (transport layer information).",
        "example": "AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"
      },
      "condition": {
        "title": "IlpCondition",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]{43}$",
        "maxLength": 48,
        "description": "Condition that must be attached to the transfer by the Payer."
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      },
      "lastError": {
        "type": "object",
        "description": "This object represents a Mojaloop API error received at any time during the quote process",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "description": "The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response."
          },
          "mojaloopError": {
            "type": "object",
            "properties": {
              "errorInformation": {
                "title": "ErrorInformation",
                "type": "object",
                "description": "Data model for the complex type ErrorInformation.",
                "properties": {
                  "errorCode": {
                    "title": "ErrorCode",
                    "type": "string",
                    "pattern": "^[1-9]\\d{3}$",
                    "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                    "example": "5100"
                  },
                  "errorDescription": {
                    "title": "ErrorDescription",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "description": "Error description string."
                  },
                  "extensionList": {
                    "title": "ExtensionList",
                    "type": "object",
                    "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                    "properties": {
                      "extension": {
                        "type": "array",
                        "items": {
                          "title": "Extension",
                          "type": "object",
                          "description": "Data model for the complex type Extension.",
                          "properties": {
                            "key": {
                              "title": "ExtensionKey",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 32,
                              "description": "Extension key."
                            },
                            "value": {
                              "title": "ExtensionValue",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 128,
                              "description": "Extension value."
                            }
                          },
                          "required": [
                            "key",
                            "value"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 16,
                        "description": "Number of Extension elements."
                      }
                    },
                    "required": [
                      "extension"
                    ]
                  }
                },
                "required": [
                  "errorCode",
                  "errorDescription"
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "quoteId"
    ]
  },
  "IlpFulfilment": {
    "title": "IlpFulfilment",
    "type": "string",
    "pattern": "^[A-Za-z0-9-_]{43}$",
    "maxLength": 48,
    "description": "Fulfilment that must be attached to the transfer by the Payee.",
    "example": "WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8"
  },
  "TransferState": {
    "title": "TransferState",
    "type": "string",
    "enum": [
      "RECEIVED",
      "RESERVED",
      "COMMITTED",
      "ABORTED"
    ],
    "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Next ledger has received the transfer.\n- RESERVED - Next ledger has reserved the transfer.\n- COMMITTED - Next ledger has successfully performed the transfer.\n- ABORTED - Next ledger has aborted the transfer due to a rejection or failure to perform the transfer.",
    "example": "RESERVED"
  },
  "transferError": {
    "type": "object",
    "description": "This may be a Mojaloop API error returned from another entity in the scheme or an object representing other types of error e.g. exceptions that may occur inside the scheme adapter.",
    "properties": {
      "httpStatusCode": {
        "type": "integer",
        "description": "The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response."
      },
      "mojaloopError": {
        "type": "object",
        "properties": {
          "errorInformation": {
            "title": "ErrorInformation",
            "type": "object",
            "description": "Data model for the complex type ErrorInformation.",
            "properties": {
              "errorCode": {
                "title": "ErrorCode",
                "type": "string",
                "pattern": "^[1-9]\\d{3}$",
                "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                "example": "5100"
              },
              "errorDescription": {
                "title": "ErrorDescription",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Error description string."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "errorCode",
              "errorDescription"
            ]
          }
        }
      }
    }
  },
  "individualTransferResult": {
    "type": "object",
    "required": [
      "transferId"
    ],
    "properties": {
      "transferId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "fulfilment": {
        "title": "IlpFulfilment",
        "type": "string",
        "pattern": "^[A-Za-z0-9-_]{43}$",
        "maxLength": 48,
        "description": "Fulfilment that must be attached to the transfer by the Payee.",
        "example": "WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8"
      },
      "extensionList": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      },
      "transferState": {
        "title": "TransferState",
        "type": "string",
        "enum": [
          "RECEIVED",
          "RESERVED",
          "COMMITTED",
          "ABORTED"
        ],
        "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Next ledger has received the transfer.\n- RESERVED - Next ledger has reserved the transfer.\n- COMMITTED - Next ledger has successfully performed the transfer.\n- ABORTED - Next ledger has aborted the transfer due to a rejection or failure to perform the transfer.",
        "example": "RESERVED"
      },
      "lastError": {
        "type": "object",
        "description": "This may be a Mojaloop API error returned from another entity in the scheme or an object representing other types of error e.g. exceptions that may occur inside the scheme adapter.",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "description": "The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response."
          },
          "mojaloopError": {
            "type": "object",
            "properties": {
              "errorInformation": {
                "title": "ErrorInformation",
                "type": "object",
                "description": "Data model for the complex type ErrorInformation.",
                "properties": {
                  "errorCode": {
                    "title": "ErrorCode",
                    "type": "string",
                    "pattern": "^[1-9]\\d{3}$",
                    "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                    "example": "5100"
                  },
                  "errorDescription": {
                    "title": "ErrorDescription",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "description": "Error description string."
                  },
                  "extensionList": {
                    "title": "ExtensionList",
                    "type": "object",
                    "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                    "properties": {
                      "extension": {
                        "type": "array",
                        "items": {
                          "title": "Extension",
                          "type": "object",
                          "description": "Data model for the complex type Extension.",
                          "properties": {
                            "key": {
                              "title": "ExtensionKey",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 32,
                              "description": "Extension key."
                            },
                            "value": {
                              "title": "ExtensionValue",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 128,
                              "description": "Extension value."
                            }
                          },
                          "required": [
                            "key",
                            "value"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 16,
                        "description": "Number of Extension elements."
                      }
                    },
                    "required": [
                      "extension"
                    ]
                  }
                },
                "required": [
                  "errorCode",
                  "errorDescription"
                ]
              }
            }
          }
        }
      }
    }
  },
  "bulkTransactionIndividualTransferResult": {
    "type": "object",
    "required": [
      "homeTransactionId"
    ],
    "properties": {
      "transferId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "homeTransactionId": {
        "type": "string",
        "description": "Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems."
      },
      "transactionId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "to": {
        "title": "Party",
        "type": "object",
        "description": "Data model for the complex type Party.",
        "properties": {
          "partyIdInfo": {
            "title": "PartyIdInfo",
            "type": "object",
            "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
            "properties": {
              "partyIdType": {
                "title": "PartyIdType",
                "type": "string",
                "enum": [
                  "MSISDN",
                  "EMAIL",
                  "PERSONAL_ID",
                  "BUSINESS",
                  "DEVICE",
                  "ACCOUNT_ID",
                  "IBAN",
                  "ALIAS"
                ],
                "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
              },
              "partyIdentifier": {
                "title": "PartyIdentifier",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Identifier of the Party.",
                "example": "16135551212"
              },
              "partySubIdOrType": {
                "title": "PartySubIdOrType",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
              },
              "fspId": {
                "title": "FspId",
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "FSP identifier."
              },
              "extensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                "properties": {
                  "extension": {
                    "type": "array",
                    "items": {
                      "title": "Extension",
                      "type": "object",
                      "description": "Data model for the complex type Extension.",
                      "properties": {
                        "key": {
                          "title": "ExtensionKey",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 32,
                          "description": "Extension key."
                        },
                        "value": {
                          "title": "ExtensionValue",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Extension value."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 16,
                    "description": "Number of Extension elements."
                  }
                },
                "required": [
                  "extension"
                ]
              }
            },
            "required": [
              "partyIdType",
              "partyIdentifier"
            ]
          },
          "merchantClassificationCode": {
            "title": "MerchantClassificationCode",
            "type": "string",
            "pattern": "^[\\d]{1,4}$",
            "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
          },
          "name": {
            "title": "PartyName",
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "description": "Name of the Party. Could be a real name or a nickname."
          },
          "personalInfo": {
            "title": "PartyPersonalInfo",
            "type": "object",
            "description": "Data model for the complex type PartyPersonalInfo.",
            "properties": {
              "complexName": {
                "title": "PartyComplexName",
                "type": "object",
                "description": "Data model for the complex type PartyComplexName.",
                "properties": {
                  "firstName": {
                    "title": "FirstName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "First name of the Party (Name Type).",
                    "example": "Henrik"
                  },
                  "middleName": {
                    "title": "MiddleName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Middle name of the Party (Name Type).",
                    "example": "Johannes"
                  },
                  "lastName": {
                    "title": "LastName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                    "description": "Last name of the Party (Name Type).",
                    "example": "Karlsson"
                  }
                }
              },
              "dateOfBirth": {
                "title": "DateofBirth (type Date)",
                "type": "string",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                "description": "Date of Birth of the Party.",
                "example": "1966-06-16"
              }
            }
          }
        },
        "required": [
          "partyIdInfo"
        ]
      },
      "reference": {
        "description": "Payer Loan reference",
        "type": "string"
      },
      "amountType": {
        "title": "AmountType",
        "type": "string",
        "enum": [
          "SEND",
          "RECEIVE"
        ],
        "description": "Below are the allowed values for the enumeration AmountType.\n- SEND - Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees.\n- RECEIVE - Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive of any fees.",
        "example": "RECEIVE"
      },
      "currency": {
        "title": "Currency",
        "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
        "type": "string",
        "minLength": 3,
        "maxLength": 3,
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWD"
        ]
      },
      "amount": {
        "title": "Amount",
        "type": "string",
        "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
        "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
        "example": "123.45"
      },
      "note": {
        "title": "Note",
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "description": "Memo assigned to transaction.",
        "example": "Note sent to Payee."
      },
      "quoteId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "quoteResponse": {
        "type": "object",
        "properties": {
          "quoteId": {
            "title": "CorrelationId",
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
            "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          "transferAmount": {
            "title": "Money",
            "type": "object",
            "description": "Data model for the complex type Money.",
            "properties": {
              "currency": {
                "title": "Currency",
                "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STD",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "XTS",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWD"
                ]
              },
              "amount": {
                "title": "Amount",
                "type": "string",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                "example": "123.45"
              }
            },
            "required": [
              "currency",
              "amount"
            ]
          },
          "payeeReceiveAmount": {
            "title": "Money",
            "type": "object",
            "description": "Data model for the complex type Money.",
            "properties": {
              "currency": {
                "title": "Currency",
                "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STD",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "XTS",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWD"
                ]
              },
              "amount": {
                "title": "Amount",
                "type": "string",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                "example": "123.45"
              }
            },
            "required": [
              "currency",
              "amount"
            ]
          },
          "payeeFspFee": {
            "title": "Money",
            "type": "object",
            "description": "Data model for the complex type Money.",
            "properties": {
              "currency": {
                "title": "Currency",
                "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STD",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "XTS",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWD"
                ]
              },
              "amount": {
                "title": "Amount",
                "type": "string",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                "example": "123.45"
              }
            },
            "required": [
              "currency",
              "amount"
            ]
          },
          "payeeFspCommission": {
            "title": "Money",
            "type": "object",
            "description": "Data model for the complex type Money.",
            "properties": {
              "currency": {
                "title": "Currency",
                "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                  "AED",
                  "AFN",
                  "ALL",
                  "AMD",
                  "ANG",
                  "AOA",
                  "ARS",
                  "AUD",
                  "AWG",
                  "AZN",
                  "BAM",
                  "BBD",
                  "BDT",
                  "BGN",
                  "BHD",
                  "BIF",
                  "BMD",
                  "BND",
                  "BOB",
                  "BRL",
                  "BSD",
                  "BTN",
                  "BWP",
                  "BYN",
                  "BZD",
                  "CAD",
                  "CDF",
                  "CHF",
                  "CLP",
                  "CNY",
                  "COP",
                  "CRC",
                  "CUC",
                  "CUP",
                  "CVE",
                  "CZK",
                  "DJF",
                  "DKK",
                  "DOP",
                  "DZD",
                  "EGP",
                  "ERN",
                  "ETB",
                  "EUR",
                  "FJD",
                  "FKP",
                  "GBP",
                  "GEL",
                  "GGP",
                  "GHS",
                  "GIP",
                  "GMD",
                  "GNF",
                  "GTQ",
                  "GYD",
                  "HKD",
                  "HNL",
                  "HRK",
                  "HTG",
                  "HUF",
                  "IDR",
                  "ILS",
                  "IMP",
                  "INR",
                  "IQD",
                  "IRR",
                  "ISK",
                  "JEP",
                  "JMD",
                  "JOD",
                  "JPY",
                  "KES",
                  "KGS",
                  "KHR",
                  "KMF",
                  "KPW",
                  "KRW",
                  "KWD",
                  "KYD",
                  "KZT",
                  "LAK",
                  "LBP",
                  "LKR",
                  "LRD",
                  "LSL",
                  "LYD",
                  "MAD",
                  "MDL",
                  "MGA",
                  "MKD",
                  "MMK",
                  "MNT",
                  "MOP",
                  "MRO",
                  "MUR",
                  "MVR",
                  "MWK",
                  "MXN",
                  "MYR",
                  "MZN",
                  "NAD",
                  "NGN",
                  "NIO",
                  "NOK",
                  "NPR",
                  "NZD",
                  "OMR",
                  "PAB",
                  "PEN",
                  "PGK",
                  "PHP",
                  "PKR",
                  "PLN",
                  "PYG",
                  "QAR",
                  "RON",
                  "RSD",
                  "RUB",
                  "RWF",
                  "SAR",
                  "SBD",
                  "SCR",
                  "SDG",
                  "SEK",
                  "SGD",
                  "SHP",
                  "SLL",
                  "SOS",
                  "SPL",
                  "SRD",
                  "STD",
                  "SVC",
                  "SYP",
                  "SZL",
                  "THB",
                  "TJS",
                  "TMT",
                  "TND",
                  "TOP",
                  "TRY",
                  "TTD",
                  "TVD",
                  "TWD",
                  "TZS",
                  "UAH",
                  "UGX",
                  "USD",
                  "UYU",
                  "UZS",
                  "VEF",
                  "VND",
                  "VUV",
                  "WST",
                  "XAF",
                  "XCD",
                  "XDR",
                  "XOF",
                  "XPF",
                  "XTS",
                  "XXX",
                  "YER",
                  "ZAR",
                  "ZMW",
                  "ZWD"
                ]
              },
              "amount": {
                "title": "Amount",
                "type": "string",
                "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                "example": "123.45"
              }
            },
            "required": [
              "currency",
              "amount"
            ]
          },
          "geoCode": {
            "title": "GeoCode",
            "type": "object",
            "description": "Data model for the complex type GeoCode. Indicates the geographic location from where the transaction was initiated.",
            "properties": {
              "latitude": {
                "title": "Latitude",
                "type": "string",
                "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
                "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
                "example": "+45.4215"
              },
              "longitude": {
                "title": "Longitude",
                "type": "string",
                "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
                "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
                "example": "+75.6972"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ]
          },
          "ilpPacket": {
            "title": "IlpPacket",
            "type": "string",
            "pattern": "^[A-Za-z0-9-_]+[=]{0,2}$",
            "minLength": 1,
            "maxLength": 32768,
            "description": "Information for recipient (transport layer information).",
            "example": "AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"
          },
          "condition": {
            "title": "IlpCondition",
            "type": "string",
            "pattern": "^[A-Za-z0-9-_]{43}$",
            "maxLength": 48,
            "description": "Condition that must be attached to the transfer by the Payer."
          },
          "extensionList": {
            "title": "ExtensionList",
            "type": "object",
            "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
            "properties": {
              "extension": {
                "type": "array",
                "items": {
                  "title": "Extension",
                  "type": "object",
                  "description": "Data model for the complex type Extension.",
                  "properties": {
                    "key": {
                      "title": "ExtensionKey",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "Extension key."
                    },
                    "value": {
                      "title": "ExtensionValue",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Extension value."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 16,
                "description": "Number of Extension elements."
              }
            },
            "required": [
              "extension"
            ]
          },
          "lastError": {
            "type": "object",
            "description": "This object represents a Mojaloop API error received at any time during the quote process",
            "properties": {
              "httpStatusCode": {
                "type": "integer",
                "description": "The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response."
              },
              "mojaloopError": {
                "type": "object",
                "properties": {
                  "errorInformation": {
                    "title": "ErrorInformation",
                    "type": "object",
                    "description": "Data model for the complex type ErrorInformation.",
                    "properties": {
                      "errorCode": {
                        "title": "ErrorCode",
                        "type": "string",
                        "pattern": "^[1-9]\\d{3}$",
                        "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                        "example": "5100"
                      },
                      "errorDescription": {
                        "title": "ErrorDescription",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128,
                        "description": "Error description string."
                      },
                      "extensionList": {
                        "title": "ExtensionList",
                        "type": "object",
                        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                        "properties": {
                          "extension": {
                            "type": "array",
                            "items": {
                              "title": "Extension",
                              "type": "object",
                              "description": "Data model for the complex type Extension.",
                              "properties": {
                                "key": {
                                  "title": "ExtensionKey",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 32,
                                  "description": "Extension key."
                                },
                                "value": {
                                  "title": "ExtensionValue",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 128,
                                  "description": "Extension value."
                                }
                              },
                              "required": [
                                "key",
                                "value"
                              ]
                            },
                            "minItems": 1,
                            "maxItems": 16,
                            "description": "Number of Extension elements."
                          }
                        },
                        "required": [
                          "extension"
                        ]
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorDescription"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "quoteId"
        ]
      },
      "fulfil": {
        "type": "object",
        "required": [
          "transferId"
        ],
        "properties": {
          "transferId": {
            "title": "CorrelationId",
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
            "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          },
          "fulfilment": {
            "title": "IlpFulfilment",
            "type": "string",
            "pattern": "^[A-Za-z0-9-_]{43}$",
            "maxLength": 48,
            "description": "Fulfilment that must be attached to the transfer by the Payee.",
            "example": "WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8"
          },
          "extensionList": {
            "title": "ExtensionList",
            "type": "object",
            "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
            "properties": {
              "extension": {
                "type": "array",
                "items": {
                  "title": "Extension",
                  "type": "object",
                  "description": "Data model for the complex type Extension.",
                  "properties": {
                    "key": {
                      "title": "ExtensionKey",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "Extension key."
                    },
                    "value": {
                      "title": "ExtensionValue",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Extension value."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 16,
                "description": "Number of Extension elements."
              }
            },
            "required": [
              "extension"
            ]
          },
          "transferState": {
            "title": "TransferState",
            "type": "string",
            "enum": [
              "RECEIVED",
              "RESERVED",
              "COMMITTED",
              "ABORTED"
            ],
            "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Next ledger has received the transfer.\n- RESERVED - Next ledger has reserved the transfer.\n- COMMITTED - Next ledger has successfully performed the transfer.\n- ABORTED - Next ledger has aborted the transfer due to a rejection or failure to perform the transfer.",
            "example": "RESERVED"
          },
          "lastError": {
            "type": "object",
            "description": "This may be a Mojaloop API error returned from another entity in the scheme or an object representing other types of error e.g. exceptions that may occur inside the scheme adapter.",
            "properties": {
              "httpStatusCode": {
                "type": "integer",
                "description": "The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response."
              },
              "mojaloopError": {
                "type": "object",
                "properties": {
                  "errorInformation": {
                    "title": "ErrorInformation",
                    "type": "object",
                    "description": "Data model for the complex type ErrorInformation.",
                    "properties": {
                      "errorCode": {
                        "title": "ErrorCode",
                        "type": "string",
                        "pattern": "^[1-9]\\d{3}$",
                        "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                        "example": "5100"
                      },
                      "errorDescription": {
                        "title": "ErrorDescription",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128,
                        "description": "Error description string."
                      },
                      "extensionList": {
                        "title": "ExtensionList",
                        "type": "object",
                        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                        "properties": {
                          "extension": {
                            "type": "array",
                            "items": {
                              "title": "Extension",
                              "type": "object",
                              "description": "Data model for the complex type Extension.",
                              "properties": {
                                "key": {
                                  "title": "ExtensionKey",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 32,
                                  "description": "Extension key."
                                },
                                "value": {
                                  "title": "ExtensionValue",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 128,
                                  "description": "Extension value."
                                }
                              },
                              "required": [
                                "key",
                                "value"
                              ]
                            },
                            "minItems": 1,
                            "maxItems": 16,
                            "description": "Number of Extension elements."
                          }
                        },
                        "required": [
                          "extension"
                        ]
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorDescription"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "quoteExtensions": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      },
      "transferExtensions": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      },
      "lastError": {
        "type": "object",
        "description": "This may be a Mojaloop API error returned from another entity in the scheme or an object representing other types of error e.g. exceptions that may occur inside the scheme adapter.",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "description": "The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response."
          },
          "mojaloopError": {
            "type": "object",
            "properties": {
              "errorInformation": {
                "title": "ErrorInformation",
                "type": "object",
                "description": "Data model for the complex type ErrorInformation.",
                "properties": {
                  "errorCode": {
                    "title": "ErrorCode",
                    "type": "string",
                    "pattern": "^[1-9]\\d{3}$",
                    "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                    "example": "5100"
                  },
                  "errorDescription": {
                    "title": "ErrorDescription",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "description": "Error description string."
                  },
                  "extensionList": {
                    "title": "ExtensionList",
                    "type": "object",
                    "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                    "properties": {
                      "extension": {
                        "type": "array",
                        "items": {
                          "title": "Extension",
                          "type": "object",
                          "description": "Data model for the complex type Extension.",
                          "properties": {
                            "key": {
                              "title": "ExtensionKey",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 32,
                              "description": "Extension key."
                            },
                            "value": {
                              "title": "ExtensionValue",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 128,
                              "description": "Extension value."
                            }
                          },
                          "required": [
                            "key",
                            "value"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 16,
                        "description": "Number of Extension elements."
                      }
                    },
                    "required": [
                      "extension"
                    ]
                  }
                },
                "required": [
                  "errorCode",
                  "errorDescription"
                ]
              }
            }
          }
        }
      }
    }
  },
  "bulkTransactionResponse": {
    "title": "BulkTransactionResponse",
    "type": "object",
    "required": [
      "bulkHomeTransactionID",
      "bulkTransactionId",
      "currentState",
      "individualTransferResults"
    ],
    "properties": {
      "bulkHomeTransactionID": {
        "type": "string",
        "description": "Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems."
      },
      "bulkTransactionId": {
        "title": "CorrelationId",
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
        "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
        "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
      },
      "currentState": {
        "type": "string",
        "enum": [
          "ERROR_OCCURRED",
          "WAITING_FOR_PARTY_ACCEPTANCE",
          "WAITING_FOR_QUOTE_ACCEPTANCE",
          "COMPLETED"
        ]
      },
      "options": {
        "type": "object",
        "required": [
          "autoAcceptParty",
          "autoAcceptQuote",
          "bulkExpiration"
        ],
        "properties": {
          "onlyValidateParty": {
            "description": "Set to true if only party validation is required.  This means the quotes and transfers will not run. This is useful for only party resolution.",
            "type": "boolean"
          },
          "autoAcceptParty": {
            "type": "object",
            "required": [
              "enabled"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "enum": [
                  false,
                  true
                ]
              }
            }
          },
          "autoAcceptQuote": {
            "description": "Set to true if the quote response is accepted without confirmation from the payer. The fees applied by the payee will be acceptable to the payer abiding by the limits set by optional 'perTransferFeeLimits' array.",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "enabled"
                ],
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "enum": [
                      true,
                      false
                    ]
                  },
                  "perTransferFeeLimits": {
                    "type": "array",
                    "minItems": 0,
                    "items": {
                      "type": "object",
                      "required": [
                        "currency",
                        "amount"
                      ],
                      "properties": {
                        "currency": {
                          "title": "Currency",
                          "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 3,
                          "enum": [
                            "AED",
                            "AFN",
                            "ALL",
                            "AMD",
                            "ANG",
                            "AOA",
                            "ARS",
                            "AUD",
                            "AWG",
                            "AZN",
                            "BAM",
                            "BBD",
                            "BDT",
                            "BGN",
                            "BHD",
                            "BIF",
                            "BMD",
                            "BND",
                            "BOB",
                            "BRL",
                            "BSD",
                            "BTN",
                            "BWP",
                            "BYN",
                            "BZD",
                            "CAD",
                            "CDF",
                            "CHF",
                            "CLP",
                            "CNY",
                            "COP",
                            "CRC",
                            "CUC",
                            "CUP",
                            "CVE",
                            "CZK",
                            "DJF",
                            "DKK",
                            "DOP",
                            "DZD",
                            "EGP",
                            "ERN",
                            "ETB",
                            "EUR",
                            "FJD",
                            "FKP",
                            "GBP",
                            "GEL",
                            "GGP",
                            "GHS",
                            "GIP",
                            "GMD",
                            "GNF",
                            "GTQ",
                            "GYD",
                            "HKD",
                            "HNL",
                            "HRK",
                            "HTG",
                            "HUF",
                            "IDR",
                            "ILS",
                            "IMP",
                            "INR",
                            "IQD",
                            "IRR",
                            "ISK",
                            "JEP",
                            "JMD",
                            "JOD",
                            "JPY",
                            "KES",
                            "KGS",
                            "KHR",
                            "KMF",
                            "KPW",
                            "KRW",
                            "KWD",
                            "KYD",
                            "KZT",
                            "LAK",
                            "LBP",
                            "LKR",
                            "LRD",
                            "LSL",
                            "LYD",
                            "MAD",
                            "MDL",
                            "MGA",
                            "MKD",
                            "MMK",
                            "MNT",
                            "MOP",
                            "MRO",
                            "MUR",
                            "MVR",
                            "MWK",
                            "MXN",
                            "MYR",
                            "MZN",
                            "NAD",
                            "NGN",
                            "NIO",
                            "NOK",
                            "NPR",
                            "NZD",
                            "OMR",
                            "PAB",
                            "PEN",
                            "PGK",
                            "PHP",
                            "PKR",
                            "PLN",
                            "PYG",
                            "QAR",
                            "RON",
                            "RSD",
                            "RUB",
                            "RWF",
                            "SAR",
                            "SBD",
                            "SCR",
                            "SDG",
                            "SEK",
                            "SGD",
                            "SHP",
                            "SLL",
                            "SOS",
                            "SPL",
                            "SRD",
                            "STD",
                            "SVC",
                            "SYP",
                            "SZL",
                            "THB",
                            "TJS",
                            "TMT",
                            "TND",
                            "TOP",
                            "TRY",
                            "TTD",
                            "TVD",
                            "TWD",
                            "TZS",
                            "UAH",
                            "UGX",
                            "USD",
                            "UYU",
                            "UZS",
                            "VEF",
                            "VND",
                            "VUV",
                            "WST",
                            "XAF",
                            "XCD",
                            "XDR",
                            "XOF",
                            "XPF",
                            "XTS",
                            "XXX",
                            "YER",
                            "ZAR",
                            "ZMW",
                            "ZWD"
                          ]
                        },
                        "amount": {
                          "title": "Amount",
                          "type": "string",
                          "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                          "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                          "example": "123.45"
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "skipPartyLookup": {
            "description": "Set to true if supplying an FSPID for the payee party and no party resolution is needed. This may be useful if a previous party resolution has been performed.",
            "type": "boolean"
          },
          "synchronous": {
            "description": "Set to true if the bulkTransfer requests need be handled synchronous. Otherwise the requests will be handled asynchronously, meaning there will  be callbacks whenever the processing is done",
            "type": "boolean"
          },
          "bulkExpiration": {
            "title": "DateTime",
            "type": "string",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",
            "description": "The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).",
            "example": "2016-05-24T08:38:08.699-04:00"
          }
        }
      },
      "individualTransferResults": {
        "description": "List of individual transfer result in a bulk transfer response.",
        "type": "array",
        "minItems": 1,
        "items": {
          "type": "object",
          "required": [
            "homeTransactionId"
          ],
          "properties": {
            "transferId": {
              "title": "CorrelationId",
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
              "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
            },
            "homeTransactionId": {
              "type": "string",
              "description": "Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems."
            },
            "transactionId": {
              "title": "CorrelationId",
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
              "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
            },
            "to": {
              "title": "Party",
              "type": "object",
              "description": "Data model for the complex type Party.",
              "properties": {
                "partyIdInfo": {
                  "title": "PartyIdInfo",
                  "type": "object",
                  "description": "Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1",
                  "properties": {
                    "partyIdType": {
                      "title": "PartyIdType",
                      "type": "string",
                      "enum": [
                        "MSISDN",
                        "EMAIL",
                        "PERSONAL_ID",
                        "BUSINESS",
                        "DEVICE",
                        "ACCOUNT_ID",
                        "IBAN",
                        "ALIAS"
                      ],
                      "description": "Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
                    },
                    "partyIdentifier": {
                      "title": "PartyIdentifier",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Identifier of the Party.",
                      "example": "16135551212"
                    },
                    "partySubIdOrType": {
                      "title": "PartySubIdOrType",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128,
                      "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
                    },
                    "fspId": {
                      "title": "FspId",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 32,
                      "description": "FSP identifier."
                    },
                    "extensionList": {
                      "title": "ExtensionList",
                      "type": "object",
                      "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                      "properties": {
                        "extension": {
                          "type": "array",
                          "items": {
                            "title": "Extension",
                            "type": "object",
                            "description": "Data model for the complex type Extension.",
                            "properties": {
                              "key": {
                                "title": "ExtensionKey",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "description": "Extension key."
                              },
                              "value": {
                                "title": "ExtensionValue",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 128,
                                "description": "Extension value."
                              }
                            },
                            "required": [
                              "key",
                              "value"
                            ]
                          },
                          "minItems": 1,
                          "maxItems": 16,
                          "description": "Number of Extension elements."
                        }
                      },
                      "required": [
                        "extension"
                      ]
                    }
                  },
                  "required": [
                    "partyIdType",
                    "partyIdentifier"
                  ]
                },
                "merchantClassificationCode": {
                  "title": "MerchantClassificationCode",
                  "type": "string",
                  "pattern": "^[\\d]{1,4}$",
                  "description": "A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."
                },
                "name": {
                  "title": "PartyName",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Name of the Party. Could be a real name or a nickname."
                },
                "personalInfo": {
                  "title": "PartyPersonalInfo",
                  "type": "object",
                  "description": "Data model for the complex type PartyPersonalInfo.",
                  "properties": {
                    "complexName": {
                      "title": "PartyComplexName",
                      "type": "object",
                      "description": "Data model for the complex type PartyComplexName.",
                      "properties": {
                        "firstName": {
                          "title": "FirstName",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                          "description": "First name of the Party (Name Type).",
                          "example": "Henrik"
                        },
                        "middleName": {
                          "title": "MiddleName",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                          "description": "Middle name of the Party (Name Type).",
                          "example": "Johannes"
                        },
                        "lastName": {
                          "title": "LastName",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "pattern": "^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$",
                          "description": "Last name of the Party (Name Type).",
                          "example": "Karlsson"
                        }
                      }
                    },
                    "dateOfBirth": {
                      "title": "DateofBirth (type Date)",
                      "type": "string",
                      "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                      "description": "Date of Birth of the Party.",
                      "example": "1966-06-16"
                    }
                  }
                }
              },
              "required": [
                "partyIdInfo"
              ]
            },
            "reference": {
              "description": "Payer Loan reference",
              "type": "string"
            },
            "amountType": {
              "title": "AmountType",
              "type": "string",
              "enum": [
                "SEND",
                "RECEIVE"
              ],
              "description": "Below are the allowed values for the enumeration AmountType.\n- SEND - Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees.\n- RECEIVE - Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive of any fees.",
              "example": "RECEIVE"
            },
            "currency": {
              "title": "Currency",
              "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTN",
                "BWP",
                "BYN",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GGP",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "IMP",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JEP",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SPL",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEF",
                "VND",
                "VUV",
                "WST",
                "XAF",
                "XCD",
                "XDR",
                "XOF",
                "XPF",
                "XTS",
                "XXX",
                "YER",
                "ZAR",
                "ZMW",
                "ZWD"
              ]
            },
            "amount": {
              "title": "Amount",
              "type": "string",
              "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
              "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
              "example": "123.45"
            },
            "note": {
              "title": "Note",
              "type": "string",
              "minLength": 1,
              "maxLength": 128,
              "description": "Memo assigned to transaction.",
              "example": "Note sent to Payee."
            },
            "quoteId": {
              "title": "CorrelationId",
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
              "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
            },
            "quoteResponse": {
              "type": "object",
              "properties": {
                "quoteId": {
                  "title": "CorrelationId",
                  "type": "string",
                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
                  "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
                },
                "transferAmount": {
                  "title": "Money",
                  "type": "object",
                  "description": "Data model for the complex type Money.",
                  "properties": {
                    "currency": {
                      "title": "Currency",
                      "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "XTS",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWD"
                      ]
                    },
                    "amount": {
                      "title": "Amount",
                      "type": "string",
                      "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                      "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                      "example": "123.45"
                    }
                  },
                  "required": [
                    "currency",
                    "amount"
                  ]
                },
                "payeeReceiveAmount": {
                  "title": "Money",
                  "type": "object",
                  "description": "Data model for the complex type Money.",
                  "properties": {
                    "currency": {
                      "title": "Currency",
                      "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "XTS",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWD"
                      ]
                    },
                    "amount": {
                      "title": "Amount",
                      "type": "string",
                      "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                      "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                      "example": "123.45"
                    }
                  },
                  "required": [
                    "currency",
                    "amount"
                  ]
                },
                "payeeFspFee": {
                  "title": "Money",
                  "type": "object",
                  "description": "Data model for the complex type Money.",
                  "properties": {
                    "currency": {
                      "title": "Currency",
                      "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "XTS",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWD"
                      ]
                    },
                    "amount": {
                      "title": "Amount",
                      "type": "string",
                      "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                      "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                      "example": "123.45"
                    }
                  },
                  "required": [
                    "currency",
                    "amount"
                  ]
                },
                "payeeFspCommission": {
                  "title": "Money",
                  "type": "object",
                  "description": "Data model for the complex type Money.",
                  "properties": {
                    "currency": {
                      "title": "Currency",
                      "description": "The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHF",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GGP",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "IMP",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JEP",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SPL",
                        "SRD",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TVD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPF",
                        "XTS",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMW",
                        "ZWD"
                      ]
                    },
                    "amount": {
                      "title": "Amount",
                      "type": "string",
                      "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",
                      "description": "The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.",
                      "example": "123.45"
                    }
                  },
                  "required": [
                    "currency",
                    "amount"
                  ]
                },
                "geoCode": {
                  "title": "GeoCode",
                  "type": "object",
                  "description": "Data model for the complex type GeoCode. Indicates the geographic location from where the transaction was initiated.",
                  "properties": {
                    "latitude": {
                      "title": "Latitude",
                      "type": "string",
                      "pattern": "^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",
                      "description": "The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
                      "example": "+45.4215"
                    },
                    "longitude": {
                      "title": "Longitude",
                      "type": "string",
                      "pattern": "^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",
                      "description": "The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.",
                      "example": "+75.6972"
                    }
                  },
                  "required": [
                    "latitude",
                    "longitude"
                  ]
                },
                "ilpPacket": {
                  "title": "IlpPacket",
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]+[=]{0,2}$",
                  "minLength": 1,
                  "maxLength": 32768,
                  "description": "Information for recipient (transport layer information).",
                  "example": "AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"
                },
                "condition": {
                  "title": "IlpCondition",
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]{43}$",
                  "maxLength": 48,
                  "description": "Condition that must be attached to the transfer by the Payer."
                },
                "extensionList": {
                  "title": "ExtensionList",
                  "type": "object",
                  "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                  "properties": {
                    "extension": {
                      "type": "array",
                      "items": {
                        "title": "Extension",
                        "type": "object",
                        "description": "Data model for the complex type Extension.",
                        "properties": {
                          "key": {
                            "title": "ExtensionKey",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32,
                            "description": "Extension key."
                          },
                          "value": {
                            "title": "ExtensionValue",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128,
                            "description": "Extension value."
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "minItems": 1,
                      "maxItems": 16,
                      "description": "Number of Extension elements."
                    }
                  },
                  "required": [
                    "extension"
                  ]
                },
                "lastError": {
                  "type": "object",
                  "description": "This object represents a Mojaloop API error received at any time during the quote process",
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer",
                      "description": "The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response."
                    },
                    "mojaloopError": {
                      "type": "object",
                      "properties": {
                        "errorInformation": {
                          "title": "ErrorInformation",
                          "type": "object",
                          "description": "Data model for the complex type ErrorInformation.",
                          "properties": {
                            "errorCode": {
                              "title": "ErrorCode",
                              "type": "string",
                              "pattern": "^[1-9]\\d{3}$",
                              "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                              "example": "5100"
                            },
                            "errorDescription": {
                              "title": "ErrorDescription",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 128,
                              "description": "Error description string."
                            },
                            "extensionList": {
                              "title": "ExtensionList",
                              "type": "object",
                              "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                              "properties": {
                                "extension": {
                                  "type": "array",
                                  "items": {
                                    "title": "Extension",
                                    "type": "object",
                                    "description": "Data model for the complex type Extension.",
                                    "properties": {
                                      "key": {
                                        "title": "ExtensionKey",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32,
                                        "description": "Extension key."
                                      },
                                      "value": {
                                        "title": "ExtensionValue",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 128,
                                        "description": "Extension value."
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "value"
                                    ]
                                  },
                                  "minItems": 1,
                                  "maxItems": 16,
                                  "description": "Number of Extension elements."
                                }
                              },
                              "required": [
                                "extension"
                              ]
                            }
                          },
                          "required": [
                            "errorCode",
                            "errorDescription"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "quoteId"
              ]
            },
            "fulfil": {
              "type": "object",
              "required": [
                "transferId"
              ],
              "properties": {
                "transferId": {
                  "title": "CorrelationId",
                  "type": "string",
                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "description": "Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).",
                  "example": "b51ec534-ee48-4575-b6a9-ead2955b8069"
                },
                "fulfilment": {
                  "title": "IlpFulfilment",
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_]{43}$",
                  "maxLength": 48,
                  "description": "Fulfilment that must be attached to the transfer by the Payee.",
                  "example": "WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8"
                },
                "extensionList": {
                  "title": "ExtensionList",
                  "type": "object",
                  "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                  "properties": {
                    "extension": {
                      "type": "array",
                      "items": {
                        "title": "Extension",
                        "type": "object",
                        "description": "Data model for the complex type Extension.",
                        "properties": {
                          "key": {
                            "title": "ExtensionKey",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32,
                            "description": "Extension key."
                          },
                          "value": {
                            "title": "ExtensionValue",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128,
                            "description": "Extension value."
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      },
                      "minItems": 1,
                      "maxItems": 16,
                      "description": "Number of Extension elements."
                    }
                  },
                  "required": [
                    "extension"
                  ]
                },
                "transferState": {
                  "title": "TransferState",
                  "type": "string",
                  "enum": [
                    "RECEIVED",
                    "RESERVED",
                    "COMMITTED",
                    "ABORTED"
                  ],
                  "description": "Below are the allowed values for the enumeration.\n- RECEIVED - Next ledger has received the transfer.\n- RESERVED - Next ledger has reserved the transfer.\n- COMMITTED - Next ledger has successfully performed the transfer.\n- ABORTED - Next ledger has aborted the transfer due to a rejection or failure to perform the transfer.",
                  "example": "RESERVED"
                },
                "lastError": {
                  "type": "object",
                  "description": "This may be a Mojaloop API error returned from another entity in the scheme or an object representing other types of error e.g. exceptions that may occur inside the scheme adapter.",
                  "properties": {
                    "httpStatusCode": {
                      "type": "integer",
                      "description": "The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response."
                    },
                    "mojaloopError": {
                      "type": "object",
                      "properties": {
                        "errorInformation": {
                          "title": "ErrorInformation",
                          "type": "object",
                          "description": "Data model for the complex type ErrorInformation.",
                          "properties": {
                            "errorCode": {
                              "title": "ErrorCode",
                              "type": "string",
                              "pattern": "^[1-9]\\d{3}$",
                              "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                              "example": "5100"
                            },
                            "errorDescription": {
                              "title": "ErrorDescription",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 128,
                              "description": "Error description string."
                            },
                            "extensionList": {
                              "title": "ExtensionList",
                              "type": "object",
                              "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                              "properties": {
                                "extension": {
                                  "type": "array",
                                  "items": {
                                    "title": "Extension",
                                    "type": "object",
                                    "description": "Data model for the complex type Extension.",
                                    "properties": {
                                      "key": {
                                        "title": "ExtensionKey",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32,
                                        "description": "Extension key."
                                      },
                                      "value": {
                                        "title": "ExtensionValue",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 128,
                                        "description": "Extension value."
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "value"
                                    ]
                                  },
                                  "minItems": 1,
                                  "maxItems": 16,
                                  "description": "Number of Extension elements."
                                }
                              },
                              "required": [
                                "extension"
                              ]
                            }
                          },
                          "required": [
                            "errorCode",
                            "errorDescription"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "quoteExtensions": {
              "title": "ExtensionList",
              "type": "object",
              "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
              "properties": {
                "extension": {
                  "type": "array",
                  "items": {
                    "title": "Extension",
                    "type": "object",
                    "description": "Data model for the complex type Extension.",
                    "properties": {
                      "key": {
                        "title": "ExtensionKey",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Extension key."
                      },
                      "value": {
                        "title": "ExtensionValue",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128,
                        "description": "Extension value."
                      }
                    },
                    "required": [
                      "key",
                      "value"
                    ]
                  },
                  "minItems": 1,
                  "maxItems": 16,
                  "description": "Number of Extension elements."
                }
              },
              "required": [
                "extension"
              ]
            },
            "transferExtensions": {
              "title": "ExtensionList",
              "type": "object",
              "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
              "properties": {
                "extension": {
                  "type": "array",
                  "items": {
                    "title": "Extension",
                    "type": "object",
                    "description": "Data model for the complex type Extension.",
                    "properties": {
                      "key": {
                        "title": "ExtensionKey",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Extension key."
                      },
                      "value": {
                        "title": "ExtensionValue",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128,
                        "description": "Extension value."
                      }
                    },
                    "required": [
                      "key",
                      "value"
                    ]
                  },
                  "minItems": 1,
                  "maxItems": 16,
                  "description": "Number of Extension elements."
                }
              },
              "required": [
                "extension"
              ]
            },
            "lastError": {
              "type": "object",
              "description": "This may be a Mojaloop API error returned from another entity in the scheme or an object representing other types of error e.g. exceptions that may occur inside the scheme adapter.",
              "properties": {
                "httpStatusCode": {
                  "type": "integer",
                  "description": "The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response."
                },
                "mojaloopError": {
                  "type": "object",
                  "properties": {
                    "errorInformation": {
                      "title": "ErrorInformation",
                      "type": "object",
                      "description": "Data model for the complex type ErrorInformation.",
                      "properties": {
                        "errorCode": {
                          "title": "ErrorCode",
                          "type": "string",
                          "pattern": "^[1-9]\\d{3}$",
                          "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.",
                          "example": "5100"
                        },
                        "errorDescription": {
                          "title": "ErrorDescription",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128,
                          "description": "Error description string."
                        },
                        "extensionList": {
                          "title": "ExtensionList",
                          "type": "object",
                          "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
                          "properties": {
                            "extension": {
                              "type": "array",
                              "items": {
                                "title": "Extension",
                                "type": "object",
                                "description": "Data model for the complex type Extension.",
                                "properties": {
                                  "key": {
                                    "title": "ExtensionKey",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 32,
                                    "description": "Extension key."
                                  },
                                  "value": {
                                    "title": "ExtensionValue",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 128,
                                    "description": "Extension value."
                                  }
                                },
                                "required": [
                                  "key",
                                  "value"
                                ]
                              },
                              "minItems": 1,
                              "maxItems": 16,
                              "description": "Number of Extension elements."
                            }
                          },
                          "required": [
                            "extension"
                          ]
                        }
                      },
                      "required": [
                        "errorCode",
                        "errorDescription"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "extensions": {
        "title": "ExtensionList",
        "type": "object",
        "description": "Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",
        "properties": {
          "extension": {
            "type": "array",
            "items": {
              "title": "Extension",
              "type": "object",
              "description": "Data model for the complex type Extension.",
              "properties": {
                "key": {
                  "title": "ExtensionKey",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32,
                  "description": "Extension key."
                },
                "value": {
                  "title": "ExtensionValue",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128,
                  "description": "Extension value."
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "minItems": 1,
            "maxItems": 16,
            "description": "Number of Extension elements."
          }
        },
        "required": [
          "extension"
        ]
      }
    }
  },
  "AuthenticationType": {
    "title": "AuthenticationType",
    "type": "string",
    "enum": [
      "OTP",
      "QRCODE",
      "U2F"
    ],
    "description": "Below are the allowed values for the enumeration AuthenticationType.\n- OTP - One-time password generated by the Payer FSP.\n- QRCODE - QR code used as One Time Password.\n- U2F - U2F is a new addition isolated to Thirdparty stream.",
    "example": "OTP"
  }
}